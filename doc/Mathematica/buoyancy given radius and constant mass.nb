(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    762935,      14190]
NotebookOptionsPosition[    762024,      14156]
NotebookOutlinePosition[    762405,      14172]
CellTagsIndexPosition[    762362,      14169]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"init", ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Delta]t", "=", "0.01"}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"v", "=", 
       RowBox[{"r", "=", "0"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fluidDensity", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"gravity", "=", 
      RowBox[{"-", "9.81"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"step", "[", 
    RowBox[{"radius_", ",", "mass_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"(*", "Buoyancy", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"volume", "=", 
         RowBox[{
          FractionBox["4", "3"], "\[Pi]", " ", 
          SuperscriptBox["radius", "3"]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "+=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"fluidDensity", "-", 
            FractionBox["mass", "volume"]}], ")"}], "*", "volume"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"f", "+=", 
         RowBox[{"gravity", "*", "mass"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", "Integrate", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"v", " ", "+=", 
      RowBox[{"f", "*", "\[Delta]t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", " ", "+=", 
      RowBox[{"v", "*", "\[Delta]t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", "*=", "0.97"}], ";", "\[IndentingNewLine]", "r"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.699851549448615*^9, 3.699851644872716*^9}, {
  3.699851725089346*^9, 3.6998517291684384`*^9}, {3.6998519978156023`*^9, 
  3.699852010649661*^9}, {3.6998522517766542`*^9, 3.6998522529367723`*^9}, {
  3.6998523130818434`*^9, 3.699852319114607*^9}, {3.6998523564898853`*^9, 
  3.6998523586826534`*^9}, {3.699852611338642*^9, 3.6998527879219575`*^9}, {
  3.699854568236479*^9, 3.699854639389167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trajectory", "[", 
    RowBox[{"radius_", ",", "mass_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"init", ";", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"step", "[", 
        RowBox[{"radius", ",", "mass"}], "]"}], ",", "50"}], "]"}]}], ")"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.699851787508475*^9, 3.6998518212807307`*^9}, {
   3.699851894777446*^9, 3.6998519029381337`*^9}, {3.6998519639692307`*^9, 
   3.6998519803538694`*^9}, {3.6998520747616158`*^9, 
   3.6998520876488023`*^9}, {3.6998521467451982`*^9, 3.6998521517342196`*^9}, 
   3.6998521889627857`*^9, {3.6998522624568644`*^9, 3.699852263690553*^9}, {
   3.6998523642878947`*^9, 3.69985240050464*^9}, {3.699852565203643*^9, 
   3.699852565328765*^9}, {3.6998528070814734`*^9, 3.6998528092569413`*^9}, {
   3.6998546652495813`*^9, 3.6998546657370787`*^9}, {3.6998549754098616`*^9, 
   3.699854976409319*^9}, {3.6998679206031485`*^9, 3.6998679218269315`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trajectory", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6998549591754236`*^9, 3.699854964313352*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.000662120979521361`"}], ",", 
   RowBox[{"-", "0.0019664993091784424`"}], ",", 
   RowBox[{"-", "0.0038938672684671726`"}], ",", 
   RowBox[{"-", "0.006425535168498602`"}], ",", 
   RowBox[{"-", "0.009543374011050449`"}], ",", 
   RowBox[{"-", "0.013229798667847101`"}], ",", 
   RowBox[{"-", "0.017467751564461217`"}], ",", 
   RowBox[{"-", "0.022240686853698267`"}], ",", 
   RowBox[{"-", "0.02753255506377957`"}], ",", 
   RowBox[{"-", "0.033327788207079795`"}], ",", 
   RowBox[{"-", "0.039611285335602375`"}], ",", 
   RowBox[{"-", "0.04636839852979063`"}], ",", 
   RowBox[{"-", "0.05358491930767461`"}], ",", 
   RowBox[{"-", "0.06124706544174342`"}], ",", 
   RowBox[{"-", "0.06934146817131154`"}], ",", 
   RowBox[{"-", "0.07785515979851397`"}], ",", 
   RowBox[{"-", "0.0867755616564217`"}], ",", 
   RowBox[{"-", "0.09609047243811354`"}], ",", 
   RowBox[{"-", "0.105788056875876`"}], ",", 
   RowBox[{"-", "0.11585683476002695`"}], ",", 
   RowBox[{"-", "0.12628567028717472`"}], ",", 
   RowBox[{"-", "0.13706376172802942`"}], ",", 
   RowBox[{"-", "0.14818063140517984`"}], ",", 
   RowBox[{"-", "0.1596261159715371`"}], ",", 
   RowBox[{"-", "0.17139035698042504`"}], ",", 
   RowBox[{"-", "0.18346379173856767`"}], ",", 
   RowBox[{"-", "0.19583714443348738`"}], ",", 
   RowBox[{"-", "0.20850141752708087`"}], ",", 
   RowBox[{"-", "0.2214478834073879`"}], ",", 
   RowBox[{"-", "0.2346680762908071`"}], ",", 
   RowBox[{"-", "0.24815378436724508`"}], ",", 
   RowBox[{"-", "0.26189704218091125`"}], ",", 
   RowBox[{"-", "0.2758901232396888`"}], ",", 
   RowBox[{"-", "0.29012553284622444`"}], ",", 
   RowBox[{"-", "0.30459600114408536`"}], ",", 
   RowBox[{"-", "0.3192944763725318`"}], ",", 
   RowBox[{"-", "0.33421411832364617`"}], ",", 
   RowBox[{"-", "0.3493482919957485`"}], ",", 
   RowBox[{"-", "0.3646905614372091`"}], ",", 
   RowBox[{"-", "0.3802346837749473`"}], ",", 
   RowBox[{"-", "0.3959746034220747`"}], ",", 
   RowBox[{"-", "0.4119044464593096`"}], ",", 
   RowBox[{"-", "0.4280185151849489`"}], ",", 
   RowBox[{"-", "0.4443112828283403`"}], ",", 
   RowBox[{"-", "0.4607773884219514`"}], ",", 
   RowBox[{"-", "0.4774116318272754`"}], ",", 
   RowBox[{"-", "0.49420896890996113`"}], ",", 
   RowBox[{"-", "0.5111645068596876`"}], ",", 
   RowBox[{"-", "0.5282734996504437`"}], ",", 
   RowBox[{"-", "0.5455313436369984`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.699854964716739*^9, 3.699854983057604*^9}, 
   3.6998679251131244`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rads", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"radius", ",", 
         RowBox[{"{", 
          RowBox[{"radius", ",", "0.5", ",", "2", ",", "0.2"}], "}"}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"trajectory", "[", 
          RowBox[{"#", ",", "mass"}], "]"}], "&"}], "/@", "rads"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "rads"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<Mass = ``\>\"", ",", "mass"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mass", ",", "0", ",", "4", ",", "0.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.699852411181653*^9, 3.699852535953086*^9}, {
  3.6998528155221815`*^9, 3.6998528642817216`*^9}, {3.699852932850046*^9, 
  3.6998529364784865`*^9}, {3.699853000851699*^9, 3.6998531472151814`*^9}, {
  3.6998538416973305`*^9, 3.6998539271300497`*^9}, {3.6998542012660694`*^9, 
  3.6998542103137894`*^9}, {3.6998543208176603`*^9, 3.6998544224173717`*^9}, {
  3.6998546763786173`*^9, 3.6998547397132573`*^9}, {3.699854840738681*^9, 
  3.699854841313759*^9}, {3.6998550249221745`*^9, 3.699855030522052*^9}, {
  3.6998614657875457`*^9, 3.699861520746956*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvGXZTQzwmLorCCVOWyY1Zub5co9OnXTdTNGScsiy6wPvTJW
6jDcWtoFEy03L1jNbW62Qtn6sEQjCY1kgmsKfmgF0YWKILpTCzHDc+Bw+J1/
SkX1/koewzDswv6/i/NFMTDl9tsNcQp6IOmQbYRXISLzIUllE4WZWeR4NLlf
SGo8IAvwV/C2fGhYTRZCuyxhg0BUSl6H5Z9We4YdB8jJiKmyjUw/O0xOxbWV
TdMxs8fIIkgyfo2u6awki9FW/o4v8Z4mp6OgPzI5HsuRJZj1BN6rdHpyBlQf
6v70zhrImbghHg+Hz9WQNyPkcEmeZhvJW6B+KWdq1p4nsygrO1IaWW8ib8W3
TN7XuZQL5CxMicPz+jELWQq22+maMTSSZRAYAjIfe4mcDWMgeLFr/jJ5Gx5q
/PeSn18lb0eVzxf36nEzOQf2M16RPtBCliPERS36B63kHShXtM7gdRt5J+oG
G2qdn6+Tc7Gp8eeoj2knK9DCuyOE0EoGgk+icrHUtmgzwOp+p+cc7KCeh4kf
7Unahk7qeaj9KDPuvttFPR/7xjoiTKSbej48g+HvxfE91JWwbAw1Ly25SV2J
tCVv6ldduUW9ALE6n3NX8Db1BdvdnIbfS70QQ/JJ06kBsrkQjSu4k5zWQb0I
Vm5v3Z45srkI1WXh+mi/k7oKPUdtfSe0LuoqaPzSNhOvj7oaE7JEZe59slkN
lUibZj3upl4Mr+zR/NkEj+IftAjVnA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWlI0wEYx/E/ZaFR2cTKUJkuERFd0yyr5fbbdEdlL5wlrSiWNCqsSTnG
QgrH1gGiuWaYSzfvzJgdNjWb4iRSomPhXpQEeWR5UElLzTBW4fPAw8Pn+Ubn
5ivUyxiGSf63/+/SzAjDk6xcn5cjpAesHnl2xDyfHIgrs7qykfv7yOtwwTc6
EfYuhxwKzbjG/XFORQ5DZ2y445zpJDkCjOnDWv/qfHIUbAHdiUXPCsgcfAup
+2rR68kxcLoX57bYL5JjwWry55y3GshxWH466iz3tokcD+lskIbruUpOQKL3
l284tZjMRR93vL7XU0rmYbPTOHE300xOwqDRzNogt5CTYeG72T7lTfJWmKyy
rnJDBTkFatZCW3ZPJXkbcLB8rCS4irwd1V/S/jRqbeRUFHeY2w26GvIOCBj7
piBXLXknThxbr6pdVU/eBZ7z2mRAbgOZjzV6ecKMu5G8G2emDzRGx98hp+Fo
5ZsBpbWZLMBL2diPwyEtZCFKhtjKSfM9MvC9Sbr4Isyx5CIg873R2t/USl2E
gsHALG/kA+oiDARH36iaJjNiFEp0n+pcD6mLYWiJPP667BH1dEy9zRteeaqN
ejpmx1J/pogfU8+A+vPeURHbST0DzX0Lto1+MiOB2T3RXzPSTl0CgWDeNvC8
g7oUWUcUKwpbO6lLMVTq0DXcekJdhrxRe0Dy5S7qMqhexShY2qfU5fhdIbzO
U7uoyxEq6NVeOtRNfQ84njhM7e8R/gXZlOSW
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyX1I0wEQxvHNBTNUKq2cNtzKFmPI1KmVbrpHf3PqSnFCEEVsuGnlJHGB
1MC0MjSDpKCimGuWRLIats2XZklabr6VGqWOwvSPgtIihCKTtMI7OI7PfbcX
VxSVBLFYLNm//X/X5ruSEY0xsZxkJT2QdVwf+r4rnxyM1ct+jaT8CHkjPJNW
xqE+Rt6Md9rBIh7XTOaBx0+xTfw5ReYjqlPwyV5TSxbiREGD0sO+QN6BWXVs
aSa7kbwT4cFnXXWWJvIu3K3iuuc9V8li9GobSqc+XiNLYDvY4s4vuEmOQ2fN
6ZDWBStZim2VNw7YdHZyAn45/Hym+A45Ef2f59zV1a1kGTYtmjRX2u+Rk7DO
xfH6ft8nJ+P1uZlD5Ycd5BToGq8H3k48JO/GSmQM1yltJ++B9GdhmfPMI/Je
4PyCuXnaRU7FhxBTQKrwkNPglkfbeW0dZDnSl+rZEYIusgIx8irddHM3OR2S
Ya1MJPKSMzAUJF7q8vSQldjni5Ro9z8lA4IvqbHu+d411wJW/0qYNu8Z9Uw8
OWkJMQv7qGfiTR23TLhMZmUh1d88h0A/9Sz8MHqXu73PqTMY920Nq7j9gjoD
Q09TvKZ+gLoKlkq5Qmb2UVdBPPNgYIPeTz0bHYmG8NHCQerZCF1vjNSqhqir
YYpYNV9MG6auBufb46P6pBHqOWhjGab6pKPUc7AlQZNxK+4l9VzwGJtzMu4V
9Vwszn4dMcaPUc+D+1KJISp6XPkXwV3W0w==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyV1IEwAUhuE1AoMIbbaQtNQlotOsps250n37dTnoxzWhlkLOFLxIiUwj
JrtoIkpiOTFyN1pkU6Impsvm1oymOcXV3Cq1ERvSRTcucmGUZXgOHA7PeVMr
60ovMxkMBm9z/9+tWRVZRRf4IZlERA+kXfKzs1O15B2YXO8pZC3XkuOw2hdO
Ksu8Tt6DUHKAk9BgICfALPVWt3pbyEmoiF2Iv5bcQU7BUpbarDjUReZge+z9
jYqJHnIabtcHb3TZzeR0qOrGy6fi+8gZ+GVMNLb9eUDmYlj349W2fQPkbHTU
iwcHagbJORCe721lrjwhH8Fst+j32eln5KOocRwsMY0Mk3m4Gv0y3zs6Qs5F
oz5d65obJedBo30+UbluIx9D1Lb4KCR4SebDyGI1P26fIOeDqXMXpUScZAH6
AiZueZ6LXADIdjnWmibJQlR5Yk7tdb8mH0f4lkGjT3xDPgGd6qHiW5ObXAiL
0HaTE5wiF0F5oCHja8lbsghqjU/11zFDBso90n6ecHbLBoDlKr1XYp+jLoY9
31rIks9TF8O5diYpq9ZLXQJvXfji97x31CWwqNJtbuZ76lKMsQXOTh/ZsGlX
zljBgI+6DKUt1q4h/QJ1GXoO2yPeMj91OYKWNlY3L0BdjszOoUA47gN1Ba7c
FbywRMgGBfbfyfX4Fj5SLwbjXMzT0+OfqBfj5wzXtLN/kboS6vkVXrR9iboS
xir+9EbjMvWTaGn272ZXfxb9AyvW4tI=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvEXJchPjlzmwuxCVIiJWk2b6Z69c2qbiptkmjZCcbgmXopS
TG1YpCRZvRBmDhIkZjYxdWKZGk4NNZuXhhkt5zJrkmaC+xBZVHgOHA6/89+b
VaDK8WAYJuzf/r+b80MclH1FMnswSUwP+IRv2bGRrSFvRbN7XLkeeJnMg7B9
tyZZXknmwzf4jlURWEP2w4Z34nqijSP7w+KdqtLa75P3QHmh21xofEjeB9my
8dZwXRN5P/gppeE3uo3kAyh5HMMXhZjIh2BwNTANV5+SA9GiYlrXeJ3kIPiX
t7c6xrrIwRCYY2WHTc/IIZBb9TxT5wtyKJI9ivuF8/3kMEyaLuWk+Q2Qj0C0
M2OX57SFfBRduf6t9wxD5GPIa1qIri1+RRaiTfvbmZ81Qg5H4+r3vL7MMXIE
FL1F5zw14+TjGEbS6zflVrII2oSquhnlJDkS5WUDHQ90U+QTsL+sHvxTM02O
gt246JroeEuOhtf1xhG7w0YW43R+9TX3thky8ETNb/mmeLdpPRDPZYRyN2ep
S1DYnJXbZ31PXQLzUs8K6/eBOos5tujRT42dOgv1bXnb856P1KWodMrPZvo4
qEsRNcRuV0fMU4/B6LQg/cwSWR+DtPqqlLsGJ3UZIoUli2vKT9RlEEyduqjz
WqAei7J+X+eKhayPRcCqtlZb8Zl6HFgLkzIRuUg9DgXp7lLeLzITj3ouYTCg
9wv1eJy3canLFV+pn0TjHDeqk7rEfwEVqude
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw1ym1Ik2EUh3EtG1taaAyaENRqlCuRNq3NXrb/HrcJYmLlWFAoVINkH0Kw
BWlLi2zMUSpq9PJBiEyJdC3FXCxklEbMucbMFm2krpnNpqM1wQgrdrrhcPid
6+afPn9MtyYlJSXv7/zbybckPxOeddwUauV0ACtNXWYT15DZ8JW2HQ+xGsmZ
OKqtODfHs5C5GKiR3moOtJN5qMzVrJtZuE/egvLE1voLvAfkbYhsVLtF5T3k
7bCYsCMnu48sQNHgcqtRYiPvRKyp8eKL7kFyDvia1AzZiWHybpgK07ScEgc5
F7/WGr2bHSPkPJgbfrOrfzjJe3E9cyU9s/g1WYSBq+KWPUNjZDHMdx9lTDNv
yfmQ9j9rOjXvIhegLmat8vROkPeBEWW12RXvyPuRHRP2vbJ7yRIkOPn9PXIf
WYrw7UBLumeSXIgpboDToZ8iH4AxHjUsZvnJB3HlyLXRMedH8iFE7am68cuf
yIehH30otDFBsgymXcv8DvZnshw5znGuIf7fQKjzHvMhNJ10AxC3tG6645+h
rkDz+/afnd5Z6gqsVqgrn06EqDNwFxQPv/F8oc6gKvJc93IyTL0I1e7Ek9rg
HPUiPDbfGHF/+0pdCZ9L2WtdmaeuxNn6oZLVDRHqKrji3douwQJ1FQSD/tJL
su/U1ehaz9LXnoxSV0OhilkNdYtyjSToLrOrkfy3JP8DXpnX5w==
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQEf7PmF859fu51gDxVwuLcvsIOVsxLK53CwilL0
dTzZAeULOIgv2hkUVzwFyhdxuJOuzbQ1fh6UL+Hw8MSZhBW8S6F8GYcrp09e
Vj2zGspXcMgRub3Qa9NGKF/JofhTXL7Zi61QvopDvPa/llUtu6B8NQdfhdf5
k1v2Q/kaDsY5leuqig5B+VoOWza3bywNPArl6zgY39yaeTn2BJSv53AlKdzd
fNppKN/A4Yr4Zn3/n+egfEMHReaoaS+dLkL5Rg7XljX2O8lehvKNHX6L2VhK
cF+F8k0crhinvbrCfR3KN3UoOORY/lzuJpRv5vBQ+BffYefbUL65Q3mdodT9
yrtQvoWDyfZ+qe0H7kP5lg4Bq5e4PuV+COVbOWxt90n0s38E5Vs7eK4WzIqq
egzl2zgE7JLbdW7PEyjf1mHdNI68IrZnUL6dwz9973C+8OdQvr2DnpTe+5x1
L6B8B4dNZ3m9onheQfgNDg56PWzcSwpeQ+UdHbb8/hsuefsNVN7RwWghx7ku
73dQeSeHqgqNslMH39t/Lw4S+ybi5AAR/2APAMO5ofo=
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7P1yvor7d6bbQwUcpvyR3nWqshHK53BIPbJ0
pbvvRChfwCHsz/swvt45UL6Iw1aFDpmzxkuhfAmHsrWSTqUpa6F8GYcuJ37m
tPTNUL6Cg9MZG60tW3ZA+UoOr1qS10+Zug/KV3H4tDtY5mzTIShfzSF9p/o2
G4ZjUL6Gg8zCS1+ZD56E8rUcZq67ukr28FkoX8eh5muUiBfTRShfz+Fnz8v0
A46XoXwDhzfPXpxhnX8Vyjd0kJy+L8RU8gaUb+Sw/TnT+4L1t6B8Y4egxwdN
HibchfJNHLbtWjErSuwBlG/qkGoboSTY+RDKN3O4VL3xqSHHYyjf3MGd6UF3
7OQnUL6FQ7Bu8AxzrWdQvqVDTtyxkLQzz6F8Kwf/5x93T6p8CeVbO6TMuZ+S
Yfgayrdx8FO9lzf18xso39ah3oMv79T+d/bLNjul56+zdYDFKwA1cYb0
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Mass = \\!\\(\\*FormBox[\\\"0.`\\\", TraditionalForm]\\)\"", 
          StringForm["Mass = ``", 0.], Editable -> False], TraditionalForm], 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "0.5`", "0.7`", "0.9`", "1.1`", "1.3`", "1.5`", "1.7000000000000002`",
          "1.9000000000000001`"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtIEwAUxvEpBSNBXVhKqGy2LEW8lU1num9uusnYmAqZD6IZNdoyYRKY
CRtpYzoijUCX62FkBN5YhlOzXUpJnVpqaWppFokI2Qwy3YPd8Bw4HH7nzymr
yL/oz2Awkv/t/7s3mwJeWetH667ARQ8Y7l6ST7oLyUw89y6x5HUqcjD4BWcD
hKpKcgjWKksjdNM15DBU/V7Ia/PVksMR6Re2ZS9pILPhcBrYuZ5GchSW10MD
/cbukbmoHh9h+sWYydEYVFz/Ubz2gHwCzQeq6616KzkWj/pXnu2ktZHjsPDE
bCmJfEyOR7DPXmWKaycnwpMQfSv9Qhc5CfEZLpml1EZOhnHMVN4e1UM+CV9m
53DK9lPyKfxRH863LfWSU1ATKi1qnO0jnwZ36I5AuTxA5uGgRXnl6vYgORVz
yfzYcraTnIZwmV18Oc5N5iNgBZwQ5QtyOg4N8Cd3q1+SzyBV0/Pwe+cQOQOs
3qAO2+owORPr14TGoGOvyALMHFFo59UjZKDltih60T66Zz0QOFr74SvTQ10I
nliT6ikdpy4Et1khKXZOUM9ChHlCo+W8pp6FribtuU/1b6iL8Hmn8KbjxhR1
EVQW03RgyjR1MRIXf8qmNsl6MVo3tnje7hnq2WAHuDVFFW+pZ6Ngwz93N+kd
9Ryw6hz9Y7/I+hyUjMQf73bMUpcgoW9Vd98wR12CphZvjC7vPXUpIoxH98kj
56lLIdU3nN/6RmbkguP7sl/tWHD9Bdug+uk=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/G/ZS2th2WuqZOysgyTZWuZbS5/c25uaU5sGwYJpk7CEktM
X9S2tGwZYk1EaZiWt8TFLCcjvNFl5ma1SphYYWC9ySovQZF0wXPgcPic747c
4kz9GoZhBP/2/12db4mGtdVii59olB7oCGA1KNQnyBvQXtZl427LI7MRpluI
2XKjmBwMT7VeWVBUTg7BwLL9bKDEQA7HJcmuqw/OXyFHYFNPu/FcWh15J5bW
M1bLlwZyJG7lsPJCShvJe6CP2so6pm4m70WTdvbi51ILORr72dpw3YU2cgy8
La4qsfsumQ+B4IeJk9JJjkXJRHzZ7Fw3+QB4wuF0S1svWYCMsVy7rsJKPoi4
VpGGLbaRhTCkBnWanP3kQ8jUejVROY/IcbjD5Y5XsOzkw+Bxje0RQ4PkePA/
fHrYV+kgH0HwindmOPUxWQShOXNhcfcQWYw/1baB7xtHyAlojG29f2pllCzB
9Q53re/3GPkoKjW1c/XME3IiLkfythcEPCUDzQn9/DTus1UbgMiPfqKw6OfU
pQg9GWrulTqpS1Eyn2+dzh6nnoTJdH+OseoF9SQkL2QXGO9NUJfB4FuUOyZd
1GUQd5dnrfvlpp6Mm2lhYtW+l9ST0XU6pEKf84q6HGdqqswJLa+py6GbDfJN
F3qoK7D5fYlzKvANdQUc9StZNX1kJgWmwgzzjPot9RTk84rGXUtkRomf1wZ7
lLffUVfi+LK/Simboq7C1zoPZ2R+avQvCsTwDQ==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyX9MzAEYx/EvR7Fp17itq6U5TtLajVCh6z51P+ssXFFm0U7ZbRf3h5rM
jf7o8EfUlmN3DiO/uXSFVHS/uqsMV0xmiXXTsqO5G45rtrCeZ3v27PW8eWqd
qnIuwzDp//b/nZ2gyDg1J2liWGCnB4oWq4Qiv4y8APPfOT78vLmTHAtexFtW
bVOTOSjJv33vqFtL5sKq7mPrcw6RE/FyW02/WXOEvAxTo79Kf6fVkZfj+JA1
kBtVT+bja/witkR4ipyMs9FLZwS+BnIKdmVNSq+9byKnYp8r5kmNvpmcBnYS
t8otPUcWoDG+rbsw00Reg7hg5QX/Vgt5LQxchbzozGVyOhZWvZ3urb1CXoe7
JUYlP7uFvB7jlrzBodjr5A2YLPA7ReEb5Aws+d50LPjlFjkTmkiIvz90h5yF
pPaTplVRVvJGDOOb2r76PnkTEtr/eMesbeTNeObdMjjywkbOhkD7KtH4o50s
hFlpdX7iPSDngFtQKm/e8ZAswoyu1aFrfEQGTviVjwt8nbOuAzriFCvDnC7q
uUi9JCuXlndTzwXzcZQbY+uhnoeLxWLliuin1POQ4KnI2KvupS6GmJesMrns
1MXwjbFa3jQ7qEsgK5wX7FQ4qUvgq/hsGJ8hM1LUdrAn0OWiLkVPsZDjqXZT
l2H3UKOlLL2Pugwj4fOG6RCZkcPsOb29ocNDXY49B65GWIe91BV4bT4YUGX3
U1egNUXPaFkD1PNh0ATqc54P2P8Cpnj7AQ==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/E1QtsqV8zBmpa1qViJbOq2zPT/29zmBKPLILsoxMwhS9ow
LytRl05N11qjJjRqMHpIelqlYBQ9ZFhazDQSWVJ2g4QRSS61JV3YOXA4fM53
h9FyuIbNYrFy/+3/G5/vzHG5zj8fXiimB6pPO9JCnVwmznVQDdtEWojImzAN
ZffYQAY5GdGri88DAilZiKoe6y9ZuYKcikiKgnlgLSJvx5M3Rjb3sZosRodZ
Ononr5Scjv6FmPiToJycCbv6m2s4eJCchaGttllvr4G8C0mjPsmaa0fI2TDK
kydaQ8fIOZgxtwz5lFVkKeTn9HPLppNkGdrrhC/5eiM5F97I19uNxafIeVji
M+tbykzkfDgt1xu6amvJcrjGxyQxn5mswMc0a1Q3V0dWQrb2MjOjtJD34ATP
W+F5ZSUXYHCklT+xsZ68F5/dfQeqDWfJhdh54yk7KdBA3of3iX94np+N5CJs
WxEog4ZmcjFUMX+CbNhGZrBFlxgKS86TgcFA6pWm/pa47cDy/dVoiNdKXYXJ
m2fUQXcbdRXG65+JF7l26moMfGjKkkyS7WqIVn979/suUC/BD6bGUWnqoF6C
L7f8jwrkndQ1OBrKvzeR4KCuQf+IrI3zlszSImk+Mzx1t4u6Fq+zKlOEzm7q
OjRvTs8ZNfVQ16Fw2uAZ11ykXgpO6rtD/Ixe6qVY6XEnuBP7qOsh3BB5kR0h
2/XgLO3G7JSTehkcUxXtroeXmL+qEtKI
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvE3FyIq0nSSiR82r2OGbV7Xlu3ZRbeVZA61dTFpORGstIik
ItQQY46Ja8FgoWaZWRRZpOaQ6HU2Nck0s5VUEJXBtFiY2IeECs+Bw+F3/gJT
jcEcxDBM+r/9f9cnoNDfSe5zfZYq6IGDYonFf85ADkHh4Fzr290m8iaErMSu
CiQnyDzcMnNOs9VnyDFIY2UJfl49OQ7B7MyBL01NZD507h/TmfwWcjzmC76d
mkhtIyciJTotQuhwkJPRaFxeCaidZCFKY5jSgPwqWYTr2wwaztlO8lYUp7o6
rX+6yGnY42/38cq6yWK0/W4eSPjQQ5bAFVGV5D1/m5yO5BLHXq70LjkD8vLZ
GgH3PjkTl5XC8XDOA3IWst+H9nGtD8nZ8CmvXMjhPyLnoGwpqmzLSD9ZCm1c
RmNJ7SB5O1RzQ2E20RBZhjfq4NWjATdZjiWJhGlkh8k7INg/b7e1PyHnYm50
0herekreiWufmJ8OGUtW4BJ7zx4qHSEDG3zmSqPMs+4GYHMRT2VUjlJXIrw1
JXqh4Bl1JbjlzNePh7zUVRDzbnj4J8eoq5C1r3esxTJOXQ3bYvXGtZsT1NUY
rqu7aPQ+p67BYWuKtN4/SV0DU7wlqDjyBfU8PF4+3uHOnaKeB+dCf5fz2Evq
+YgKq5RVFU5Tz8fUoqgnyU9mtDgisNjrmmeoaxFf8etdUeIr6jrIByLdvR5y
gw6c7oC3tmKWuh76tV3fO4JfK/4CckPUgQ==
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/GpjaZmSFiaaNo0kUqrudnU2n6btw0XpqHEKAxFSggGs15q
uI2gC81EocZglVlpyqQVaiKoW7LWlv1LJ17SZW5Z9DKzlV32UuE5cDh8zndn
raqyPpzFYvH+7f+7Pl/FoyM1bVtuK8T0QEZDitsrqidz8FD73GzjnCfHQlkX
0i4q9eQ4pJ3xRVpeXCMnwDI+bWK8reQknBqu9ARvGcmp6OYojsZE3iFz0Sfd
VF5q7CCnYyPXEIzSd5IzYIkdrBKM9pAzIVx2S0Tlj8m74VInXDwe/5S8F5fb
4503e/vI2UiXXhLua3hG3o+oNwM+tnyIfACnozrORSiGyTxsGKsOGYQ2cg5e
nz3iuDdvJ/PR0v1om/3GGFmAnKyiYVWFg5wLlSk1LzfNST4ITWJYe3uEiyxE
V5hfL/rmJufB4JExHYFxcj7i1ZVDdb8YcgGakpljzVfekg/hROsKm2eaIB9G
iNVpWbFOkkWYK2AajYyHLMbI2pdAaHWKDNwdqtq8mji9bh2QZZ2IU8hnqEvQ
+0rZ7NfMUpfAs1Ihaemfoy7FjDWQnRl8R12KP+qQ9qpggXohtj6Z1V3XeKkX
YlDmMMa8fE+9CEsL/B1r0R+oF+HBnsmf4QNkVjGaCtzbk2uXqBfDenLVzo/1
US+BpYLblW8j60rAGTf/SFH7qZfCuagtm971kXopphpr+svnySwZfn8P9jS1
LVOXYfKCP7q67BN1OYrN95Nc7M/ivz9x52E=
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtym1IU3EUx/E1KkSKVswQV9NmrbWk5roz3Vr3N91dRAjRYon2oqwRaTmT
XDAIZdGUIkmYgtmDoqXpm24OonLVVKJMsNZVS8zpWrWUci+MyqAndv5wOHzO
97+u2LHPLhaJRBn/5v+OvxgrS1UXdk4UsHRAqUOW2ldZQU5ATn5sl9/iJkuQ
vTfF71PVkaXQqyNnquyN5GRItDKbcdkN8howjNWkrmonpwHyxrUzyV1kBTzD
5iWWjXfI6yGvGTrBX+ohK8G3cm0VxntkFULfRk/ZmIdkNTpa0mv05Y/JGXDd
7Hd5vgfIW3DwXPO4/cAAWQOhTJrUN/qUnIlAbdB2+/RzshYbnHeXZ2qGyNtw
YXYlX5kwTGYwuSLM5f9+SdbhWUewP3I+SM5CtePQ2aYUgbwdTxb9ebC0d4Sc
DUVL2+Dg8TFyDuq7L0c96W/JeixYX6tC0XGyAV5l2WHX/QnyDkj2bE4SN0yS
jfjRU7u13jhF3omjSsPcgG6azOKYdeTVvDZMBtKk1+oWmPdxVwP7x96JeUOE
ugmLL67eNG/5QN0EhblU0mr7SD0X8qsFQkPJJ+q5aH9xy8u7o9TzkNh05aRw
/TP1PHjZ4vLQoxnqZvxy9zb7wrPUzXBq3ghZiV+oc5guKpnarftKnUOn72dR
8MgcK6zyOwsDHOL/Yuxfwi3FEw==
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtymkowwEYBvA5PjhqFGWOMkLu+9oc/4eGfHFMRo5ijhwfECtCGRGFkJJE
tpRIVix8IjZX20Im0nLnTFaK+CC0962np9/T6yGuE1aYs1gsz7/8t+mMjLZq
oljrWsbQAOWcma2wpI1shf1WlwxbTj/ZHoWdKrFN8BjZEXfS8rylaBmZg8n2
gv4XwyzZDU2vs42HUgWZi8+dwLELtpLsiZ/S9JQZ/RrZCzPHEq6MvU72gfO3
PnPBsEn2xZlC0KF8VJP9EaO5jN/22yMHInFVxUub0pCD0cx3KlMIDsihqB0Z
ZzYGjshhyD/TVU8PHZPD8d5acJ86f0KOgOsWW29xfkqOhCRbNxTkfk6OArck
adi9xUCORlLOPo//cEGOwbMqtahBeUWOxZ5Hcf3mzzWZhxurmi6B8JbMx6i1
3dvy4h05DmLL7gCNwz05Hl32uRtp0gdyAtQVgyFPH4/kRMj7JMb6pmcygyy3
OZH864UMCNfXepN7Xk3uACrl/g0clzdmasVbJNsFTH9G5hf4npjV
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Mass = \\!\\(\\*FormBox[\\\"0.5`\\\", TraditionalForm]\\)\"", 
          StringForm["Mass = ``", 0.5], Editable -> False], TraditionalForm], 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "0.5`", "0.7`", "0.9`", "1.1`", "1.3`", "1.5`", "1.7000000000000002`",
          "1.9000000000000001`"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtIEwAUxvFhmmmI1UTEzHJFidqWZta8fru52QVTGhQ6xaJiXUzng9ui
Mo2KWcHcfFFqhUYl1izUig3HihordDpDxxrOLN1qWJLabS8VngOHw+/8kw6f
KT0awmAwMv7t/7s0cwVarztw2r3fQg8k+9erZpfLySvgXV2iY9uU5FVoWRda
fb/2EjkGWX35HSmyG+Q4zFac1E+vbCUnwMFRGZz2dvIGLMqP9Dt67pBZeJ2N
sqqZu+RNyGXbehWNXeTN0HeGt8xdNJKT4fS5jN9qnpBTELOxnPuwuI+chkqk
d9vLnpHZUOeMtvp1JvI2+OTDP5/+GCCnIy7BGqznWckZ2G2OlTxY+5K8Hf4q
c4c04hU5E6fOMRW+CBt5B6J5jbrBBDs5C9KUIP8s7y15J1Ti6wvH6wfJu6AV
L2ZGDzjIXBiGmSJl5Ag5G8rUY122PCc5B83XSg89V46Sc8GuDPSsMb0j5+GX
4YqzLXSMnI/UIejjpePkAvxpc9WVd7vIwAJ3mSYt0r3kBsC6j3n+YPV76jw0
NYWqjS4PdR5MYVOJIUUT1PkoCbusYlm81PnYMzYerL05SV2AvYr+R1EVH6gL
cKH3hKw4aYq6EOGyyMcsH7lBCI148mud8SN1EdwD5nmO+hN1EeKH5ByheJp6
IX6r+bdvxc5QL8S0JzC01U9miLElivNm0uSjLkbn/HfWPa2fugRXgwf8NfLP
1CVofuHtYAu+UC+CxjMhHUkMWP4CZUEALA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvG3vmQWOrtrpa7S1dKwVU5Xusepm6/EiGGgM6kcLkZEJVKE
fZAsS7JMzDJRc5jlMCrbRRRzWaEVZXPTtdllOm+VOTT9YETrgufA4fA7f272
cUXOQoZhBP/2/52fKXF36ZZFTpPcTA+0bDwRxO9Rk32g2G90L79+iszB2eIK
/VLtOfIKRMR1xgQ3XSavQYkyQ1sZWU5eB6bHe0SuuEUORVXeJWlXcB15AxSs
gf9wtp68Ca/mxg57eY3kcHzl2KvHjPfJmzHRUu7jePuIzIdDvupb5lE9OQJZ
BrZGKDCRt8HXkVsbyW0lR6HNlDG1WNhO3g7/Cq5Nm2smC1B1Udeh0XSSd6Co
rHBCsvU5eSeajpWtTfO+IO/CnIsNCHR3kaNxra+jKMD+kizEr/Nh/p3O1+QY
iKpTfj74/oYcC13aJ4Ha7x1ZhPhDyhui2xbybvzZN+SK7ugl74HReKb4x7CV
HAf9zdGnsZw+cjzyngwnDEj6yWJYQsSp9fl2MnAyQHQ1p+39vAsANl0ROeN1
UE/A9JXMeyHsAPUEHIya7DVXfqAuQfggt0c3+ZG6BK4DDV6D7DP1RMy6/byt
d13UExFoeZbKXhiknoRlhXZnSewQ9SSEaSaaV06RmWSolO3Z1kY39WQEdU8v
eKwapi7F6fD1vDuhI9SlKIVtvNJFZmSwqkdsBXWj1GVYYmye3qsao56Cmfza
Ng9vnHoKfH9Xr073kBkWnob+rHzTF/NfkdkHgA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXtIEwAQx/FVynShqcSyWGFuWWqPaZZTq/22OedELKJc0sMypdDIzFhh
FFNrLtiSwqH5hzmFFNJWlqRTW9rTrbnmk0qnloJZNClLK8IK7+A4PvddnZa9
O2Mhg8EI/7f/7/xMCU9cmeBfypSb6YE8bruBPZxG9oB4l1+Bu/E02Qd56fq5
zt6L5KUoszXNycfVZH80TTmd6W3FZA5yCy39K6dLyAHgLWo9111fTg7EbPNw
Uk5hJZmH30lBEZI/1eQgcIR+KV4dNeR1EBwJ/Vlsv00OQUqkK6HL9y55Pb6f
nGxiHWogb8TeZ1yN0vqAzAeziz3ol/KQHAbuAv2FCXcTORy+GV6VTEcreTPq
+KW1Rc1mcgR4rn3nJant5C1gvUxW6F0d5K0oujwg3ql7So6E5axBxhI8Jwtw
Z0W0Os31ghwFRdCGVTMNneRofLV7LssssJJjcOyJT8LhgzbyNrRodIn5Ejt5
O5L9s+pjyl+Td6BtzQ/DTKmDLMS14KGQV+XdZMCSNc27XtUzbxVQk119g2vs
pS7CN81I4/7HfdRFmLyX087u76cuxifdKXb41AB1MTz0S5Zrvd9Ql4B1pmKT
W9hb6hLkt1hNeYp31GPhxgz0duQPUo/FWM+j4x+NQ9Sl2JMo+nJr1EldCkPd
jF25eIR6HDzrmaGOGrIqDp+VpgN90lHqMsxW3axQjpNVMjR2HNXWqt9Tjwff
6QxIDf5APR4l2qj7V21khhycX2unQ3PHzH8B5pL/GQ==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyV9IUwEUx/EtfDBKMyybOWSadVVUasvmWurPTbcVDczGyLgRDGeKkjGz
FKMulhVpJQoRFiOXwqhmSYqp2FqpoTZp/mnpXNwHy8SHnPTnoZQKz4HD4XO+
MaayPPM6gUAg/bf/79osZbKzFfdlTJaTHijb7pd9q8wnBwOnlxZD0orJYZhL
5q4Mj50lb4HOcXPjhfmLZBHilQnawZJashgtDv5Ska6eLAG3mvTHLGwkx4IN
lufFHbpDjkN5R7s29XczeRd21Pkm+4IfkOMRHWRgAgM2ciJyu3vbXc/ayEmQ
J+e6nSN2cgrqbGr/9c1PyLtxRnxuduDyU/IeWOWmkPCGDrIU9lOmik7Lc7IM
8nrLo4TiLvJesAMlhTOWbnIq9GLrd+ntHvI+XA3rC23t7yPL8bLG3Wtb6Sen
4XFt1FYD84qsQFDR1DvRMRd5P8yxmyL5htdkJSRKQ0Wp5w35AOaOt6bWRA6S
0xHh01TOFw2RM9CUskFU4HxLzkSAX7a6xMNkQCVUKUa5kTVzwMTnZbt+cZR6
Fnj9DcU21k09CztXdJ2/xseoq9AlZBN55j11FbzVQ59iFsgCNV64Aj8THR7q
alR5C6K+lI9Tz0ap4tbdjPQJ6tk4ET6dL1k/ST0Hh5Vf5857yVwO7rl/GKT2
KeoaGI8YjenVH6hr0HM0OvZarpe6FrAsVK0yH6lrUTnuetgonKauQ1MoUyjz
kzkdItpkQZ7eGeoHcVLIK9hmn/MvMi/2JA==
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyQlIEwAUxvEhwhaxUNYxYmYbS0tbTG3l5nLfNrcpqZTJosAs1+WIygIp
ljCosWW1XCKJSs4r1Eo2a5pzc3ZQEWYEOQtqjBmYwzQ6RTEqfA8ej9/788tO
FR2JYTAY6f/2/12ar4rLE0WaX3EbAvSAV+I8eTVXQWbh5beBNaG5QnIcGjyO
4oVr+8grMcTPMG6aLyNzITJVrXpeaCTz8EMWH+IcqCCvR1JYcH2WV0kWQL8Q
GwyXmshCuH+LO845zOQkvFdrzgvdF8kbcWkidHc120pOQSA4oDe3VZM3Q273
nnaesZO3IDW5re+Q3EEWI6qfPMbfX0tOw7vRrMOPHXXkdETjD05VRW6SMzBV
fCW1dmcDeSsSpC3JupEmsgQu6bPKT4Zm8jaUNrc7PrJayNvBYp9Q1BhbyZlg
m+cv9AfbyFIwe3b/iSnoIMsQ3cMPC1/dJmchjaere6PvJMuxq+HD28BUF3kH
RNzXtk7LHXI25JxFnzblHlmBs0fH7HvHe8hAyzrvigKta8lmwBeb4J8Uuqkr
UV0+nV/C7KWuhDUlKqj5Qmao4PJmWg3j96mr0BS23Rp8+oC6GiPjJkOVx0Nd
jVlVptPe1Uc9By+Oiz+POfup50Ck5N6QNT6krsF0ZFlve/0AdQ3KZoKcxXov
dS3UjRaJqGmQuhamtXPKxFYfdR1imP7lQ91+6jqUdDNZPz1D1HMxGRnNcz0J
UM9F/SNb9kz5MPU86C2JFRnfhwN/AXFD+cA=
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyQtI0wEQx/E/SWmvraKYiEnGGNJibCsfWbnfnK9YhBYGmrimSJbREg0H
2mNUM3UKy4HJNLVGKrWwpjbDluaara3lQlyZEGGUprhRYWpED7yD4/jcNzJP
dbhgBcMw4n/7/y5PQKJS+jPYnmgJPaAxFPjNwnRyCNJcA9zi4OPkDTA8qcrN
LTlF3ozBd+1fNaYScihmLMq+2fhycjik4a6cxUUNeRt+fuaEnJnUkrej+Lti
pjFTR+aCZcnQinh6Mg/TvHH1F6WBHIVM8HzMRAN5B7Z2Pay4ed1I3olDn9wm
/+UWsgD5qzi2UF8bWQjW0rdsX7CJLIIjwqZXHLlDFuOHmdMxae0g78LVziZ2
U+xd8m5UazUxwx4zORp2v+veaEIXOQZZbeN8R9sDcizCEuOGPrAt5DgEtW+x
u651k/dgbOn+xth1veR4FM7Xrvc2PiLvxUJP/hW5qI+8D/yWc8bsN4/J+yGa
u2HrrugnJ6DmlrVuk9BGlqDH9HFEMPuUDPjrpgT5bweWfQmY0jGr3bZB6lLU
jnIU4s5n1KU4WiTQlTUMUU8EP9A8dr7KTj0RZRFrTkZdfE5dBlt1pfyY2kFd
BtnCfM6v0mHqSXBa6g/Olb6gnoTmIkt9mNpJPRnekF7ViQsvqSfjTyh3or/S
RT0FgbwlXZDBTT0F6fLIae7tV9RTMWllrVzb46GeiimRvrnV+Zp6GoLKlVWF
Z0eop+F9QC9K+k1mDsCoPl2fVeOV/AW3B+kV
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUh/HVh4hC25rgFhK6UqaYzcvmZnP7u+m0b5EYKZp0sUxBl4IS
o+2NYTcdRoMoNauV0ppG95VLa16yq6iJc2mtaZZWlDZNFIUKz4HD4XeekH3F
O/NWslismH/7/y7PlJLHKxu3rNihpAemlK8KlzoPkVdDy+grSk6Vk9lQZTsH
mgqM5ACI3LJh82AVmYfc/rpv4UtmchDCZY9zcg7UkINxk1s2p3h7hSyAJDND
YntznbwZbV1iq3aLlRyGSA2ar/1oJguRxXWcsBvvkCMw4Y63nU68T45ExZgl
sFRgJ0fhRerTYWF0C1mExsrvM4fzW8nRwNppxrD/GTkGl+v3Lo6EtpNjsdFq
+9Wy0EGOQ4/Loar0dpHFUGzoDu50d5MlkJ83uTyjL8nx8F9z0Z69+JosRdD6
4tknoT1kGQysoRT11l5yAk5e8KsOSe8jb8O5P49+KvX9ZDmOhfAfHrz9jpwI
vYUzmjs5QFagWrbLf044SFYigT+fP1/kIgMBD3Y3ih1Dy2aAyeSCWZ3fe+pJ
qInbM3Mpb5h6Erg9tQ1FHSPUVdAaOHntYR+pq2CIdX0oqvZQVyNiE5tp0H+i
roY6s1UXKPVST8YqcxN7wUdmknHP8/t4wt1R6ik4azFZnpeMUU+BKIfTVyX+
TF2DtqtHfboFMqNBQxS/1Ogcp56KOrlVaj7zhXoqjqwrv1Gb8ZV6GuTeW/Um
wQT1NDCajsKsaTJrO8yiqV6fc1L5F0176gI=
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7KedanKbHBNrDxVwcIo6vZDvbCmUz+FwIu+l
R/vUVihfwCGBY3oe2/mJUL6Ig9qxRhX94llQvoTDEd/Z1xJDF0H5Mg5XQg0f
XjFZAeUrOIQ1W3IIXVoH5Ss5CNrr394svBnKV3FI0XfhWCG+HcpXc5hWynLZ
vGg3lK/hMHXfNq5UgQNQvpbD9ecvz+VMOATl6zi0NV/0+mV+FMrXc2CIjv52
l/UElG/gcLV6SsrHH6egfEMHfeNdf8UEzkH5Rg4GApvuyiy9AOUbOzxbEF2s
FnwJyjdxqNf1fLNU8AqUb+pQ4XrprsyDq1C+mcODdforBPZdh/LNHWS4oyO5
Vt+E8i0canXOTZi27DaUb+mwKU06xXXDXSjfymFreITLquP3oXxrh8QcrU+6
3x5A+TYOu36f5v/F9wjKt3Xgaeb7yK73GMq3c2BrSO1QD34C5ds7tIcGWGrV
PYXyHRz2sXicfbTuGYTf4ODQ+ZYxU/Xpc6i8o4MAJ2vTcYWXUHlHBw3V/ivz
E19B5Z0cFHYdj2xb/hoq7+TwjM3OLuTTG6i8s0ON4YYbjx3fQeWdHV5aSS4U
mPbevpOd41H4cmcHiLoP9gCpvK2e
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Mass = \\!\\(\\*FormBox[\\\"1.`\\\", TraditionalForm]\\)\"", 
          StringForm["Mass = ``", 1.], Editable -> False], TraditionalForm], 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "0.5`", "0.7`", "0.9`", "1.1`", "1.3`", "1.5`", "1.7000000000000002`",
          "1.9000000000000001`"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtIkwEYxvHRjR9KWWAuK8hFmmbs2EzbVz5zG92Exi60EVYEFUWQuIhM
zQ6kYmaljZwUnbAj1NiMYkqLYoVTwbGSTNdq2Q4qNXCXGRV7Xnh5+b1/2f5j
5gOLJBJJ0b/9f1OTKLNFOvdZn1s8fKDV8C7PnW2lBSRsExWrIufopWhdVlPl
UFymsyD2RCZ9BdfpFagIJZsbF9+mV6NFoQlPq/roXFw8fn7q1O/H9FpUwi2V
9Tvoddijs9WpS/rpfPzY+Wh5jvCSLkC1L9nbKRukNyCevJeu0L+mNyIaSPeq
rr2h5dA29b3wCl5aiWSwJTt+8z2tgt1+13/H7KPVGOs+ZFnIG6U1KDRfVbdl
jNGb8CR8qaahy09rIdcpmw6vD9DFaC+VaqJDH+jNsObWWzrqx+kSfHYfnJnX
fqJL8axhJDrwZ4LegnikyHghMEnr0D6YNjLvCtIiXrUtZD69FaK3wuV8+0A+
/JXeBket0jk+/I0ugzHLVH3fH6aBjqo6yYmp7ymfAQZ2q7evmZtm18PqjM82
SiLseiT2Lhk9khNlL4cQ6vriLY6xl6NQ6JYd3RVnNyA/hhvi6Rl2A4Z6M83S
h7PsRiR3rBSDH+fYjTD2ePW1aT/ZTZCdtKtc4i9Pc8bZK7FKE1L/hOcvFyHa
8g==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvHX4Ydas3QtEJRY2kXsgi5zltM9uqkbSYG08EtY4VBKqrUa
UdQyoow5bJWJBsMKV+LALF1q2XDVkJybZTdWtlm5vaWZYOqUkoqdA4fD7/xX
7T9cpOYwDLPx3/6/4ZmUBt2KkCa92E4P7Nh3SFc8ryEvQvNDw4zRVUmOxpHT
EzcEJUayAOKPdyzPPLXkWEi63/GsEjM5Ho0Lx50JM7fJQqTq71ZoDjSTE7C+
hl2o0bWSV6NJuEYZ4j4gr0XMxeg4wS0bOQnahtYp3ZlucjIaVnCcPPMT8gaw
UXU95fpe8ibot09nlnueklOw93w/n5/tJKdiieKo/eSLPrIIiSXznh5tP3kz
fg19s/7JcJPTMOAtvN9WPUjeAgtXIFnGfUVOR8vSuV2ia0NkMcTS54HO5Dfk
DIjUl12ygbfkrShTrXusO/WevA1tccKUUJqXnAmm8nqRZu4DWYICn4E19g2T
s5C4ZzTr900fORsqNuKSzeEnS3Fv9wmHsmuEDBQ6jOeutH8O+ywQMfLSXNH+
hXoOrOJaTkfnV+o5kE9ftSh7R6nn4pjLX7XYHaCei53+qKbXn4LUZVAFTeOG
KZa6DKW2MmkM7zt1ORhtoLQgaYy6HP6uwUi+Ypx6HlqW1zeqDv6gnoeqld7q
WdME9XyofczY8KOfdkOH6cJsfD7C/0n7X8q06gc=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtymtI02EUx3HRRnM5M5MhEmM60bHG1Fk6rfTnNh0UJSxcFuFosC6ymIgv
KmgGWcRYotiNRUG5RErRycIw40+2LhSbGavpX4eumzqbLkNfRK0LngcOh8/5
PplGi84UHxcXl/9v/u+1Fy1/tEdyWdtWw9AB8pBgyBffQOZCVd9k57ubySlQ
dInnzBIbOQ0nnWIba+4gpyNpPMI+jzjIW1A7MXmW9/IOWYTcJKvxyt0uchZ8
fzaLdZwecjaG32gGHCv95BxIbstP50rcZAkyO1yzR28MkqVIj7E5zZrHZBlM
H3zXnFKGLEfWiLff7nxKzkdCyv1LgtFn5AJsij1IE6a9ICvAtx0IBRpfkQvB
sK6r1vBr8jYkFx/x6M54ydvRY80weFPekosgPsYpHLOMkYtxU5lwPjjxjqzE
8ezEjlv7/OQSlJaNFjDe9+RSnOjcfW9ZHyDvwED7k+vh+XHyTkQitZzDF1ny
LniC9dLY1ilyGZaVgkYbGySXQzTYahpunyYDp5bC3u7umTWfA/rMP/0t9hD1
CsgeBhL3N32kXgFukV64YvhEXYUaMbd3b/Vn6ioYf6kUUH2hrsZ030GOS/mV
uhobPDzdBcUsdQ0afohSO/PmqGvQO6RZ/z1vnnolGg2/3frCMPVKbFw3c2i4
ZIF6FVZNC4s89TfqVRBGk9Nl1RHqWrT4JyW8ukXqWvDDdRltliWm1TGVujqi
xdq/KPMXCB3vnA==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyQ1IEwAQhuExE3RaM1fUaoQ5F7WmbWprmm2fbuqsyZylQxMXWeRSGhEF
hqwlOIoWmZhkSGbSIKNYSPajqKUmmkjGXJtsmTbNLMqEBItJhXdwHM+9W4+a
co8zGQxG/L/9f1dmXiH59T2t6ZSumx7giQ6XL08ZySGI0hUy2M0V5AjMsBpa
ywXV5HWY1o1t2lF6jbwRqkAke7HvBpkHttV3bGdXIzkKrsvSmGLNXXI0goe0
gQW7nRwDWXOy01b2gLwNIhXnqfmAg7wddf5+8wZOG1mI0uistrVh7WQRws22
viXJc3IcpDVc9QlrJ1kMnrhTZw7qIUugbagtSvC8JMejIIypedTbS06A9VJT
vfZVPzkRXKG8stI5QN6Nc8rYydtLg2QpgkdrhALJMHkPRl682Vx1foQsw6yn
orD+5FtyEjgGfmjOnVFyMu5psu2xH96R9+J6tuHhPN9JTsEqvb+i6PQYeR/+
xPOTpK9dZDkutgq8qmg3WQHWspClq/aQgcEzVRzBj/EVW4AW75DfZvBST4U+
pO53nstHPRUdMkOe9uAE9TSk+ALtMWUfqadh2LRl/ZVdk9SVeJYfZOxbJFuU
CM3VMzt6pqirYA/Xvy+4+om6CuXjoxdsRX7q6fjpyhEr4qapp0MhL3lSzJyh
noHGyTUmt5tsyUBkS4nm1uPP1DPhmBMP1NpmqWfiZoR3wmH8Ql2N3q58rl89
R12NhUOJZ3nCr9SzcP+Iz7R/9bfuvxqI80g=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtMEgAUxnFmudGD5aw5N4kkzUuRkKSmWHxcFLKZjGoltnXZeihW2KMm
menQOZZlPbCkFxMzNjNgRRoNbXgJFcXSKAZma6nRdc4tla3LPGc7O/udP+es
VnUuisFgZP3b/3dtformB51VipUiFz1gMuO0cdMZMhPqE2VjyZ8qyLFQHps2
35i5Qt4CmzRRu2SrJyeAyz5p8lsNZBYiusus6l8t5CTkjDH5LWwjeTvqPQvB
nsA9cgo0+u4yZVwbORXcwyZHU5WZnI6vOm1tXcpD8k7w1+nHxBu7yFzk9ayG
v919TM6EszFJ/nzURubDmZbb3Jb4hLwHz777ZG69g5yFRvuySR7TSxYgTt1d
on7kJO8FJ/S7nH/eRc5GQ+TpUi27n5yD1gpTQ9Odl+Rc2CIi79F4N3kfMrzx
Nfr7A+Q8tPdHRw8Lh8j5mBm5rXGHhslCxKQ5izMMHnIBHJXl9g7pKHk/vigF
rB/rveQDKNDUlDrGx8kinMo3cAO+CTIwsdLcq+rzrfkaMG8x/tlmn6QuxqvV
DVaO5TV1MTyypbpc8xvqElyau7hD0j5FXYLPrQmC5AfT1KWwzC4KXnS9pS7F
keDxW4sOP3UZYld23bQMvKMug9uqLB6afk+9EKVhYScvHKBeiMoLg2pPVJB6
Eaz+9KmrW0PUi8BcTpVnC2eoy6GdtB8K7/5AXY4OViSzw0VmKDC1WaftU81S
V2DE5rzOmyMzDqJEnM1bqP7o+gvBuQSQ
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWlI0wEYx/HNtBNJRbBFmLWRYVZqzU3z+O1wTgmFWaQYYwrrmIGJLC0c
LLG5YbrUUFZ0EKlpuFyuwyP/MzeMEdhlNNmLuQpb4YE0fKN04PPAw8Pn+e4p
r1SoQ1gsVsq//X/XZyk7XTvODs84wNADZsWchhFKyZtx8f1GX2bYCXIEsqJm
xOMNKnI0DGk/6x4Zz5F34LO787eKXUXehcsNsTOB6kvkODgN7+J0HXXkvZjn
VqkDtqtkHvwjAbu64hp5H7b01FQLtCbyfhja2/qCb5vJCfiuWV3mCVvJiagd
cn6osbaTD4G9OBAokXeQk7BQtH33cKiFnAy91dxk9t8mp6BQdSrd47tLPoJE
1Wqw4M998lEkWO7Na+88IPPBBH2iC/kPyalQ+mL4jrBusgCtZdzqDVM9ZCE6
NfwVd1cvOQ2z5WeXrabH5HRMLkQO5l/pJx8DJ9p/PaPmCTkDsZs++qIcA+RM
3Ig/wz/ptpGzUNQ3aRPOPCVno631G6dtcZAMuKx2nWDrs3XrgZ3N0sOshOfU
RTB6tw05C15QF2EtsuWTsvYldTFGQiRlvd1D1MXgKFyles8wdQk0Fum0I2KU
ugSzorRf8uOvqEuxFFPMrDSNUZfCbp2o7J9iqOfgtHe0savJQT0Hb6S6wpLk
ceoyTOtv1n/9QtbL0GhJCk2tf009F8pwP1dycIJ6LkwVpbfWPGSWHP65PEOx
0Uldjh/xsvO5Qhf1PNhavLyxgIv5C/Tg/VA=
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXlIEwAUx/F1mWhFdqiRacsxIzV02jya28+p08XIq1nCsiaKQyKV1R/G
PCJZBztKzGRBI5GENMupHWqSbuW0GZt5tQyCCqI0p2KKiB34Hjwen/dl5hZl
5K9nMBicf/v/ro1LkJnobr5o4AnoAR9hF2eaJyW747Mt+veIWz55O+7a7RPi
7BLyLkx2ZWnTLaVkX5z+xlsNmbxM9sPIzroSW81V8n6ksU4lpbrpyAfwki20
1NyuJrNQvtwwu1JeS2Zj6taPIEu3gXwQaWbV+VyJkXwIx9l191p315NDwF5S
KU1NDeTDaPbSb9xS0EgOQ4pSVmEUPSSHY5nLb84SPyJzEKZjjnlFPSFHIG/o
hozhbCVHwhJQML+oaSMfwccBh7IstYPMxbyhXbGH+YwchTimYu7kuhfkaEz3
hzZZZzrJMXguLdOs/uwmxyLzQsCofqGHfBQs7eYlD/UrMg8TM1tbau/0kuPg
3xk4GPu4j8yHSXJOZbWZyQJIffSyHS4LGfh05VfOlO+bNVcCeU/DB4OT+6nH
o/CBf2jjJSv1eDiD+k5w2waoCyHXfhGaXIPUhagy9rIWODbqCeB3eB9zlg5R
T8DXt3I//ut31BPBEcV4VnjYqSdibt/eHFU7mZGE6mH5gPqsg3oS1J4ZGt22
Yeoi1DuCz1T1kCtF+F54vSi7+D31ZDC9nbI/gSPUkxFhX4xUfCAzUqDLHC9W
3xylnoK4a+mzEvEYdTEE9zettGwYF/wF7eriEA==
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtygtIk2EUh3GTWiOCRTYzcOAybUyR1NXmpfaft62g0lIIwS46E6KLIwOh
MAtmdtMYImajSUOQr7JFNa3ZmBkuK0daTheVc8623ObMS5FEVnheOBx+53n5
xaf2lYaGhIQk/Zv/e+lNSzU9toHrF/KldICOK1Q1nj5JZuNGT/klVmwVeQ3e
RA7NLXfWktdBXZva/KtSQ47ASFqnzHDrJjkSIvOzPQ5PCzkKlsoNrqM1reSN
2CURumpaGfImRF9dO90eZSDHYuHHQdb6uEdkAfTNecK4ciNZCD/b2y2YekqO
R5PO3FGof05OgPqs7vJqq4W8BYOD8zuV9hfkRNx9MrI58OclOQnDijBmQmol
J6NoMTdG09RHFoETdqU+nf2WvBXagt58UZ2NvA3nVjWGexrekcU4UidYSAwM
kCUo47rA7H1PTsFtU3H3sq4P5FRAq2H8iXZyGixtOhX/4TA5HWP9asuBFAd5
O9rAK939+iN5B+x+Bl0ln8hSVPGCYuWKL2SgoLE9mvVgdMnVwH2J43CSwUld
hqIm3v4718aoy8B99T3ceNxFPQOWzz878nLHqWeAPXQxolDspp4JvSnG95g/
QT0TLfkV9xScr9SzYDPOan8vkquzYD6TYuqc9VDPRjAoNpdOeqlnQ1Vm5ATG
v1HPAdMw2ytxTlLPAfuESp886qMuR/yYd2Wf009dDu0h5bzbHaCugHzmPKvC
N0VdgVB7/7GSuaB0Rp9grVcrsPRvWvoX5Pnwgw==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Mass = \\!\\(\\*FormBox[\\\"1.5`\\\", TraditionalForm]\\)\"", 
          StringForm["Mass = ``", 1.5], Editable -> False], TraditionalForm], 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "0.5`", "0.7`", "0.9`", "1.1`", "1.3`", "1.5`", "1.7000000000000002`",
          "1.9000000000000001`"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQEf7M+ULcyy8UjcDxVw+DnpT9/flZVQPofDh0Vc
IfMzOqF8AYd9TNHyd75NgfJFHO5d1U1jUJ4P5Us4qPNvMWWbuhTKl3FQP76y
5EHdGihfwWHS/kBGYZVNUL6Sg03ylUbB0m1QvorD/PvHurT1d0P5ag4H09U/
zlE/AOVrOOSHcRwWe3kIytdy8Loxs6L91lEoX8dhAfvfzXW/TkD5eg7rYhJV
prufgfINHL62qRqWHTgP5Rs69HIfuvx040Uo38hhtWnMVo0Zl6F8Y4f4YpfJ
qZOuQvkmDovYhJiYF1yH8k0dboTON8g5cBPKN3N4e3fDEYHPt6F8cweduat3
pJjfg/ItHL5naMoWuD2A8i0dEiY7Ha2vfAjlWznoXfyRt3DLIyjf2sGtLE5+
+vfHUL6Ng8bN9u0qTk+hfFuH7KnOz/inPIPy7Rx8qhykFN4+h/LtHfhuzy2R
830J5Ts4KAk83n118ysIv8HBYZZAtL+Q4huovKODpvJFqUVT3kLlHR3Y967u
CuF7v5/jcm7KwguODhB1H/YDAD10sIE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQEf7L9m1W3b3ZGwHyrgcGDDkvuzeyugfA6HVUf2
/Bb074DyBRy27FB26uObAuWLONySfG/w6+RcKF/C4QeP9p77S5dA+TIOjtPe
RMg5r4byFRyeuKR48kVvhPKVHJqy+jItarZC+SoOz46EJX5k3AXlqzmsY932
3OTlPihfw6F2X+r7LvFDUL6Wg967bxfiXhyB8nUcFjp2rtn69DiUr+fwQ2vj
Cku+01C+gUOibpbu/IRzUL6hw7FHK70uvb0A5Rs5hM5e+oFj/yUo39jBgFvD
PGbxFSjfxOHwvwthlrOuQfmmDn6qze8FF9+A8s0ceDZPeha99xaUb+7wfvd3
14kv7kD5Fg6uNTUyBir3oXxLBxuGAv272x9A+VYOk15/ehL19CGUb+3QeGPp
o1Cpx1C+jUMuy/nFU8KeQPm2Dl4Ti2Lvz3wK5ds5fPoo+PH/42dQvr1DlezF
+wdNXkD5Dg6Pqv/Zfup+CeE3ODg8mPprWfzLV1B5R4ekFTWGt3zeQOUdHaKD
DFOMt72Fyjs53FixQctO9f3+bv5mKw1vJweI+If9APeQwq0=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7PcE3WH0zY7bDxVwWGjgqyw0rQzK53BQdMo+
3RXTBuULOIj42mVYFU+C8kUcBB5liQikz4byJRweSJstzvm3CMqXcfhVECTA
JrISyldwOCA2r8P+3XooX8nhitKS6pmHN0P5Kg5/88tOTX6zHcpXczgic8XV
I38PlK/hcGVX2sumJQegfC2H3KRkxhnWh6F8HYc38yKt5v8+CuXrOcxZ2Ckb
9/gElG/gwLbTY/Hij6ehfEOHKdW9r9xVz0P5Rg6nDUJ+TrW7COUbO0zn61kt
8+cSlG/iUL9/C9vGU1egfFOHsJmdQhdWXoPyzRzauOcf+TXjBpRv7hCy1fTR
1um3oHwLhxrrr486l96B8i0dfF62X2E6dA/Kt3LI0++Qjyh7AOVbO9xMsGyd
NOkhlG/jsL/bdFP11kdQvq3DzMCtwQ/uPYby7RxE1KQX9vE9hfLtHSKUFALC
XJ5B+Q4O3CujOzkankP4DQ4O3YrKd8sPvoDKOzrcV91vUcHxCirv6CAz+fPt
eyGvofJODtv+X/drWvYGKu/k4KT3L9zq71uovLPDbtUnn+5HvN9v/eT37002
zg4Q8Q/7AXsxxTo=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyV1IkwEUxvExXFl2oTSWVsRassItabPltNJnumHKkDCQXFhgLTTLINfN
NKqZ0E1l9kbihZp9QYohSCosVgtpRIYukqwx2mtbpmYrIwmHfbDnwOHwO//N
VafL7FKJRKL5t/9vfKL5hlj34N1im4cPXAwf7fReqqcT0WI43Jx0oIlOxofl
762OqWu0HEKkf11J3y06Fc6+fU8STnTRG3HfFjan9N6jlagVyktWtfXQKsyv
9E7XyPvpdAR+lro8vQO0Gj7vUFNn6xC9DRtehGoeP3fTGRAc7UWhjqe0Fp4z
xvHiP146E8IDX7LMNULvwKZJ28kktY/Wwa9w6CtnXtJ6iGJZpfT1KJ0FZ1iq
lVWP0TuRkHNHHFkcpw2wu2Xp/ptv6F2IrBHVbtNbOhsqW+qptKUJ2ojlqP2h
69k7OgdbVwd6bgjv6VysT1yL2foAvRvCOblScyRI74EVDXNLGR/pvchuTDkU
04ToPASDqolavUjnY8xS163Mm6KBhgWd5Ufpp7gvALotV53Dx8LsJogOnXb/
+Qi7CWd/W6uvd3xmL0DX8OjBCu80ewEe3Z7MbZ75wl6ItldXyhcUs+yFqDDG
frmK5tjNaI8dr5I3fmU3I1Mz6L88MM9ugalle503+s2jsC5mpa2wIP6Pev4C
ZNra0g==
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyntIE2AUh+Ehq5VhrNUflpFaWpuG5cplzstvbnOjRYlahIWBlaPIDTNT
MG90sVg1kCIiEEVnac4tFXGUzrRyQ2qK8xbWlprTslygqV2wYueDw+E57xeY
rk4648VgMPj/5v/2PHdc3jlOI+9YipkOKJHo+f4CFXkVjl94NhQ6XUBmo3yL
RGjT3yBvQL7DLjIml5F9YVHVm5aVD8ibUX7UUGF6VUEOAD8rKHYuVUfeik2h
vK42dR05CJeUq6WBDCN5Oxp12dwMZhOZi4LK/ifO+BZyCFItDZ19JhN5J+oD
nNZSZRs5DMPbDrJ36TrIu+GMjkpPM3aSw/Hh4oFFjf0lmQ/F0zeOBXY3eQ9y
ZmOmXKet5L3408LMfWTrIUdgJPzeidLEt2QBjKPKAVV2L3kfOPlJr72sfeRI
8ApztQZuP3k/JjRC3Y4yOzkKpyq1Nv8Vg2QhborX+x4uGSJHQz1pblWtHCHH
wJW5cU3U3XfkWAxbHLmqkFFyHOa6Y5Q9lvdk4HdmVjhH7fC4GEj2nmddueOk
LsJD1XmW4OxH6iJcXr5fdE02Rj0efr3Xm4/wxqnHY7BIZtasnaAuRnPG1VKf
BXKxGEv2xLYXY5+oS/BrJrhf2zdJXYKqWp/Fk10u6lL8aPi5zq91iroUjbcU
rXWGaeoJOBScF7ZU+5l6AtrnXWnfa75Ql4HJdA8U1sxQl4ElWXh++/FX6nKk
KDoGvPXfqMsRGTGUM940axZVO/Xt1XJ4/rnNfwEQeQWU
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw1yXlIEwAUx/E5OhQ7tMSGaKgMUVljHrkOcz/d1JWUmDqJSMaqRSSoUws7
QIpUTCeFo2N4oDawiBiNpZmaM8mWk03nsbZ05vSPJHCmSS2jwteDx+PzvmGy
wpPnmQwGI/bv/rsbsySQXJqK2nFb3EcP1JREPNPHy8jeyB85ezNvi4LsB1/3
XkVR7w1yADQ+7+NUgZVkFszt4qzJJiU5GFJzqdqd0EAOxWxCacPq64fkcHSE
hJ3WO5rJbFx92dj4QdxGjoBnIfJy/aKGHImliw5csz4hR+O7ITem1Os5mQOL
SjXK79SSuXjxcy67a6eOzMPvCK8ecaWeHIO2BY1yLaiLHIuwKn7x9HA3OQ5f
dcb1YHUvOR58btHbAsMb8n70KyRXWkQGcgLsKOcNjA2Q+Ri37FMXFw6SD8BU
/fhMxp535INwcH2Z34xD5EN4sJzp3F5jJB+Gz3yrtyhnmJwI3UQdF1Ej5CPI
zTxlzNtkJifBtH73V+iP/xZgTRvdb122kAF70wnJcffohisAZl14sHxljHoy
aqf8az0eK/VkPE3K5y1unaCegrLyJfVu1iT1FBzrvCDL4UxRFyJwl9xPKbJR
FyIghMVulX6kLsLM/Ormkgo7dRE4dd1erjYH9VQMOe8LbMZP1FORkVXfw1+d
pp6GKFt1u8LfST0Nj5qlia4OMiMdX3Tx2S7hLPV0JDPvrchnyAwxyrTjVdLr
n6mLcW5bgWkwaI76UXTcYjvuvJrr+wOIUgHE
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXtIkwEUh+EVaFpiJVEfbGiGiY3KNme6TPfbxWkiOJexFBK0ZYHlkLRS
VPZhzoatppky520rs8TlmikFg4lEGrVC8o9hmVlkEK6LRKLZFc+Bw+E5b2Sh
Tn1iLYfDEf7b/3d1vkr8+RESvZLroQe8n8+PsxCRg2Bs31M5H6IgbwKOXZzZ
1qAib4HjE6MLazpKZsCc+lP4cV0BmQcXP7igvqqIvB2xTHdmue00eQeeXbOY
Bx+UkqMQnGdwd5wtJ0cjxO7gr9RUkGMQxX26qPVVk/l43v5LO5LCknfjR15s
ZMBwLXkv3jrZh3MqA3kfvo9e6D8caiQLIFgJd8j8DWQhvgSu0brmr5Dj8GI6
0DIZ0EgWIWekp7LtZhM5HtzavpPx6mbyfmRMjZ2LC20hJ+Cysn5XtK+VnIjq
7PVq+4CFLIYw7/qSpNlKPoCpD9NpbXUd5CT4W7YWZ9V2kQ9CYMqF/nE3ORlB
cp0nZsJGTsG3oqyrZbN2sgSJG1XHExdvkIEJY3ZSRljPqvWAvOxRLiu8RV0K
S+mKeFjTS12KOYHXMMrepi6DxazbzDrvUJfhZ1f/uPd9H3U5Ji9lOuu4/dTl
kMaP+QwaB3UFKrwijbP1LnUFjvCqkt+9GqCeCkaf/+R3o5N6KqpNyzsXEu5R
V2IDW2J3z5D1SjDhNTyV0UU9DcGiijedokHqaYhYXrJaZ8mcdNjOuEvE5vvU
06FaML0sxhD1Q3hdmdMbvTDk+QsBMfWG
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUh/E3hUoCM0pYKLm5KBWTtKabufbX6TahuXIWFCEYhMUSXaOp
eckPIywZK6JSiDnSwNnaqlGmJktJZqaxSleb6+JoGah5+SBjNqnwHDgcfufh
nKksPhvBMEzGv/1/12dRtKuW1xcjl4rogX7tgHGrvIy8GTfM0Q1rbDU5BpZj
QVZIXE/egZHbPxOawzoyC0UvNBbBTj05Hiny5pp+3i0yGyW+5erqS63kRMz8
mI07IjWSd2NkfNCmUt4n74Fj8aJmzvmAnIScKlUj64qZnIKTuuDbBe0jciqS
+F7PK/djchri+E6BNsZO3o9OpbXUWv6MnI4TVb87rk71kDPQ4delc1V95AMI
1E46rbED5IOQ3YnUn/I6yDzI2b/m004PkjPBHwtG1X0aImfhOHeOZy99Teaj
+8/sdN3SMFmAeE6JsN7gJGfDONjGKeW/IR9C09JEeHx2lJyDdtnM0GXzGFkI
9Uq2K1b9jnwY7Z7rVckcF1mEeYMwrIl+Twb2ccctEubDupsA06ayJ40rZCYX
xYoLstDiR+q5YNxdT1sXJqjn4WXE0dTs5UnqeSiSGAKOoJu6GC0tmatbIj9T
F6PTZ6zcsM1DPR+9eidXl+ilno9wYZerJmuKegHEFc+ZYYWPegFCCfeiFKov
1CWo6EnYuHbtK3UJTDMCV+/Db9SlaLNZGnjnvlOXQsg/Xx5eJTMyjPblmJJv
TlOX4a7SXm3b66deiMB2tUHn8Iv+AnZU6hg=
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Mass = \\!\\(\\*FormBox[\\\"2.`\\\", TraditionalForm]\\)\"", 
          StringForm["Mass = ``", 2.], Editable -> False], TraditionalForm], 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "0.5`", "0.7`", "0.9`", "1.1`", "1.3`", "1.5`", "1.7000000000000002`",
          "1.9000000000000001`"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQEf7P2qfqvs35q6HyrgYFYoWbNArgHK53D4uN46
Uvl1P5Qv4LCzpl34QegsKF/E4UCn1Y9ZfYuhfAkHBvvi1/0yq6F8GYcU/QnM
755uhPIVHO4eSZzy4uQ2KF/JQaPt3WtGsz1QvorDB8eaQCHhg1C+moOAelW4
rvcRKF/DYYv7NIu0g8ehfC2Htbv7n90vPg3l6zjEWL9fdDrhPJSv5yA6r8/D
5PBFKN/A4a/4o6WNHy9D+YYOAac27auyugblGzkULmTZFzT3BpRv7DBjyvfP
TpK3oXwTh9la05Z1rb0L5Zs6OFmwF23XeQDlmzloOqpqy/Y9hPLNHb7wvO+e
9+sRlG/h0Fwi7/qs8AmUb+nw5sW8aQs/P4XyrRxerbtt3VD/HMq3dvDk2xlh
IvoSyrdx+PJWIL1oyyso39ZBreKwyseYN1C+ncPr5oCmTL53UL69w62F3yZO
O/F+f1dY3MUqeXsHaLzvBwAuXKIS
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQEf7MvzbhTYfUvZDxVwMGG47XFfoR7K53BYdfEt
w7SLfVC+gMM6owCzSbkzoXwRh33as++KP1oE5Us4XLB5VZipuwrKl3H4MG3j
Vx6PjVC+goO+V8mdxwzboHwlh9zeFZc1bHdD+SoOk0yO2JTWHIDy1RxUDune
0ppxGMrXcDiw/nPKrffHoHwth76Lb+y2N56C8nUcokqrZzP5nIPy9RwsW7d1
tapdhPINHIyyWVSmOV6G8g0dOhbOMk0vuwrlGzlIsfv9NDpyHco3dsjQuT3d
UusWlG/isEcp9PeB5XegfFOHX/afFonY3IfyzRx2aovtcfr8AMo3dwiTmXrJ
JPgRlG/hsN7TxKxv72Mo39LhROgZhv+GT6F8Kwf/k1c3Wm54BuVbO7QWMMh8
Nn8B5ds4WElGBD868RLKt3VgK/k0+0DSayjfzmHSb8VIT9a3UL69g8cTzb+W
G97tn+T+6HH/UXsHaLzvBwACGJ8L
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtylsogwEYBuCRC+RYKxMXMwsb+R02foa9TiVLSjlF5FRyiCu5QGvmQv4L
ceFmFw7lEGWyC2421HKI4U9apGHNcbFySHKB9n319va8fTHNPRVtvgKBQPKX
//aeR32dVKKSzbVYaIBQO8xVygbJ/pCUG05CHBw5DCG7HfV5/BRZCHto7fGs
cYYswobmo+ZzZJEcjTJ966k2xUgWYyWssfrDYCJLsF1sdo3qN8lSqIWLt5zT
TI7D2lHOqKJuh5wA0cp7Az9gJcthK67t8ZztkZMwz2tk7qZDcjLGtiTWiPAT
cgr81t4aRIE8ORXcQOY1G3VGTsO44cdnq/CcnA4bow761tnJCvQ52WXWfkFW
QmD6svIFV+QMPK2yVdIdBzkT/pEm8a78hsyidKk3UjV0S85Caum0KvbSSc6G
PLjTnZHvIqtw9TVpZox35Bxw0+am/fgHci4qFcqJ7YVHch7WmcQAO/NMVkP6
2N9ts7jJwFzzYVF79YvXWqDrXOPq+Hy1KJmDjXsd4P3zWH4B7hKpdA==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQEf7Oc0aouFTkrcDxVw+Gwyi4NNogrK53CY5NTf
1X+1E8oXcMiqXGq7L2AqlC/iYKHyc2H9ivlQvoRDyD324r6PS6F8GQePT9HX
eX6ugfIVHJr8rS1uFW6C8pUcbmvdCYq6ug3KV3GQndkwa8fi3VC+msMmBX2N
BzkHoHwNh4tX6lZpWR2G8rUcvoZP2GppcQzK13GoWKZ1YFrqSShfz4G3vaX2
2oEzUL6BA//BGmcflQtQvqGD5imtlsN/L0L5Rg7GdwPNtd9chvKNHdaxbet5
9O4qlG/i8CNGvd2X9QaUb+rAfb3k+hW9W1C+mYPLxuodT7PuQPnmDteueZ35
uOMelG/hwMaiWWve8wDKt3SYGeW1PPvIQyjfyuFw4pucKyyPoXxrh+PXUk4a
+T6B8m0chEJZ5njOfQrl2zq8jps48+6XZ1C+nUPpCyO7rcEvoHx7hyk8x/fP
2PkSyndw4Fq7iCFI7TWE3+DgwHljW9OamW+g8o4OE59KRJcKv4PKOzq0hL1S
rZ78fn+IsZPknMWODhB1H/YDANVIs+Q=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7GsKj6npG8fuhwo4bPnYwxS8rhTK53DQO8b3
UbK8FcoXcPDqPDfx9daJUL6Ig6yszJmnvrOgfAkH2/SpkzqtF0H5Mg7271SN
twqtgPIVHE5Vu6TMX7YOyldyqNqxzvv8j01QvorDdm7rWKnv26B8NQd/Fcmv
bd67oXwNB5aW99PqP++H8rUc+tx9/R3LDkH5Og78Lo8uC0gdhfL1HAKZOWoZ
nhyH8g0cHj29UfP60iko39Ah8ZP2ua1Pz0L5Rg5ZLv0/lvZegPKNHT5JXAoJ
tLwE5Zs4lNezJUR/vQzlmzpM37wz0e3gVSjfzEG4kTF9xpzrUL65w5nvLaq3
225C+RYOdlOT78+uvw3lWzr8MPvint12F8q3crgZE5p5d9Z9KN/a4bhlylGX
ew+gfBsHZo6X3K1fH0L5tg7rZvK4/BN6DOXbOXC9+7+4wewJlG/vcHTV9wt3
459C+Q4OUwo0r7zoewbhNzg4GO2XFSg7/Bwq7+gQeD/YLPrvC6i8o8PkGFPb
fJtXUHknh/o1YWFdDa+h8k4OOzcyPW09+QYq7+ww+Q5fqY34O6i8s4PH7q8b
OzPf7xdeE9RrsMPZAaLuw34A2vLKzA==
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUh/E3o1FJUnO4KUW51kiT0loX3XR/55xKEF0wWA6NaLFCmh90
almT6IJlH8yQahlZWDNNliuk0I3cLIvFmNqodJaaOtNdiEWG3dk5cDj8zhN/
SLtXHcEwTMq//X/DE5S2S27X1K7Kt9IDx9n1+vQCLXkxiry9tUWRevJynCzW
xKOxhsxBac8GQfWiejIPvA4+R194g7wSzj/JB0s1TeQ1YAkPBNcl3iPz0Tpo
XyApaSUL8FPPTBUaTGQheF+fXvB2mcnrcYp78dJwXCc5EWJjQ+iY+Rk5CbJf
lSbXWQt5I/qHH8a0K56Tk1EtWV35SG0jp2AgKGpsvtVL3gyeYTbPFnxJ3oLx
mzuRV/CaLIJAV7GsyuMgbwXbKBpp1jnJ2+CUuxMio13k7birfpVUV9ZP3oET
Q5bfdWMD5FToZZa13cq35DRYHvtq7B/cZDHO3WGVq9TvyBLMcJQ68Y/35HTY
OMqcuIYhcgYiVnQ4zGIPWYrz0uF5+/QIGWCWXDvC2v0p7GpANZ8aI9w0Sj0T
c6pgiM8eo54JTZUj/+McmZEhLrZPmzE+Tl2GhVGB/QLXZ+pZmDjd/a2sZ4J6
FgZDJlZs5yR1OTxjS6NC7VPU5djDte3zt3ipZ6OtxegJ3J+mng0OYzo6avxC
XQHulWJNW9sMdQXe8J58TzPPUs9BxWSJp7zLRz0HhoTLZ3b1+annwufl+R+4
A1bT9RdXD0fnIvwPWv8CW7H9Pw==
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXtIEwAQx/EpYoK2mo6hIMNF6ioZ0+XM928vZw2SJPzHHjpxMaPGwsKJ
gWRomkgKpaWopSIuWjOZPZCNqcWqTdOmMzUdZQRKZjKxJLLCOziOz315al1u
sT+DwUj4t//vzqxlfvml+jHLVdjogcrkTY7g9FlyEGJac0Sq3TryXqRtNzmm
2g1kNu616NWPAqvI4Si5O/Q4qqCOHInmk0zWDW0jOQqJ4e6N64fukPehZ62h
flXfSt6P4TDf1+K2TnIMyvs7uTxrF5mPS/z4y8cie8kHMejjTLAsRnIcHvSw
AyzVJrIAzI1es03ZTxaisMRpXNIMkONRO6vx+91hISdgZZyny1h/ShZBlcbs
Wz71gnwYq9vPhYrFIXIitMG9sS1lNrIYIfKQpgi2nZwE6afbVZYrw+QjyCuL
WHZ+HiEnQ+vXLd+T/5KcgvuimgrB/CtyKrwJrskFjYOcBv1gytj01mtyOrry
5w6MN78lZyCOwR69lu4iZ2Kdm9RgWhkjA0XdKmvQiXc7rgRkP2tTxcIJ6hK0
6ZjRkrBJ6hKcK2A7g7fIDCk8RlexYek9dSnsmzcDLk66qcvgruA2jo1MUZdB
OqAerXw2TV2OW4ZA3nmzh7ocu6LLv5U+nKGuQHsoS1Dd94G6AvLcnI4a4yz1
LMSGFpnVpjnqWfAZHFf9LPPUlYg2c5zHrR+pKyF1+fzFbxaoZ+NMXSK/a2aR
ejaeoP6CvdRL/SjyvntiC/94bX8BI0D6Zg==
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvFREV7YZrq8wEulDnUrzW25ps7tce82DctGWTOKSp0hKgyi
WkTShiNCF5hUVAMdC6/Tkaa5ytKB9CFrEnNISCV4i3Ip1ZcEocJz4HD4nX9y
pflY9RYOhyP9t//v5qypjX05bMKZNDU9cPwcK0l9BHIEFKrBtx/NBnIMOF1J
yT27T5MF4Naez7wkNJET0T0/e6JkpY7MwG2pL91hvkjeg1Zm0mu/aiGnIGji
BkS8BrIQzM5rG4v3bOQ0JAbaazxLdnIGhvoCrlrLLbIYZbONBoXeQd6HoGZm
1ZnRQs5C20KB7UhJKzkb1u0THYamu2QJ9KH+ucmF+2QpDAFH/sqph2QZ9k+n
Cha/OskHMJz07vtqSxs5B2FPOtPZ7SLL8YEb72wXuMkHcaeL+RzpeExWgJd3
NOI2r4Oci+W9zV+Czk5yHubFub5mWTc5H+u63gpTqIesRDgUHRdj85ALoPOG
y1l5P1kFpezk1uHfXrIa9ZHZUfyzT8hA7Lh3htEPbNoKPLCo7JXSQeqF6By5
3DuW8pR6IYxm3ydBwhB1DebS/W6WP0xdA0lTVU1W9DPqLPQ3blp9USPUWYhQ
lvSG66OuRcVIm1wpeE5di23uKx7OrhfUdRj49ituXfySug7lE5lT/PxR6noI
4yv+iEpfUdfj/TR7QWJ6Tb0ImrVGJ79hjHoRbKyv2nh4nHoxlNyl5euzZGsx
RrVVsT/q/NQPwTPF++na8Kv/Amxs0jE=
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Mass = \\!\\(\\*FormBox[\\\"2.5`\\\", TraditionalForm]\\)\"", 
          StringForm["Mass = ``", 2.5], Editable -> False], TraditionalForm], 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "0.5`", "0.7`", "0.9`", "1.1`", "1.3`", "1.5`", "1.7000000000000002`",
          "1.9000000000000001`"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7C/Uht53VM7aDxVweD9ji4FTRjOUz+FQEWe2
/rLZZChfwGHzt83sT7bMh/JFHCZoxO3d2r0cypdwyDGfeYEnaAOUL+NgUn36
THbPVihfwUHzVKH6vvzdUL6SQ1cIi3bl7wNQvoqDgMjUu319R6B8NYfYZ2f2
7s07AeVrOHyzUFm3deYZKF/Loe28k9actgtQvo5D1/YPHj2PL0H5eg4Xe9/8
m5N0Fco3cKjNMTQ+wXQDyjd0EOhcvJL/8C0o38jBhHftsZpFd6F8Y4dnUaFa
AgEPoHwTBw/1XtXOuw+hfFOHqUf3nbaofAzlmzlECH/6vFHpKZRv7uDn3bG7
6+YzKN/CgatBNDdm7gso39KhyO53+uHcV1C+lcPCnn0c8V5voHxrB/dlwpMu
Gr3b/8Z1soXGG2sHaLztBwBH7Ix5
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7H8UGmkfTM7cDxVwuLScI1LwVhOUz+EQms/P
zLtqEpQv4LBiTY3WtDPzoHwRh75T+xYZ3V8G5Us4rMhZqf55y3ooX8bhwKM3
+7rebYHyFRyq/Fvydy7bBeUrOehEPJzHU38Ayldx2MR298TH74ehfDWHwsYG
h927j0P5Gg5MCxtvaZ44DeVrOZRFFV5r570A5es4dFwxO6oeeQnK13P4XCLi
+O7oFSjfwGHD/uCNd4KuQ/mGDm4J3Qp//t2E8o0cbhV9Y4w9eQfKN3aY5dv3
Q2zjfSjfxCF88Rv/JVEPoXxTB/+1Bqu7Xz2C8s0cnv991HK9/QmUb+6wPkqP
SdHoGZRv4WAaqhXH8vI5lG/p4Lta45LCmpdQvpUDy/IddRLVr6F8a4dGjujQ
CaFvoXwbh/+6D5kMrN/vT32dG1GbauMAjcf9AG8+k7k=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BMNFn1dLZCxHyrgcPj5nSqfe41QPoeD4Lpn
WSc3TITyBRw4HKcHOBnOhfJFHFasq5myd+1SKF/Cob96C18D7zooX8ZB5sL8
Wf+ubYbyFRy+iea/OuW0E8pXcliVccO/ynU/lK/iYHsn56/T20NQvprDn57+
90fqjkH5Gg4Rc5uuKIaegvK1HLQ1/e965J2D8nUcdJnle2RSLkL5eg6uGxqq
GzZchvINHJpYnd/ESV+D8g0dPK01Tp9dfAPKN3Lw51jK9crjNpRv7MAQ+Cnn
Ouc9KN/EYUvzPfUHRQ+gfFOHoOeb97x6+xDKN3NQ1nr5eVnpYyjf3CEx3Ddg
M+dTKN/C4cKWNMeNK59B+ZYO2+b/4XENfQHlWzncf+W7U5TnFZRv7XBzwrvv
Z86+hvJtHAK2uguKz3oL5ds6cIhvvbCo4P1+PqvVFxJ9bB2g8bofAIhwmBg=

           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEf7OVaWy9c/5+6HyrgYOz0YseS0AYon8PhpPqD
45w6E6B8AYeUzxcND62fBeWLOLwxUJgWdXExlC/hoMN3XEOicjWUL+PwxeWl
CYvyJihfweFciPfp9eLboXwlh+O+3/Z4TdsD5as4rJOLvBnhexDKV3NgeNDY
VzDhCJSv4SByjEehSugElK/lEGbdpjzp4mkoX8fB6JbM+senz0P5eg4uxgpf
L/+/COUbOEwUPXNhkukVKN/Q4XWHdH5E2zUo38jhh8cv+9CPN6B8Y4dn6plv
95fehvJNHD42rNa+KnQPyjd1uP2j8Ojr5AdQvpnDlVVcS9lPPYTyzR1OrNwn
mmr9GMq3cJjIL7907fYnUL6lg/KGZRW9ds+gfCuHOvvzlpvPP4fyrR1O5u1n
upD1Esq3cbiT2es9nf81lG/rsMRR8Ma+vW+gfDsHoU9Oy/6VvNtfvoS/ZN1D
OwdoPO8HAID4njY=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQEf7O1s9vpKsSfvhwo4qDgezp7mWAPlczjoXrb/
NvdnN5Qv4ODM/Lv1vch0KF/EIW6t4WpelYVQvoSDyPQQD+HDy6F8GYe7rXOO
bohfD+UrOOg7G7mq/twM5Ss5pNw+sXX/zh1QvorDl/U5pcLv9kL5ag4lgfcf
BJ88COVrOLhsZnXkv3QEytdyeKvlvHcm/wkoX8fhePmVQ7ENp6F8PYcTjw6/
vKh0Hso3cCg4vtt7T9VFKN/Q4f12tkv51ZehfCMH7Q3mjBcmXYXyjR1UrVq3
6h24DuWbOGQt7mJ5zHQLyjd1sDmnIeoZdQfKN3MoVJ394+DRe1C+uYPDruhD
kYseQPkWDmrXlou7vH4I5Vs6MBWGlYbbPobyrRyUe3obfWc8gfKtHY5c3Pfv
4e+nUL6NwwmZot2X0p9D+bYOSTU9Tfdvv4Dy7RwWfufnORX+Csq3d+gsDHgX
evs1lO/goKw1q98j7S2E3+DgwFXiJpH5493+Sx/vp1RecnCAqPuwHwB8rqv/

           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7Dc4h/yb+CN2P1TAYcWN/xqPHMqgfA4HPcYp
p4052qB8AQfzDQ9YluhOgvJFHEQYitdt/T8LypdweNJxwf7ktkVQvoxD3vTl
n/K3roDyFRzmGFSJXSxdD+UrOTj2/sniq9wM5as42KgY/Q+ftB3KV3PYUhAf
wsmyB8rXcGD6G7R7b+oBKF/Loc7c8QXv50NQvo5DlJH+8a0rjkL5eg7eezKb
61tPQPkGDo1P90626zgN5Rs6hOSJFZ9ffw7KN3Lw3zlvbfffC1C+scPy9zcY
mrZcgvJNHDjiHVa71lyB8k0dNuZ1LgoNuQblmzkYvMzfbWJzA8o3d4h69Ls7
0/gWlG/h0PNplV+d5R0o39Kh/23ZMQa/e1C+lYPEjpuCjhYPoHxrB+eXd0u8
Ax5C+TYO9vO3Zr3OewTl2zpI5eokvZv8GMq3c5AVyvRT3v8Eyrd36HnmNjvq
w1Mo38FhyiEOpTT15xB+g4OD5YYkOcmUF1B5R4c1Z68reyx7CZV3dKi9mSl8
8u0rqLyTQ/XX6YLFVm+g8k4Oj+1X1cj1vIXKOzsc/OL+eMmjd/sN1vlON8h0
doCIf9gPAIyDxCA=
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyX9MzAEYx/Grw+76h0ZJPyYkaUVXSnV138/3ru6utTHEWWr6IX9wpa7F
ltrO2Oh0uGEsbC4NIXbUzWLd2nUpZVm5u6JwnZTjrvtDJpOwnmd79uz1vNcU
HdlZ4svhcOL/7f+7MF5mhpvrVh3aZaIHGoVTY2FWJZkH3SS/qeVsDXkZdJWN
/SrtafIKuPlqYX2tjhyEAw/yzOuYq+RQuDrnGkw+N8nheBTopy8tbCKvRVTH
8eDh1GZyBJg8RdBezUNyJBT2mX2CyMfkKHQcbV3fJWojRyOYPdaVon1KjgHb
7tn/felz8ib8ebJaU2QxkeMgeL+ofN7aSRbA4rpk2+Awk+NRY3LIK7nd5ATo
CtwBcWk95C1wykocBs1LciIWPzNU7/D0k5MwUM+0KQ8OkLdipHQuPGH2NTkZ
oqGfXYPyQXIKLPf9Mvv0Q+RUiHfzh99wrWQhyntDRpvLbOQ09J7a3L1k3E5O
Byrd/vfyR8giZC+Pjs9xvCUz4IW9OvFCOUoGzqyMTeyZH1uwGpgtfJcd2vCB
Ogv13bJOy42P1FlItXduTVc4qIvRZzDmVGSNUxejI9YnShDhpC6BpHVVUqDv
J+oSuBjbHp6TzMlAa8zFEG/3BPUMpBc39hpbPlPPxGXxRI70yiT1TJzjXMit
OzlFXYp5NiD0sOoLdSk2GpOr7cUu6jJcr5N52xVfqcvwQ1t13nfbN+py6H/n
/7omdVOXw998u6CK9VDPgmy7pbpWNG36C6o9/0U=
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXlIEwAUx/Ex/1EntUw2EddhUhJbbh7Naupv7jKM2KJihGQtRTczRZIU
RZTFPCpFrZY6LQ/SHEQUVmzVcqYOs8OZUsT2R8NRiDSLQmphhe/B4/F53+26
0iMFTAaDkfRv/9/1CWR6Fami8Iw0Bz2wpUUcEVzTkEPhiypO3OE+TWZDHVxg
5xSVkKNQM3Y20rJQQY7G0mVWSIKylhwLa9xgf0HQSN6GDZYYqaG8iRyHlfxp
/bm6VnI8Sk1huhV2B3knTm5W1gruXCcnwJYcmjtp6iLvxlFBiWpoqJfMxwWB
Z3zxYh95D9ovqb/1zg+QhXDeusGNUNwmi3CKlVgodQ+TkxD4WbPrRI2VnIxr
WxuqK7PuklNgaOKZP7XdI6di5Oqw49HG++S9sDR/rDze9YAsBuem/UquaJSc
Bpmj0W5495C8D4c5vO5442PyfhzT/moWptvIB8DsWesUM5+QJThkd5Yvzj4l
p8Oc0aj6bHWQM2DpNOStTj0nZ0LPyQm8fzZGBuSmpfoym3PddcCg2ejtso1T
l2LVr/OnOF5Ql6Jf0tkQ65qgnoU2j3dUOD9JPQtnmHadxj9FXQaX2V+R99tF
XQZu1ZcJSdQ0dTnC8gPsGeFL6nIsr3z4EVDPUFdg5mvlcuv5V9QVaK8Ol7d0
v6auxIjWG+meeENdiZQ/XF5f1VvqKrAKzQLfplnqKnznx+gHrGRGNjRFHdoF
pZt6Nop1IZ4yH5lxENHaOX5R/ZzjL7ov+nU=
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Mass = \\!\\(\\*FormBox[\\\"3.`\\\", TraditionalForm]\\)\"", 
          StringForm["Mass = ``", 3.], Editable -> False], TraditionalForm], 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "0.5`", "0.7`", "0.9`", "1.1`", "1.3`", "1.5`", "1.7000000000000002`",
          "1.9000000000000001`"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQEf7AMb1888MiFvP1TAYcUB/6ePN7ZB+RwOP56c
2yhaMQ3KF3AIs/jw93PnIihfxCHheGPThY7VUL6EQ8T5itUXRTdD+TIOTMfZ
pr002gnlKzjsfO5w9yTXAShfyeF/qmDCx9uHoXwVB71nazO5uU5A+WoOK5fK
q/hNOgPlazjIiN6cyLTzApSv5WB20DbRI/gylK/jkHYx88AmsWtQvp5Db63X
Vlamm1C+gcPfAw0H+ETuQPmGDhfcp0xZ4n0fyjdyqN6zKv1y8EMo39ih8fW6
W3XCj6F8Ewdny/PffZ48gfJNHV4GlanuOvoMyjdz6Hy6b4/b9hdQvrnDqk7F
12U7XkH5Fg6Tu7mnXjrxBsq3dPg5Odzy6fN3+5f6HQ5e0WDpAI2X/QACOIkk

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQEf7KtLe546X8zdDxVw6D2/mHezchuUz+Fw7ety
Vv/XU6F8AYegySH8Z0UXQfkiDgmZj9J976yC8iUcHP225NnN2wTlyzhM1NPo
4Ji6A8pXcDgRMoWp32c/lK/ksCTz3eWW+MNQvorDlRtfQ/KKj0P5ag6HHC4v
875/GsrXcFA5yb7CJuAClK/loOGTw2ty6xKUr+OQ/m69jV/PVShfz2FTStH3
sNQbUL6Bg7HIYjvllNtQvqEDp3wN98T2e1C+kUNAvn+r8/MHUL6xQ+b2BTq/
Zj+C8k0cgrfqKWUkPoHyTR2WWL1g4TV/BuWbOUheWO+bI/MCyjd34Jl53JBX
8BWUb+FwIEGhrUrkDZRv6XCdoXWxk9q7/QfdNk3nu2/pAI2X/QB/2Hs2
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEf7B8b/1mvV5ezHyrgUMtfof9OvRXK53CYZFKf
y/1pCpQv4NB0N1FJ2WMhlC/iUOW7IPLGqpVQvoTDlquWj1pObYTyZRzeSN9O
rqndDuUrODhJ19cueLEXyldyOOP6M8a0+RCUr+IQv661c3/GMShfzcHH51Fo
6KJTUL6Gw7w+Aa9C3fNQvpaDe9uipReYL0H5Og7csjOYnadfgfL1HJgX3DN8
6X8dyjdwYImaVLlU5xaUb+jA80tiW5LOXSjfyIFr1zJOLvUHUL6xg8zOS2lR
Jx5C+SYOG6cq/Fpc+RjKN3VYUZItlmP1FMo3cwj7s3WPNddzKN/cYf/UZ/Xz
X7yA8i0cYg7EZKpffQXlWzo4fY24l3b+DZRv5TDnhEHbl2vv9lu9vXPoQp+V
AzSe9gMAxTmGww==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7Od33O+Kys3aDxVweJPZnOs2vxnK53DwXFdx
yjt3MpQv4LDe7L9QMvsCKF/EYc955+jSc8uhfAkHJnnn9wENG6B8GYfDE1T+
NZ7cCuUrOEhERce17t0N5Ss5RFp0TJ6rfRDKV3E496Ew9eqJI1C+moPv/Ctf
GLacgPI1HMK2z5p68tUZKF/LIYp/n0fp1gtQvo7DlzZ2fwnJy1C+nsN/pbrV
NvOvQvkGDgJZ0nE33W5A+YYOq915ot7y3YbyjRx2b1nkUf/tLpRv7NCnwrfc
r+4BlG/iUHJJPENP4BGUb+pg0KYpn7vhMZRv5sBWez13TtxTKN/cQe1FuGug
1HMo38JBVlr0rPLjF1C+pcN6Vmav9TteQflWDtaym9gmzXoD5Vs7nGOTssnt
eLffeEr3ErN91g7QeNsPAN6ahXY=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7A/Yi3PMLUnfDxVw8D5R8yonqxHK53AQK9jx
V8BuIpQv4GBTq171uXgOlC/ioOcTWqChuBTKl3B4c0z43xyvtVC+jMO+Pk6d
sLDNUL6CQ5WH041f83ZA+UoOAf8eyW+o2gflqzhIaZ13ays6BOWrORwUMHJ/
8uYolK/h0LZk8ra4VSehfC0HHz5L7U8rzkL5Og77Qx9HhH6+AOXrOSg8tF99
0eAylG/g8FGa+yZTz1Uo39BhY9n3PSwsN6B8I4f30g84f02/BeUbO8REW4jx
uN+F8k0cNia3h5hyPIDyTR2Kv3g/WVr5EMo3c3iVInW09PsjKN/cYe6PLx9d
G59A+RYOGx/Otd8l9gzKt3ToObbJrXL7cyjfyuFuZoGfTvJLKN/a4WimpEW9
5Gso38ZhkuHvLIVbb6B8WwfpeJ6DB5a8228nde7Vhb22DtB43Q8A+qeUpw==

           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtylsowwEYBfCZlymXkUzulr9Ych9mzHlQlDTUJLlrSsijsAektJnUSkuU
rRQPaA+MlayWlTJtxhDGkGsue1nxstC+r06n3+lL7RpskLNZLBb/L/8dOG9F
MzNpOuztNtOA+IwiDXOqIHOQE251bKvUZC7yBWE/K2otORpXSa2LPoWeHIvd
nVlfg2SVnIAp3qxFGGQgp2A+sTZpr2OTzEeWIcblF5nIaRg56ObVK/fI6VgZ
muDOMRZyBio/PblhEitZAHdccWOP+oCchcieVCM7wkbOhmWB8dbt28m5QFX2
udx1TM7Dm290WeE5IecjiqkybrHPyAVwc9Wd7eILciH8E/vSI+UlWYhm5bes
6eOaXATNTEhtm/yWXAxVjtan+/aQS+CYrJEKq+/JItTbtIV8/QO5FM653Zvk
4EeyGJXjJRsvA0/kMnA2JXGiu2dyOZzSNZ295ZUsgSl+2NjveSNXQLa+tOPs
eycDmYpht9X/EfAYwJNPp4fOf5k7xEEGzRIQ+POafwEoI6Z6
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQEf7H9w8SVVuMbshwo4uORqRVz6WwLlczicYjC7
HnWiBcoXcDiyuTZqr+pEKF/EYYL78aMHy2dC+RIOPG2506WXL4TyZRx6Ikt0
d/sth/IVHDwUtY5LrF0L5Ss5MDJFlMfEbYLyVRwSgmJVVG22QflqDp9DZ2sE
5e6C8jUcXCIvCCS/3wflazm8bTYM+Hr/IJSv43Bzwks597wjUL6eQ8XO0xub
FI9D+QYORu2Lu3p+nITyDR3cMsrWBH46A+UbOTR6S659zHYByjd2qLu4Mvvr
kotQvonD8+NmUx8EXYbyTR20fhwv0Ba4CuWbOZzIsnwTf+calG/uMOGVfgP3
9htQvoVDwKsnIvvn34LyLR2uhh1+zjftDpRv5bBZ4HzhpJn3oHxrhx01Geqf
Qh5A+TYOutcXCAUmP4TybR3C55S5byt/BOXbOTgIqzZ+nvgYyrd38Am1v3d7
4xMo38EhwpX9mvP1pxB+g4PDrVQxPUam51B5RwcTybAPrwxfQOUdHaJfuSTe
THsJlXdy0O1r+7Z0wSuovJPD/Pg9vtr3X0PlnR0UtJYouyq9hco7O5irVXtf
yHwHlXdxWCqzeNmqre/3f3OUmBAg4+IAEf+wHwA8J8qI
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUh/FXKefajBFTZynLqJkSYi6nm+n+m7oLFZkEagVmZqkMA8n6
YjnEUNK5mGGStqaZfuiCLCRtsoVIG9HCaWsrLDfT7F6QGYRlhefA4fA7T/yx
UwXloQzDpP7b/3d1vsmXBkNDed59DnpgsbzZ3yg6QQ5HTV90b8yXWjIP7Htt
tzcKGsh8MNPjcSMzF8kCfFIqdNcsJnIsOiBfSuzsJG+GpMyta8m/Tt6CyJn+
6uXSG+StGOZUBKvODJBFWAirLvLP3iJvR+3XuIb8gkFyEqI2OO9cnbaSdyD5
z6SDaxwiJ8O2xlJQUzFMTkFZL1thOWkj74RVf6jkdIudnAplZEpX1fuHZDHy
12kCReYx8i70cK9cZo6Pk9Nws96qCkofkSXgre8pOS90kdPxy6VcW8J/TM6A
09D9O0LwhCyFNrhiikl6Spah6UDjKHvbBDkTiui0Ylemh7wb5f4xG794kpyF
KG+wbbRuipyNsKPelbb+Z2Q5nAKf9chzLxnYI/Hd/8nxrVoPGNLa68VqP3UF
5g8ynrmmF9QVqCtiOYLul9SVMCQYzSEx09SVWJybWo6tfEU9B+b08I4I+2vq
OWjPFYp8nAD1XHwP32v8/ICsz4XMffhShi5IPQ/yHzLpgHCWeh4Klz5sSvSS
GRXi9ndp7ra+oa6C52xAm6Cao65G9Dwr/kLIPHU1fFnNyhE7mdGg72Oraejc
W+oamMXdpbrsBepasLiFlRPMO8dfqsr19g==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Mass = \\!\\(\\*FormBox[\\\"3.5`\\\", TraditionalForm]\\)\"", 
          StringForm["Mass = ``", 3.5], Editable -> False], TraditionalForm], 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "0.5`", "0.7`", "0.9`", "1.1`", "1.3`", "1.5`", "1.7000000000000002`",
          "1.9000000000000001`"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEf7DMPsaxSri/cDxVwSHrxambr704on8OhKjt9
S/jOmVC+gENIKduPUsulUL6Ig1HaUvfXreuhfAkHl/SItmk3t0L5Mg6XhJzi
02/ugfIVHOJfnVi2JfYQlK/kUFouNzVzzzEoX8XBb8exr+2tp6F8NYdqI0vX
91EXoHwNh728C3y0VC9D+VoOTzdZzPgifw3K13FwfP3I/KbnTShfz8Ejd0V2
3sI7UL6Bwz6uF8tWCT2A8g0dPJoP7Zd59RDKN3KI+fQvO+PaYyjf2EG6hqP7
7bWnUL6Jg6234CmB18+hfFMHmwe69dZCr6B8M4cd27tbb3u/gfLNHVhP7JJK
nv5u/6fXzKvnzjB3gIb7fgBwxHpG
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEf7OtsPvsnyxfuhwo4uH63OxSS2wnlcziE1Thw
TNSZCeULOPhfyOL0P7oEyhdxMOBg0824uQ7Kl3DQfTbZkzlpK5Qv45BQlRzY
Zr0Hyldw4NS95GX08yCUr+QgWf2b46/9MShfxeHzKr6Hr96dgvLVHNgZJrPl
MV6A8jUcjh48l5Sy5xKUr+Vwwzbd5cGyq1C+joMzh+aWkv03oHw9h7yQC2v3
s9yB8g0cNmd8Op1Zeh/KN3R4mmf2W6jjIZRv5GC0dHHnjczHUL6xA6vHrzsZ
8U+hfBMH/+MFX7QznkP5pg4/j8+P62t+CeWbOXgtqhFj3Pgayjd3yLyekPjz
/dv9Nlw37SKfmDtAw30/AIzDdQ0=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7DdLa2+9UVqwHyrgYGYu/KS/sAPK53AQ2i1e
4Gs8A8oXcKiXqpBZ+n0xlC/i4PXmsNzn5WuhfAmHBbmSez37tkD5Mg570sV0
fynvhvIVHNwmuHNYux+E8pUcHMPZJq1NPgrlqzjUNcwTtXlyEspXc5jJbbrn
6dFzUL6Gwwf78/EPmC5B+VoO38vn3qm5cAXK13F4biZYnXnqOpSv57C/3+ZF
4PtbUL6BQ8u6h2xvbO9B+YYOaXdaLlTfegDlGzm8ef+Ld/7KR1C+scN2Tx3x
k91PoHwTh9XLk86kNzyD8k0dfjMqF7xtewHlmzm0nmtqvTDvFZRv7iB5pX59
9/E3UL6Fw+PTQRPnMrzfv4vjFeexfAsHaDzsBwDczn+Q
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQEf7BV7LF3v3srbDxVwWDZRTunFizYon8PhlIng
2d5106B8AYe1xaK8T7ctgvJFHPry0hUmnF4N5Us4vN+mdErUZTOUL+Mw5U78
8f/5O6F8BYdN67dWrDU8AOUrOZz3nHpClOcIlK/i8O5Q18dAlxNQvprD7Dj1
6InXz0D5Gg6+IVNaex5egPK1HLgZd9YrNl2G8nUcLi5oOGbncw3K13PYI3Qn
candTSjfwGHSvqzX8hF3oHxDh1y2vy5N0+9D+UYODhOWrrhS+xDKN3bQ2poe
vtfxMZRv4lDwJNLqk9hTKN/UoVX4YcW7P8+gfDMHC/8lZoafX0D55g7Nah9L
bH++gvItHFaocX+dyfcWyrd0sIyOl75o9H5/YfFtv5hYSwdovOwHABdxgqw=

           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEf7J2dCw/JP8reDxVwYP0gPp9vSwuUz+Ew41sA
Q3D9FChfwGHub83t1S8XQPkiDgyvK0yd5VZC+RIOSdUvI4UzN0L5Mg59t1y+
Xv6zDcpXcDjmG5R9wWUvlK/kMG/CP5cLsoegfBUHqz/PLzG9OwrlqznwX2hZ
WyJwCsrXcDg1VVFnXdM5KF/L4XrFdB/VhRehfB2HOfkxF6rVrkD5eg53L8xN
tLpwDco3cCgqiErznHsTyjd0KDJ9sXxmzx0o38hhc3uHkMrc+1C+sYPnvtLd
X9IeQvkmDmtKT6r95HsM5Zs6nGhktlM/9gTKN3OQMX/ey9XzDMo3d/ht1qdo
lPACyrdwsH07Od3A6RWUb+kgLsMvMdvwDZRv5TDTPViaW+/d/jc5fZ1vnlg5
QONpPwBejYSy
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7O9o3Cv2u56+HyrgcMJ6W+2WzY1QPofDTN7f
r+a2TYTyBRz0lli+Xf16DpQv4rB2b0OiQNVSKF/CYdoLv9V3jq6F8mUcIpJP
dW9evhnKV3B4phS7cTLbTihfyUHqsoH9+1/7oHwVh7htp8RVDxyC8tUcvppd
LVP1PAblazi0389bFiN2CsrXcrD7p3Nkn+o5KF/H4emZzkvLrS5C+XoO8/YW
6E1svAzlGzgcnF2bsubZVSjf0GH1lpx+wcwbUL6Rw9UJ7/fdZ78N5Rs7CBnZ
H7I5dBfKN3GoClapWuX9AMo3dWC8tLlF9/BDKN/M4deMwPfO7o+hfHOHZ7kG
qr3Xn0D5Fg5RExzLVxc/g/ItHW4pfmF1kX4B5Vs59BTPX/3v7Eso39rBVXLy
89bu11C+jcOlE8dPtgW/hfJtHbqNdO5vUH2/v4KfZ1l6qa0DNF73AwCdwpvQ

           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQEf7P9xJL62m5C0HyrgsH1PwkHRidVQPofDKd70
O/e8uqF8AYd9uqv8DrZMg/JFHGY4sa/4vWMBlC/h8GSrju9SveVQvoyDzsdX
+7fNXgflKzh8EF36LbFmM5Sv5PBOpeihj/wOKF/FYdG3Phs5471QvpqDR9aC
Ksuog1C+hsMz2W9/GQKOQPlaDv7p6vt8K49D+ToOU47c5p1y5RSUr+fweUa7
XEjCOSjfwEFaYuGlHt6LUL6hw7NP2gf3Ml6G8o0c3Lcf3MrLcxXKN3bY/inm
zCXt61C+icPD17ssMxJuQvmmDteEzFX0Vt6G8s0cdPkv13ay3oPyzR2WGW98
X2j1AMq3cNjSkLEptPohlG/p8I3BzlXz6CMo38pBLO0U6wrxJ1C+tcNukcMJ
/UVPoXwbh5+vNQ/Nu/oMyrd1EKr/1jrd4QWUb+dwX8b0pc3ml1C+vYOEzIzf
wbqvoXwHh/f/yicuXvcGwm9wcNgpZW/2xewdVN7R4VWnrbzAsff750941OYu
5OgAEf+wHwCBBrCj
           "]]}, {
          Hue[0.3224758424985268, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXlIkwEYx/G1iDSlSQWrYdBsmc2UtJnzar9NXdBhYbHENQKjSzSTDmn/
zKTDaIpdSsmINIYXS0aLHOkQJ1tFmKy9aVPm67QtNR0NYRVExZ4HHh4+z1dY
VlV8msvhcFL+7f8bmaBMd9JypWH4uI0eqKzTum8aq8lRyPbmMk3XrpPj8Mfo
f5jA6Mkb0Na9Y9O68kfkjTC02T73vjCQ4zGf2dwQ97idvAXpb25NBEMd5AR8
F3kUkz4TWYT4rtn6VLOZnAhe3URYL31FTsLv0azKJa6VLAYzZr5zgDdA3okR
s6fIlTJIToWbjWlec2mIvAtp2q05GmaYnIbx/sZVMyonOR2OhdqegdA78m5Y
D5qere/5QJZA2TWyeFv2kZwBbalTFbKMkvfgXHL5YEDqImdCwrrY1c5PZCmW
NdaiUBlDzsLLVmnFkegxcjbCsftVDus4OQfYN/eeW+Mh52J5hVvQmzdJzsON
J2yMbq2XvBeGvl/+pstTZBmSj9qvGs+wZKDv2IkWtWY64lqg/fAPh77ER12O
xNazLfySGepyFEcLDV/Us9QVSLrIr7ac+kpdgVLRtuf1VX7q+ei+1/g6Qxeg
ng+v2C54ev8b9QL4wmpBR+cc9QKEN8t9Evs89ULcNfFrxNML1Avx9pDLeGHl
InUleFG62MD2JdvP88LOBxolIv+g7S8fJut4
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Mass = \\!\\(\\*FormBox[\\\"4.`\\\", TraditionalForm]\\)\"", 
          StringForm["Mass = ``", 4.], Editable -> False], TraditionalForm], 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "0.5`", "0.7`", "0.9`", "1.1`", "1.3`", "1.5`", "1.7000000000000002`",
          "1.9000000000000001`"}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.69986150563524*^9, 3.6998615229899173`*^9}, 
   3.6998615874174957`*^9, 3.6998679298587103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"trajectory", "[", 
        RowBox[{"#", ",", "mass"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"mass", ",", "0", ",", 
         RowBox[{"2", "*", "fluidDensity"}]}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "1", ",", 
      RowBox[{"2", "*", "fluidDensity"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<mass\>\"", ",", "\"\<distance\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "1", ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.699853366444603*^9, 3.6998534646900325`*^9}, {
   3.699853519274678*^9, 3.6998535782177773`*^9}, {3.699853618113221*^9, 
   3.6998536582912455`*^9}, {3.69985369645772*^9, 3.699853739370453*^9}, 
   3.699853778049788*^9, {3.6998549986027884`*^9, 3.6998550026337824`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJx0nQlUjd3bxk+dEUXmKSRUEjIPqb2TeZYpmSLzkFAZIoeMiRIlUzOJkDmk
QUlJmgcVDRKa1Ol0Oo7T6eu/3mc/+33v1vet9V8tv+9Ztd/nPM9972vvfV1n
4IbdlpvUORwOt3vr/zjk/+oQ+bnJT3f7bO0bZsz/AxO+9OlLY7PipwwXsTyq
JtCr290EhmuxfKcefv1WI4Ph3Vj+OeTtwjuWnxnei+W6uiNPbDxfynBtlm8u
Vy1+b/SD4Tosn+Zm/PvLsRqG67K8V0+jPdcsJAwfzPLpvJCZcX1lDNdj+XW1
REXmDAXDDVheN2N6lOVbFcMNWZ6oj3dWvVNj7pcRy7PMyzufWMRj+AiWh1qJ
nqe3CBhuzPKNFvb7X2S2Y/golvfQff5LL0mD4aNZXrTdKrt7cSeGj2H5yHVf
Dpqf68zwsSx3msFf+2p8V4aPY/n8E8oLh+u7MXw8ywUGfre7vO7B8Aks/9Nt
U0L7S70YPpHl0jPr9soO9GH4JJYHrZW4bd+pzfDJLD+ZvmlAy87+DDdh+eH8
aw/1TXUYPoXlmjc7xSpnD2S4Kcs/bNi3JG21LsPNWP6zYcvWPY6DGI7of++c
0rXPLw1mOGa5bkf3mr0vhvzDxZT3P3yy55ESPeZ6c5ZbT92gG97RgLmecpPG
Y+755kOZ66eyfHx6OLfooCFzPeUFp/+suvh8GHO9Bctvcv+cym4yYq6n3Kti
yLnjpiOY66exfPpXb+eDp0cy11M+a13jhI/bjZnrp7PcNBZHF3cdxVxP+YYQ
u5wf0QznzGD55aV6B3N2jGaup/zcA9te1/qMYa6fyXKtrWpe+ikMF1MeXr5m
lP2Rscz1s1j+IqP3vc2jxjHXU/7l7e/eqgqGc2azXNQp5O9Qv/FsnfrnJwd/
2ZExePbTxTHk3+TnZb2ub/bM2c5wEcsTikdlHhIeYrgWyyuOWk+sPXiS4d1Y
PlrVJfvedw+G92K5y6Sdho19fRiuzfLg/nURolE3Ga7D8iG660e4eAcxXJfl
wzf3GXdQLZThg1l+9MbNnzqf7zFcj+V5i/oa3XSPYLgByyM5Go8Wr3vCcEOW
H+ZvVxjYPme4EctXec24F+bzkuEjWJ4flR+5SR7FcGOWqwretTtiEcvwUSwP
XLd06GmdtwwfzfLT26aNutslgeFjWG40+2afab0TGT6W5aPSEl69GJPE8HEs
73LO0G/n+g8MH8/yt286l38K/MjwCSxHm/f0XSj9xPCJLB8h2qM1Kjyd4ZNY
3nw7ySW2IoPhk1l+VnzV9vLQLIabsPzOTge8yyGb4VNYPnqxu4vm+xyGm7Lc
Ubu7zaSBeQw3Y/ne3l0lz4/nMxyxXGl2RTW/6jPDMcszxm5qeW9d+A8XU/6+
rEWrLr2Iud6c5W5OvSu85n9lrqe8Z7nta5f0Yub6qSyXHym+FRdewlxPuWGI
TdlEh1LmegvKD39cc8GsjLme8il9BnYO7/CNuX4ay0/onfE7XMhwMeUZQRbz
qu6XM9dPZ7n4blzLt+Pfmesp11LLnbjEuoK5fgbLe8/vpak39gdzPeVN3zcN
mqP1k7l+JssbdU89vF/LcDHlzbp1u1DaL+b6WSx/3eGRf+2jSuZ6yvMS9wju
+VQx189m+d6510s2HqlmOKlXIiyJ0hYaPlsP6pUIjxwti4iZS+qSiOXf2jnv
eydyA/VKhH+OOcVrOeQN6pUIr1ZcUeEf/qBeibD94aecjv1ug3olwhfNNh1x
Hn0f1CsRDru+yHS7z2NQr0S49kCc3U31F6BeiXBMj8chxwteg3olwkL9Jxt2
nyd1w4DlZWWB8TNt4kG9EuGjyTorp28k9cGI5QERp5/UXkkG9UqE1/Urf5bz
h9QBY5Yf8znmP3caed9HsXzJ/XPbdw3MBPVKhOdpNAwN60re6zEs5/14+ml1
n1xQr0T49MPtelVjyfs7juVFhxqevd5QAOqVCN/Wn+I9OZi8pxNY7hXeb15+
41dQr0TY6PrgfN79ElCvWq9XaZcF/yDv42SWv3T2SjltSN47E5av2Py7yx5H
8n5NYflwS6v+uknfQb0S4ftL2g9fp/sD1CsRbvAfOrvWlbxHiOVdhjdPulJN
3hfM8sual50Gra4C9UqEB67K6LU2k7wX5ix/dKMwvevCWlCvRHhSeHV+l8zf
oF6JsM31GAfv+3WgXomw3LXKp4djPahXIix9Yq/thCSgXonwrn3jmm9qNIB6
JcJjuUsLDhQ1gHolwga6wj/1D6SgXonw+QtvTBtdG0G9EmHliiX6u1fJQL1q
fT6Ld3+YN64J1CsRHrdTmOrcWQ7qlQh3smhZX/lbDuqVCBdPbJh2Ov0PqFet
deBN3+fmTxSgXolw/qYlTu18/4J61fr88E3iP7koQb2qQ/c/3Xrkv8+EnW8R
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
w6EebPyHt9GDMuZ6qAebmOuhHpQz109l+T968A9zPeX/6MG/zPVQDyqZ66Ee
bGauh3pQxVwP9SB5b6EeZHgbPajG/BvqQYa30YPqzL+hHuQy10M9yGP+DfUg
w9voQT7zb6gHBey///nJwWHv66dc890A6hUHz+seHeJy0xnUKw5eZKg+2GDF
OVCvOLjLCptd5Rd8QL3iYKu8G1nHY0kdo3pQ+uB+RbdJoaBecXD67Yn6LmEP
QL3i4B2rHb31Tz4B9YqDTfNy0g0MI0G9av09nc4utMBk/YTqQclXNKXdBlLf
qB6MSogpGbKSrHtQPfjz1LGGr67vQb3i4F7bNLvfKfkA6hUHD7+g9YFjR+oe
1YMpcp7W5O6k7lE9mLDO2nBee1L3qB5ME2vi092Jrqd60Kmvn475+DxQrzj4
Pv/a8+wdpB5SPajVvLkk8FkhqFccbHtz0hzNrl9BvWrVm5N8B8eal4B61Tr/
H/tu1VhXUiepHlzOl2+9kUrqJNWDRo+/uT3RIXWS6sFPZtO1Jhz+DupVq45Y
pjGropjUT1OWi6807zk+9yeoVxys3/jh4adoUj+pHjy730/mMYnUT6r7dvXq
pnb+dTWoV616ZJ6/+YVptaBecfAw0cqcNdm/Qb1q1e/uV1/bPiPvz1SW11Uk
TvroWg/qFQe/P9zj08JlElCvODj0xTS/3KENoF5xcIG22enZaqTeUt3Xd0dA
T69CKahXHLyiZpPbtUimDv9LDxpEv4yb78vU4X/pwWtxDeZXDjF1+F960GTw
ayPbdUwd/pceDJ+wYIrfDKYO/0sPhp2vjR5nrGCup9zUxN6rpzapz1T39Rlf
NWB0e1KfKR+WeH6Fg4Lh/9KDqzU9wlOrSd2menD+MWfPoc5LQL0S4fTqoJDf
NTtBvRLhQB08BoccBvVKhKckdmz/MvA0qFcibDfmntc1d7IeTvXgGb+1MvWl
vqBeibDX/rnqpzuR+kb14L3gu1/le0NAvRLhT7oWfzwWkXVsqgdvXZhrFhRC
6h7Vgw9jxxanjyPr0lQP7kqYWaW5+BmoV63zYfGwkauDSD2kenAB19JO24DM
96gePOA3qvR1CVlPpnrwsv/HypXfSZ2kevBUQv2daRKybkz1oJflwTWbe5B1
YKoHezzeHa2xmKz3Uj14zHlQoVsgqZ9UD7p4dG6YKCTrt1QP4jCNBQ7H0kC9
EmGtQyluaUJSV6keHGryuKenFVl3pXrwzFMX90ePSb2lenBvjUlZFVtvqR68
2k/H5M8xMv+ketBohTTDW0bqsCnLB4T8/XV0H6nDVA9+jV8Ws19eAOqVCNdk
fd6PTpL5KtV9p+ds6na991dQr0S45N31DYuekXks1X1xem77u4aXgHolwjfW
yv82iEndnsryPt1rR45cWQbqlQineD9fdG/sN1CvRPiSq8P6hV3LQb0S4V67
Rg/hNpI6T3WfpUyn98PP30G9EuGRk9R2T4kjdZ7qvhftXgm97/0A9ar1fc/u
YRfsS+o/1X2euQ8yLM/8AvVKhH8eblDzOFQJ6lXr5xW5cdu03VWgXolwlH6l
yGZzNahXIjypeeG+tHU1oF616tzTFUniVaRfUD34xtriyYaVTL/AVMctWXCm
28CLzDlPTOdLKcIeXe7qnIr55/dTvabb+9aQ7U3MeU4xnRdZ2W7Xm2ns98/1
NlSXvbOdfDX7G3Nu04bOfw7Md7s/JCec+f1Uf80eEeZ9cas6+i/n4KcGgXrt
jJlzC4uozlL20pu7PaY9+i/n4D0bg8Z45jPrzDZUT1Uu25l2YVgX9F/OwXZ9
w51GfmPOLdhT3RQx8tYYj7M90X85Bx+8MldZcYtZdxJTfXS5p1HO05390H85
B8d3HbXH8AyzfutJddDMqKbRl8qZc5KedL5xxmLb8MSzzHpsANU7j3kaEzXm
MOceA+i8IlDeEynSmfUlK6pflmla3SsoZc49WtF5QmFglMh7BbMuWjKVvT58
8KQo11DmHCPLOdjwVL1K3oFZR9pK9Yj5ds3FB+cy5xW30r7v6hxxzukUs45U
R/XIhbUPEyYsZ84l1tG+78v1fFzVi1lHOkD1RZn21tC5e5nzhwdoH1ceb2c5
Po5ZR8K0by5cpD84fqAPeG5FOOyNxs3EUQ/A8ynC/UuzKi/lRoHnUIRnur56
OHLUe/C8iXDwG+mIzZ/TwXMlwuO6XB1pWZ4Lnh8RTs0w814X+gU8JyKs9yYv
t/vZMvA8iDB/3w2ncrcK8LmLsO3BwuIFmZXg8xXhtSu26A1a+Rt8jiLcuKWT
yVcNCfi8RNjafbqF82kp+Fxa69UCjR6d+zSB+y/Cx//EOx15+wfc53pU+b2h
4sm7heA+S1Dg1OFXrM/tBfe5AQV8DXauSz4D7rMUzVM0723xuArucyMyrdOJ
mhhyG9xnGfrkmd9OY/BjcJ+b0OQU219eXV6D+yxHthl1N1L148F9/oMWRu91
OMz9AO6zAu371KVrYs8McJ//oj9L+17Y/DUH3Gcl2lugn9+0uhDc52Z05pjb
lbqPJeA+q9DrmpyF1vPLwX1uQR+UcSWDRv/8730Wc/CYvFCHCQPOgPushi3H
vlndcUfgf++zWA2PH+86CJ18BO6zOt61+lL35T5v/nufxeq4zHLhyjmuieA+
c/H6xXtrDjWl/fc+i7n4q3xPhtbVHHCfeXhimqz9z35F/73PYh7OFvOOlCSW
gvvMx/PK85OfNn7/730W83FNRI9f525UgvsswPLx5rYo6vd/77NYgNd4jJ4d
eVcC7rMQB1k83DjraeN/77NYiLeO1zGTKuTgea5Dh7U1F7zS3wP6IweP6L6x
v6qfc5s+eHZy/J2bW5j5+b/6YOSh+Wj/Ua82fXAXP/jmEWtm/eFffbCTZO7K
+LuBbfrg6An6Rv0VgW364IkT4ukXtoe36YObxtqm1vS/26YPOl4q2qV262mb
Plie4uF0NvpRmz7YacZhaxuNqDZ90HPR7vxlyudt+mC+rcL8vuHbNn2Q22m4
r0FUVJs+eGZ6hVHts8Q2fbCo5l3MhINxbfrgwBWfY1L9Utr0wUtRr2sXfkho
0wfz+pqfdbZLb9MHOc1LznnMS2rTB607bnXZNjarTR9MSU275fM3pU0f9Azf
e/11v9w2fVA8ZoFka1Zamz54U+fC4bn6n9v0QcupXZ1G/8xo0wef1jUfnryg
qE0fNA53Lr3ZlNWmD6aPObasyqO4TR98vvhZUE3+xTZ90Hq2S9jalXfa9MEd
T57GbjB/0aYPdtT6cP/Tk7dt+uAFm3GlUUYpbfqgWo8yt0zHzDZ9UDmhR+Tb
X3lt+uCcs/WW8vIvbfqgSP9r2tPhZW36oLJ93YlOgaButPJrmqbrz8/81aYP
8gMqpgVq17TpgzG5nkVdLtS16YO/k7hFQwMlbfpgw4kBg768k7bpgyv+ZnZG
y7aDOiBB5etm8L9POAze9wYk8FiW41vsCt5rKeKgDpM6Pz8B3t9GJM92fjY0
wBm8p/9bNzGIWeNq3aYP5nvws47Ye7bpg15vsm5eHxfcpg++1W547NzvUZs+
GJT426Ffzqs2fVBy/LzQySm+TR+0abSrOv7uQ5s+eMdo6mX0NKNNH1QmnH3R
80Vumz64S1+yN3FPUZs+2PLk9LdefY+26YNc8ZrMeUOutOmDvM5Jkr4loW36
4F/Hx50vX3/apg+usB//0lER06YPKqx4Ic593rfpg32jvX7+eJ7Wtg9+nRjx
tC67TR+M2OYevj6roE0f/O5YY+eYUNKmDxpuqR4kcytv0we7CduNHhzzs00f
PPHkb4L/hpo2fZATfdtwvUl9mz5YEOdcuUTV8P/0wcA2fdC9ulksMLsCnnPS
B1+06YOdfz2Y6fvsIXj+SR9MbNMHHRZN0FfMigbvBemDGYC3Xn+03KTzqiTw
vpA+WNCmD/65gyLTHmWA94j0wdI2fXDupaIDVu3zQb8jfbCiTR/Uuv7uKhpc
DPod6YPVgHNwXGHNH/3930C/I32wvk0fPNQ+ZIBd+A/Q70gflLbpg72U+v0+
GVaDfkf6oLxNH0w5uHDyN8c60O9IH/zbpg/+NphU+VQqAf2O9MGWNn2wurxE
auDRCPod6YPMPtS/+uCPCRseJk+Vg35H+iCzD/WvPrhRZ6LjSs2/4LkV4Rk4
PsV45RnwfIpw9zV5po3XA8BzKMIGRov1JC8fgudNhLUGNpp9dH0JnisR1jGZ
OMP27Fvw/IiwX78x7aaMTAbPSWt/9A4/nrUwHTwPIty8aM2LBRuzwecuwo57
Dxz9/DEffL4irKmKeCk/9gV8jq3jr/HO3GVWCj4vER4omr7mduE38LmI8G2j
H7UZ3hXgcxHhWbkm31dv/wXuvwjHp9cvqF1eDe5zPQq6s7Wxx52ANn1w/KQW
CwOz5236YESzxX791IQ2fXDa3e11bjbpbfqg0Rv3V56z89r0wbTDUaNqJF/B
fW5CLZOSR8y8+g3cZzmaM2pOyuz6H+A+/0F3lSa999pXg/usQFdmefd+6loH
7vNfxE1tyh+RLQH3WYm2NIbu2zeoEdznZvSztKG2akcTuM8qlD01xsbrzh9w
n1vQ4W+F98uywfPc2gfzec/SYsx8wH1Wwzsq9Fzub7j/3/vc2gcV+GDB/BGv
wX1Wx76bdiRU6r/7730Wq+NjtplzvkemgvvMxZYHDr4ZLc76731u7YO/dx2c
obs2H9xnHu6k7G7tZfXlv/e5tQ9uH7b0pb1hKbjPfNy/W+Fen5vf/nufW/ug
76WKTvy/38F9FuAugbr2gyb9/O99bu2DAXqa31YsrAT3WYgHVzfOrB1X/d/7
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
9RR3fl9BfKZkf4qHazdm9Wpqx/xddp+Lj7tEV9xxCyC5YYQL8Pieion9J5D1
VcKF2NpeM/lRKlnPpL7aBu7lxbIrxDdK9qd4+OHKtb5xG5n1H3afi493PDQo
dh9F8qAIF2B9fsMQKxWjO9h9LiEut36zc1AKs66Iqa926/vl32YHMf5iMfXV
TnZ5otmYS+4z9dXG+r4e+q6I+EbJ/hQPz3gSP927jBkPu8/V2n9TU9Zv+kly
lghvrSc/s46MqyW6nnAhzlcvusqXEh1NfbVoYszWmDdk3Y/6art06dI4t4UZ
Tyz11X6v2ngsHxP/LNmf4uHIdy80Nx0n94FwPnbzb3+tPp6snxMuwGsOrtFz
4ZN1P8KF2HhJxOP2M5l1FRvqk/2ynTcex5P8PeqTzbxm93uYBfneWOqTff8h
/07PePL7qU82SjF1A9eCWR8uoT5ZK+/c8/tLyXov9cnG+ty+YFNK7j/1yRan
yhsmBTHjsaE+WRVv7squtiTXjvpk+025GV09iNHXAdQnO2Xf70GJ5cx4YqlP
dnhOQEKaJVn/pD7ZqLrZ+6c8YfSODvXJ9uyR3L+6B7n/1Ccb+na+xoi+zHhs
qE92wu7MP7sHkO/Lpj7Z8vP3GvI7M/chgPpkjcp3Vf65xIwnlvpkHSYbl/bp
QdYVqU82ylOSZ+JL8n+ov7XT3aKriQHM7wmg/tZdwzhv0qYzvyeW+ltTwgeV
5FeSdSfqbx06Yia3zIPRyzrU36re7VfE73eMrsHU35plpRmqb8XcZxvqb838
5PtppCPJG6T+1sn1d5PnmpH1aupvDer6JmGLkOgO6m/tMD4txjWdGU8J9bc6
WJW+8r/K6FAd6m+9avH0oaYZ85xj6m/VUvnZrNBkxmND/a1LC2x/hf4leV/U
3+r73GCv/BdzfwL+5W/1qlHMyifrutTfOmD3Y9eriWTdhvpbN8zdr1H5lOQo
Ul/qy+ldi9cFk+89p77U3cXLFM0vmN8TS32pQw76dr/xkayrUF9qUZdC48ml
jC7Tob7UU/HtMwc9Z/57MfWl1mSt7qEjYe7//3F15mExfm0cr5lmRiVr9i3Z
lx9lSdZzkH0rJLRIVCQkVJaSNslSdoWkQtKmTSlKKoQKiSypZEuiGtOYpvHO
db3ndJ7uv37X+3ldp3vOsz/P+d4fa5ZLXVkdt7bvGNovjuVSM8Qql3s6kHrC
WC5VV7Dik/Y1Uk82y6Ue7nZ1WOcqUk8Fy6X+HtK0Ras/eT+gw3Kpz4bWfDnV
idSDWS7Vcc6Gu5Jd9H0jy6Vqbnx/ak0Z7a/IcqnRXqYOmdOpd5LlUudfKcQD
wkk92SyX+jVrXg8vIX1fwXKps7dXuDinkPcDYSw3OncNr+7WTfIeJpvlRqPr
/b7dvUjfJ7DcaGJq+7fhn8hzsQ7LjXYYWdXnXiX5XZjlRk++HFnyle7P1iw3
2sN959HOy2lfL5YbvTg002iqBqknjOVGO23y8hi3ntSTzXKjLzKvrZ13lz6n
s9zo6c5PDCx6kfdaOiw3GtrYPOCbGZlnzHKjp/d6/7OZSt+rs9xogKrmxw/9
af9SlhvFRgvWjVal88lyoxkiraLvzqSebJYbNXhSPON6NXlfVMFyo4nHT8dt
XEXee4SxXKfvgwp+YQD599ks1/ltfnDnG12oV5TlOhcWmgzwCSHvJVq/c6ni
TxUW+VpW5He1fufiYZOrkaOrQsjvav3OxccVE1wWvNtCc3aUq+EePUL2z9Gg
Pl/KBXjp37vx8VFknlu/cwmx77vKql7zSD2t37mU5/m7gu4+n0leRoflOv1V
jat8f5L9AbNcZ+j3oy9Wrib7szXLdb79trHyxHqaX2O5zs8W3mv+dif1hLFc
5+/iK8+tn5J5y2a5zmaj7AWPDpJ6KliuU5hefn/sJPI+J5vlKzs23F/tk0Pe
m1WwfOWLf9FfVwSSPEjrdy5V/K86xldI886t37l4+NxCmW+4C6m/9TsXH8fp
9n8805zU3/qdSw3nyWa2r0RkPlu/cynP2y9sl3kOJvW0fucS4sbowycHqJN6
Wr9zibCGd+yrez9JHiSI1fnM7sjBRbZ0f2Z1Tnp/Vtaf5mQTWJ1XTMJ3NljR
+WR1aj6Mrc0zJ/NZzOrcNS3dNng1mc8KVmf5rdxyR1NSz29W5/xhxWZ4OclZ
WLP8oDx+1wF8neREnFh+sHecXsyNTJJ3CGI5x/CQUUUXu9P9luUcDWdfxTIj
Un8CyzkW/eifaLaT1J/Nco52p88PSrlC6i9mOUf5tC5nuhRT3z2r89TnI0In
Ban/N6tz5HGB27PRJEfQ+p1LVXl/Vd59u5jU2fqdi4ddrD8c6juNbPfW71x8
nGLyXvrYm2z31u9calg8691m1ydku7d+5xLg8RPevh3clc4n5ULsPKRs0Yu1
JH/R+p1LeX+r6ViOTKhfm/G06+2+FnQgOYLW71yq2HOBdefqdDKfrd+5eLi0
uzh38kRSZ+t3Lr7y/vCQW2ACqbP1O5ca9rrVZ/TnUaTO1u9cAvzGI/7jlOuk
ztbvXELc49qVBfNPkDpbv3OJcM7RLYMaad4hiNWZ03QibyX1j4exOue94u1t
MSDbN4HV+TRx55hrT8n2zWZ1Lg+qrlpKfc3FnDq3mp5raiLbt4LVGT/k05Di
uaSe36xO59N9PCNPkJyIE8vHLcou9H6yiuQygliOr/fJkeNG7SHzGcZyfBsO
du65xYjUmcByfDFO0pbojqTObJbj+7Pu46eat6TOYpbjuzzs08ZuK0idFSzH
Z3S51CwljdT5m9X5rXvBQtP+JM/SieXjxi4KXbBhM5lPHZaPK/+x91TVMnL8
6rF83LGjZh/WG5Dti1k+LrR7yCkn6nk3Zvk4iZ2/YYIqqcea5eOW3Hb58GsX
mTcnlo+LFNl6jf1G62S5M+/+t2eoLCfzpsNyZz9/mTq93U7mTY/lzmKsZcZv
55J6MMudrX/8ePPDV2TejFnurPu4YK/kjaQea5Y7exKy6cKVRlKPE8udefIN
k497kRxQEKtT/tfNdepCMm9hrE7VDkefjPYh85bA6uSfKOrY8SOpM5vVKehT
li7aT+atmNXZ7mrVBpVepJ4KVqfG2FqtvykkB/Sb1dk+/c/t+uUkBxTEcmdi
rfSfw2aReQtjuTMXebaB/1pSTwLLnTXsuOoi70rqyWa5s21fD6c6PSPzVsxy
ZzUW2yTVfqSeCpY7s32x3GANJvX8ZrmzinmTXJ79JbmkTizPdefBshFJM8m8
6bA81/vprmUZ30ideizP9S54bv/QBFInZnmut3+6bfB0I/NmzPJcb00+X7fB
ZDtaszxXWWxyrVE7Uo8Ty3O9UffRH1ZM8lxBrE6HZc6rDs8mx2kYq/Pflskv
x7uR/S2B1bkgYXJz+FIyb9mszlPiyYO6DCHzVszqfG84ZdHBZlJnBatzqPuU
nb+fkzp/szqd7k+5sC6K5rmYb3dJt3uRHpcWobZcjIprwyN//ZwGuATpuS1R
dBQJAJei/OMdr46KmQTGl6H5duLIi/L5gMvRWa+EjBOdobdXgdRffBn8KpJ6
aZlvN/ph/bSQ8+NQWy5GSw7uCxqxbxDgEuQ0YdKOGpPaGW25FHlOvOHzpnIA
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
BTJa81H0MYGuw2F5usIZczpN2p+C2nIxCumnM/XvwWuAK4+j2thYXQsnwKXI
MTw58LdDOBhfhgwPBt5JdEoCXI4m3zL67+fNu4Ar0KXf8qJTjbS/PfPtDjdt
P//Lx1TUlovRaDPx8zOS64Arz586nqFShx2AS9GAZSujX1+IAOPLkK7JtAmH
EpMBl6PkvUtP6Z7LAlyBBi/X+1s+na4Xmt5ap+e5lh1ei9JQWy5GAyKbvx/Y
eQNw5fXoccWB1wecAZeiyB18jYCXkWB85fXdQ9XrUHMK4HJUdsXzX2R+NuAK
dNJHZYZfIO0zz/J6Q/8UxBfeS0dtuRi9f2Ca5SqNBlx5v/QjRhoUshNwKVI7
PPLgy87XwPgydMcsJWj/otuAy5FbikOC6OF9wBVIO2tvT5Nv1FPAfLv+rqGS
wMkZqC0Xo9qXZa7INwZw5f1SfkpX6Z1dgCuPI5ta54OrroPxZSj73jCxXnga
4HI04prjuaCnOYArUINjXnK7+bQ/P8vfOfbUVj2WkYnacuV5aaGt9oVecYAr
j/eBXSdWVuwGXIr6euk8tLkSBcZXXjeTd7x1+pcOuBzFn7oxvOfrB4Arj/cl
vatd4+h6LVZn9OLLM48b3UNtuRhV5F2wMU6JB1y53U897Kjb3hVwKWpXeaN8
XsMNML4MzVh77Z/6hgzAlc/vlc0ity+5gCtQ2dnBnbb0oX4Hlvsb3m7NK8uS
LNSWi1H20ADXrjEJgCufi02TL5yY5ga4FOkYDvPnLbgJxpchN/eqK0+eZgIu
R07xb/4FyPIAVx7vOtljEo7TdWWsTpujwRkbUrJRW648f1pJmxs9bwEuQZ3m
vdVs57wHcClyHiUT216NAePL0Kei27v9pt0DXI6Ec/ZIR3eF3l4F6hPePbV7
O+qhmNVaZ92X/MlPve+jtlyMenWrGzt2TSLgyu2e9znXKmYv4Mrno7TwuLmi
ODC+DOl3qw9pn5gFuPL+027+ryl60NurQHEDjz66PZt6M1md+fu7Fy4zzUFt
uRg9OZNqfHNCEuASFKbDX+n0Yx/gUuS0wfHo3m3xYHwZylxY+uj82WzA5eji
/hN1J00eA65AM8yGBswVUr8AyyFeu20UWjriAWrLlc9H3rvWL+uaDLiyTve/
tj3HugMuRRUrUlY6bk0A48vQ0wGfe3xu9bCzHGLUme0CbdcCwBUoR+C+58oT
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
Y17kB4VDb68QL3w71uS0A/T2ivBCv2Pvzo2j3l7m293YKeC5e+QA8r+Zb1d8
9P6J+7OGkX/PfLsdOg8WVo5ChDPf7vPYpCt65tSHy3y7x2+MtDYMousKmG93
3P592984ryKc+XZfL33q4WZqnkXnkdZ5b0rvLM+02YjOI63T+seGQKQnyKLz
SOscmSa85W81N4vOI62z+PyRZGEKXbfAfLt5NQv8N/ajXmDm29VVX5o6x5p6
cplv98Cw5dVDI2g+nfl2w4au3Ppq2CpSJ/PtbpqnY/PqwljCmW/36IjzI7IP
LibjMN/utF51Dpem0HqYb7f7cJcnBSvpehLm23Xr86/b/kl0fQjz7X7WnZ1/
Mpfk+jm+3cibtc9OWNK8G/PtSvU8e35Im/N/zvHtmgxd4z2XR7cj8+0Gjtvz
2N2JrHvh+HZl38KH146lfeOZbzfW8LBj8DCyfoPj29XLnbQ6oiNZp8Hx7So2
fai8emcrqZP5dtsbf+6Y+m8FqZP5dqv1f0d83E3XqzDfbk1Z1c07u8l6G45v
d8ezLzmzzruRf898u5LudT1KppD1IRzf7oSHmwr9RlAvJ+vPYNrT42mIFs0X
MN+uhj/uM3HxOlIn8+3OMnFtVgml+yHz7UYWHMnVCifzxvHtNmVPXnjhPV1/
wny7V9812p8+Quthvt3C0oKR74bTdSP9WutxePls/43VJJfH8e1+068aWLff
jPx75tuN5q0uelJDfbjMt7s1s4/mmGa6Tob5dn1cj4yReFIvJ/PtLg1uGb7O
m+RSOb7dutuBuatHknWbHN+uzaDhBvs6knwWx7f7Tf/DojJt2r+F+XavRfNm
jjxJ+kJwfLub1Q71CNxO+vxzfLtZa+YeUjtC1rdwfLsL9R97zSynnkfd1jr/
9eH/toij6+IoF6OnE6W7rdeTnA7Ht3te36z4kz1d78R8u4u/dh57YyHZzzm+
XdtvPatN51PPMvPtZokDF6sOIutPOL7dxbu7Xn99hXqNWb+F/35e+LRzIsll
cHy7+IV6dH83el5lvt2hW4wv3peS9Usc3y6vMP4Wmknmh+Pb3WE36Ux/IVn3
wvHtOh1Yl+lhSz2DrN8CNhruEuoTROaN9VvIvhlzbJEnWZ/P8e2qfOn/J2Ae
7aPCfLvWHfv7tHtB1lNxfLsqA5+WBGqR/g8c367xlMP2fcYRrwHHt1s8YpD7
ilHU28v6LRh3szGOdSR5cI5v97bw+Y1Rl8n6Z45v1/97p82939A6mW+398xu
RuNekf2N49s9OM7nUoKIehOYb3dKlUf7jS+oB5b5difcnFrwS4ese+H4dq33
fCqMH2VJ/i7z7a7ulzu6RYUcdxzfbs7nV2NnjaHeB+bbdSyPrOZRby/Ht9v0
2OpWtRH1yrH+CWMqjy7b8jqYzA/rn3Dx07LVI/ikzwPHt6tTVrRzgBGtk/l2
q8tmT9RfSdabcXy7y98LZ/w6QD0UzLf75nPK76post6J49v1t9w0q5CuJ+H4
dn+XeeUKzUhumuPbdXsmK3jpc4TUyfoneD70PD92EK2T+XZjDhx7U2RH9n+O
b9dpz2PzVHeyvTi+XY3xi5+ozaceaubbXe5if2mEOvVssn4IxlrS9+cLyP7D
8e02O4726WxA1r9xfLtBMUZ3M5eR9Voc32647s40JzWy7ojj2137tHjNyffU
j8b6IQwy7Rgct4Pkizm+XXlw3obCQNK3gePbrdg46YZwGq2T9UMI8as1XNaD
nJc4vl3nJ+H87ROpH5z1Qzi3osjB4CPJTXN8u+U/W7555JJ1NRzf7qXS9uGR
LpGkTtYPIe+Gy+d3IeQ45fh2O13IO9ljDzm/cXy7wy2LXivUyXHH8e0u05vc
x2AMPb5YPwTBmjm2qVvI9uL4dqt61WWaUN8lx7f789QFuxAtcj7k+HZ/rgh3
OzCZ7g+sj0HDtubynhKyXTi+3Z9JV1Wdi8j6E45v99OuNNWm7CgyD6yPwUrD
SyJtCem7wvHtVpywn73OglwfOb7doJEavy8PJNcLjm9Xta7uT+Yq0qeC49u1
3FD7d+Vxsl04vt07yyrdFtWTdUQc327PitL5mgLSx4Dj2w3p8/x0uRHpt8Dx
7WYHpnmeFZB1whzf7qn/vm08MYecBzi+3W6bqxI2+pLjnePbTbCMMlOZQLYL
x7db6vdx1dIhZN0Ox7fr5DbEQ+xGvDAc325x5Lia37lknR7Ht5s890ZB0hey
norj21WZOlnnlwNZr8Xx7fapTt0he0hynRzfrn9qwu1DA0mfBI5vFyfmYbPC
laRO1n9gc2r1shsfyHmG49sNu1zZsD2A+tlZ/wHN6uLpmtfIeiqOb3eqtrXR
S2uyvoXj28XHpOISXZKX5Ph2D106sL/L6zBSJ+s/gOum9g/9vZzUyfoPOFps
sOorJOcljm830bHm85o7ZD/n+HbHjIq4eHUHWb/E8e2WimNvuJ2m3l7WH+CM
V9Ccv/XUq8L6A6wfOilz8AKyfTm+3R6ft/UaXkzWX3F8u7mW9+6uyiB5Ro5v
9/mFa7FunqSPAce3i/9WaLbbvoT8XtYf4FKEoO73FnJ+4/h2oyt/fuiiT9ZJ
cny7vvVvjP4bTT3jrD9AgkrVq4iuZN0Ox7c75aHjcDdtkr/j+HYXonsXWqrI
+ZDj21WRzjabe5f0P+T4djXXuRV+jSLXTY5vt/frxzO3ulJ/PesPsDpr1NLx
WtQzzvoD6J5ybo63ot5elt8/1/lPZnEu9ciw/H6Y+/5Nd9XJduT4dnc7ezh3
uUXWsXB8u0P/yRImfiT5OI5vN21W/efFOaTPAMe3q7ItU/3Jt2nk91KuPK4n
9OzyeyI533J8uzy3DvNEvchxwfHtfnHwn3VEk3rPKVegJ8GHK09qkHUsHN/u
xt52fUyNSe6M49stWZ2z9cQM0meA49v1DLofEftAn9TJ8vs91pkMDvMl91cc
367fpViX9zup74bl97PnBG/d1YV6z1l+/17mu8syB+p3Zjl6DyOPWyb9yX7F
8e3evOoTpf2CrHvh+HYnHPpk82M+yVVxfLtRgogL2stI3p/j21Up/qvcDXuS
eWD59DeaV9O2G5DzM8e3uzhgY/35aeQ45fh2V82bym8ZQ/Yrjm/Xb0HusVhE
1r1wfLs2GfOdfheRXBXHt5vtObNfWVXs/znHt+tpmSeN+Ub6eXJ8uwu3WG02
OEfuQzi+3Sg9s+4Dosl6RY5v99WZf/tMjMh+y/Htrjr10vFUElmfxvHtjuPZ
GI+yIuvuOL7dWyqaVWf+I+vEOL5d43ZJs8fuIXl2jm93xVKrvrpBJHfP8e2q
8OfefNNA+uZxfLvzDG6lr5pArgsc3+7C/RYnFyyixzUnd29Z8dB+P9nPOb7d
xQMSFTmryDoZjm/3bV3Vm/i5JM/O8e0+nmAVc3cjuY5wfLsqv+bse6lF+tFx
fLta/XZY+dWSOjm+XblNrf5pDXLe4Ph2nSeFTfgcSvZzjm9XLIjuc6EXWSfD
8e0mfJCPm/6RcI5vt+b+6G7/akjOnePbjYzRnl7fg1wXOL5dFcs/jV33kPd4
HN/uXdXdl4ZvJNcjjm/XtdYir/cJcj7h+HY7rv43deBvsv6T49stqTQuO3Wd
rJ/h+HbH3YsxDb1Pcu4c3657Q63VKgmpk+Pb9RzSO0zNgvRV4/h2lw+snexC
189zfLuXTEfPHrOank9YnUEhNpuv9Cf7M8e3m7P96bwAZ7J+huPbzbox1Kw9
JutVOL7dhh+3P611JXltjm/36vgFJdMzyXWN49utqDUZnGlI+oNxfLtl2mpd
EqPI9ZTj2z1qcYZ35ic9v7G89s244fJiP3J8cXy7tirle4WdyHoVjm9Xv2RV
3eJVJK/N8e1+Xj/mzokIkivn+HZVtn76M86EvC/l+Ha7jyoO8NhGrqcc325B
2vVVDzLI+Y3j21WLa0waZE2OL45vN/LAqUzbKlonyxdvKh9pUN+H5KA5vt3l
WVubAvaSvDbHt+s5Jc3Y6Zo9qZPli2Om2jQMUiHPFxzf7tm+V5Pu0vMVx7cb
faz97eRQchxxfLsax+ae1jhO1qtwfLs9D55r2scjOWiOb/dqeM9fAgdy3eT4
dnU2zK9wr9pMtjurc2df7c7lT0idHN/uv+ln2m2i6+E5vt0qA2MfJ0yOI45v
N6/QVO0/e7JehePb3Xe0wi6ylOSgOb7dbMeba08Zkxw0x7eLO6c1ZO6j7yFZ
vjj2x4EjrzeR6zXHt9vwZOGB/CpyvuL4doXPHS4G+ZPjiOPb1Z6m9/fuALIO
hOPb9R8aodk/l+SgOb5dlayxugfmkes1x7er0vHUc11H0ieK49vVsWx5KJtM
7rc5vt3zfw6Xm9+lPi+W2zUODRj9ga5D4/h2S2YWb27/j9TJ8e2O3mo6JjeJ
5Is5vt0zgwSDszG5XnN8u52eSVI8LpM+URzfbuOCuUuK25NcDMe3a64imfU0
mJw/Ob7d8q2RY89TjzzHtxv47tn0hRV0XRzz7SbeWd1zTk/ynMXx7bZ7lzje
3oy+/2G+3Xh3v+tGi2jOl/l23x4bn/Kqxj6L1vf//wqwMLQixy7AMYvW9///
CnGv13O/NZ+meV7m2x2zrt/23Gr6fYT5dm1OR+UVnduUReuj/+UvHhj++DAd
h/l2Xy3Ztv7mQ9rXl/l2ry/L0DkmoDlZ5tvdY9KuYtts2reW+Xav3YheFpVN
c7LMtxs40mRs8Eeab2W+3Vf9+DffX6L5XObbzez5bnHKfDo+8+2+OLymKf8v
zdsy3+7cQ3Pmj19Gc7LMt3vHRz/4ciT18zLf7n9e/Wo0ZTTHyny7YQfUp7ot
I+8VOb7d0v5Gw40a6N9lvl3vKKMzSRn0uwnz7eqNm8Mb1JqTZb7dug/hkxYM
o35e5tvN1R1Up3KU9ttkvt0L9hGRab/pe2nm23WOGWTuZErfA7PcrvF/M69c
UKP5X+bbXXR7VGT5DPp3mW+37nWq6/ZWPy/z7Z6Qzlykkka+X3B8uxN6Pet/
Qkzzqsy3+3ry6oaB+vS9K/PtTo+ttykzoO85WW533E/DLnvu0lww8+1G91ex
eVVHfcTMt6tr/PCWvg718zLfbsjB46rHTagXmPl2D5dFD9/d2n+P+XbnOB83
HrSWvK/m+HZ5ms5uz51pHrZfaz0aPWpi/e1JDpfj21U3yzCqKqH5U+bbPRZ+
cJyKCx2f+XY71c3T6d+D5k+Zb/f05A4dpqVR/y/z7fb0LWles4a8j+X4doWO
s7QuTKDzzPK5wQlft+95Tn4vx7c7dtSYNVfb0d/FfLt5V3fNeo7I3+X4ds11
Mka1uFBPLvPt1oeodhsRR99rMd/uA43BB6IbqLdXt7VOc9+dD8Y0kno4vt1F
wvvzQp/R9/CU8/G0Qx2eakXRHC7z7Y5uZ2Hs7kWeszi+3eO5Kx1c4sjf5fh2
hb77RsddoO95mG/XY0543Wd/2meG5XBv/8w/bzmEvrdkOdy+13OrK+Jp3pb5
dmfqre857hL1IDPfrri99b2dVdSTy3y7179bbUwZRt9vMN/u2nxLjSZH8j6B
49udq3FX2Hic9mdjOdxPj1Z9bHpF55/lcLNnS809OtD8JvPtdhw055EK7YvI
8e1a8U5O8Dal/UyYbze2sjxM8Je+N2C+XXn2KC3/i+S5m+PbDdpxTf7fM7Jd
OL7dlWdt16yvo+/rWA63otE1eZSE5n+Zb9fRJKCjpIX6i5lvVxp30SFbQPvR
Md+ud/v4vAAt8h6M49sVpVgHRQdQjy3L1f48dczwgBbNhzLf7sdbm9Y5HKA+
YubbfV4028+0nvZtY77dSpfAVWH65LmS49t9K2j5fqaGentZrnaPY8HQC4F0
f2C5Wn0P/w4rdlAfNMvVfg+cK9FYQfO8zLd75Ypaec4Eksfk+HZj11TaTD9C
fcTMt3vYJntVr/3UR8x8u7ZbLi/840ieIzi+3f9GZ79Z34N6k1mu9t5P5692
28j9Hse3uyx+iGRLHs0XM9+uk6Gjl+Fx6mVmvt3JwXnqGem0Lxbz7fJk/U9M
/0z9xcy3W7DWrWd2J3J/zvHteqzf3BhJ55/j2x2ULBi4J4SMz/HtPhKGL13C
J+9bOL7drWtm7B/oSO//WU62S8zbG39KyH0sx7e7V5oy3Naf7icsJ/tIrNpS
50j2N45vd8XPKNub3ejvZTnZ8s/LCu3v0fefLCe7qVxiMNie+pFZTrax9NLl
io70fpXlZD2KjNpdSiPP1xzf7qyoeYtvbaf+bpaTXRDY0vJPl75PYDnZHQtf
mw7rQPtrsZxssOBW7NK/5DmO49u9nx0gcKkm88Px7X7ft9HyUhGph+PbPdzn
8lobS9qni+Vb38hnmrkvpH5klm9NDTugcWAvGYfj210YXm6FTck4HN/u5F3u
hjN/kudKjm9X/rPHmtBF9Hhk+VbvjyKd1zn0OZrlWzWeN33pOIX2D2T51pM5
X2Pn3yLvDzm+Xa23W+5gbVIPx7f7/MWnfh+KqB+Z5VtPPzE/uOcIeV7j+Hb3
NV1weFdD9hOOb7emeHHZmZv0OZrlW9dGt8wzdqR9+Vi+tcA7LlWDvg/k+HYv
xcWfrHKhfmSWbzXt064AmVE/Msu3tve3Vr00ieZxWC413C3O8EQ59S+zXOqT
m273n1ST52WOb1dcPmuh8Af1I7Ncat8uWi9xPfUjs1yqhij9Ta0J9USzXOpW
l2MuRjHk93J8u98a9DSW8ul+xXKpISP7lO3RI/VwfLuLbQRRVy1JPRzfriL4
l8vzAOpHZrnUhOdlc1o9whzfbty6kG0NPcl+wvHt/mhn2Tj7AX1/y3Kp2mUd
MwsMaF81lktN+m+HRyPdHzi+3eVeL3Bf6rfl+HbrS8fz59C8G8e3GzTqTN7W
I9Tby3Kjs59c1SzfRt6rcHy7S9O62It+kjwLx7e79uqBHL0t1IPMcqPj9sTv
Un9K9n+ObzfJcmnAyA7UB81yo4UKo7XGqbTvIsuNfrs8daSLFfU1s9wob+Y4
2QUhqYfj2+1XNbzgfhx57ub4dg29B4R8XUXyDhzfrn7Z09FWt6m3muVGq7QH
RuWNIfsDx7c7+u67ye9V6X7OcqMutmefNJSQeeP4drO1TCzVo6ivmeVG1VM1
fw3YR3IiHN/uiLEbcJ9h1HPKcp3rQwpevFtOfcos1/mgee6AYhPqU2a5zpNx
lRNthlMP8vTW33u43D/8hxn1U1OuPF4OP/eL8Cb7Oce3u3xC7y3m8TQXRrka
Nvhos6zrO7r/UC7AvQNujn8ipL5myoX4QG/ZkZnB1NdMuQg3bO/v0W8s9Yqy
XOdWhUbyMCsy/xzfrtf54mFet6mfmuU6z407e+F9J5q3YrnOmKfmHSc5kHnj
+HZz7AZ6n3hA5o3j23X03Nm8+zj1NbNcp8uSVRMHTaUeYZav/KQxUdvan3qT
Wb6y8vL+9IWLyfpwjm93OM8uQ2svmWeOb7faU3h9rD45Tjm+3Sv/rp00+Ua9
wyy3aOUxz2PnZVI/x7d7TNGYvPAmqZ/j2/0xPTf6nR+pn+PbXeh+OszRhqwP
5/h2D/F+99gcSOaZ49sdvy59UIQLmWeOb/djhtfYD5Zkf+b4due2v3bpSDjZ
7hzf7sU7ARHDz9J5Y3U2bNp+I+8wmTeub7fHyngbd5JT4Ph2/YykInkQqZ/j
253xr2Ox6BJZh8/x7b4Ym5I/4RE9TlnOsb110Irvncl+wvHtDno08Xfhf9Tr
zXKO2DrC4MZyUj/Ht2sp7eTu7Ur916zOvUEeDywvkvo5vt1zw2vVDe+Tdfgc
3+7byAcWlj/odYRyHi6Z3DVskz2ZZ45v197+Vn16PamT49ut1l9zKmss2e4c
366NXGVi3lYybxzf7sf8qNICmrvk+HYtThi7FX8neRCOb/f04cuz4ruTXAPH
t5sapxPvP4PstxzfruXxfwYxnUidHN/uurxt3bW9yHxyfLs28g9/9jWS+eT4
djeOX/Lq00bqlWZ5PTuHzORFpdQrzfJ6m66MOp00j+QaOL7d2nsNDQu20fMD
q7Nv0pVN93JInRzfbo6w4LXZUnoeYHVuWtswt76MzCfHt9shrndqgC31SrM6
k1VnDxlcT73SrM61pltO391Pcisc3+6I0E3r4lJIToTj252jOnHZoTLqo2c5
vqVj71on/0e92CzH9/fDx15X66gXm+X4Io/yXp6JJ/PJ8e0aTx1y1M+J+qNZ
jq/5+7w5rvqkTo5v99p5B4V9A/VHs3yc9lW7lxs0yHxyfLtbd/912P2F1Mnx
7ebPOco7lEPmk+Pb1ek+IOR8KJlPjm9375db+tF7yX7I8e2+TDV6nLGK+qNZ
Pu7sgy0JdsEkB8Tx7a6t6emmWEivmyx31qf3yUg96hPn+HbfL9B8brODeq5Z
7uzSHp+W0z5k3ji+XasbLSMeniPzxvHtBjpOvbnflHqiWe7MSc3tfreP1BPN
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
oja3WXVk3p49x+DZRq7F+HWYU77dJQtkX0jvw/0Iyrc7PWOWYbMivv+Ub3f8
wbUKSQ14XJRvt6Qwg3c9Ds8bU75dh0mcfWg05pRvV/OIWkzbITIfzp5j0Px6
l8LLcDwuyrfr3Wl/ae9gzCnf7sbF4WWj9+FxUb5dvtR3W88jeFyUb9dYz1d5
7nwcD+XbRbf2TpO2xPFQvt3hCWMVuz7i76V8uzV98icVdOPvpXy7jDBJ3E8N
z09Svl2BXuLp87vx/Crl201+ktDafJvMw7PnD9z5FX/sQBSe36Z8u5uXxdfk
NuH4Kd+urFPc/jXymFO+3ZKy2KLIjXhclG+3QX7bhNvteH6S8u3Kd3LvdY/A
nPLt6mY8H3JsFpnfZs8fuOa36XqBDh4X5dsNO/+Xs9YMj4vy7Tbo+Zz+eBuP
i/Ltyqusa1IKIL8Lez7AxTtqCxT+4utTvt3QphHPxRKYU77d1g1/pXOH4e+l
fLuxlTIligF4vovy7dYa3PYo8cXzdZRvd3A+b8c9TzLfyJ4PMEfvlPQmsj+d
8u3uSK/J6e+A7xvl27VZtdMp9jq+b5Rv1y8mY6OVDY6f8u26P78/xvo+nkei
fLv7qxYF21/A82CUb1dtYrH2gwNkHo89H+CPgU3589V4XJRvN+7hRKsPanhc
lG/3zvf4EYnD8bgo367+KOOAnE4cP+XbnV1fPbHkG74+5dtdl7GMiX6Kr0/5
dg2DvbZ4n8HXp3y7f67aDQ3VxvMSlG/XysA1IPMZnlehfLvcBU9W15H9y5Rv
t5/ivs990/B9o3y7Q/LPiRZcx/eN8u2OvuXCHF6O7xvl2x2nGXTqARePi/Lt
yofu9p2xCc+bUL7d4c3J9m99cfyUb1dCcY75vD8kTnb/fucu7x1hazGnfLu5
ymOuWy3F83KUbzf8XtOWS7U4fsq3+7hvwuTrDjh+yrfrOnRCaqIrvg7l2+U6
jzk4bSq+P5RvN9/AaUuSGZ73oXy7P/+qnjwaiOeRKN+u2C3pzpB6ch/Y/elS
s/f7v52GOeXblf/SnbTNiNwfdn/6jKPulWIffB8o367tMGOJ5Yk4fsq3u7ZI
JcrVFs93Ub5d4/37t/4OxfFTvt2rNfeadOtx/JRv9/GxL7bB4zCnfLuRrRLy
Q3Vw/JRvN/8088H0Mo6f8u12iE9uTH9Hnk92n/i5SaMyPQ7i61C+XZPcLfEX
7PF1KN/upGqtDefIfDvl2/1atU3xZRGed6N8u5eqDnN+/MH3gfLtzqiyyu0/
EnPKt1tSeTtIYzq+P5Rv906lt+3hNfg+UL5dVBlscN8Qx0/5ds9/qHi/qgbP
9/07h7yV8Q+a7erYgeOnfLs//K6YF5D54X/nkPfUjZ7Zm6aMwuOifLsLXCbN
MJuM4/93DnkXY2xvPjhsNo6f8u26Xo5rECwn8bP8ql6bxJNJ+POUb/dIv4X9
6sm8MeXb3VL97Hr2HDxfSfl2l8SPkoxQwfPJlG9X5ckVW9+J+D5Qvt3RNq0S
t2XweCnfLt9gzzWLoXi8lG+3YVG6yEASj5fy7SoEbrt1wQzPk1K+3Qk7vng3
6eP4Kd+uvOSqtwYrcPyUb3f8u6jEDHUcP+XbHbdv3o/FMjh+yrcrNzioMUiI
46d8uzLhU/jyTThOyrc7YMGx1PQ8PC7Ktzt8YO77m8V4Ppfy7Y4qOOB86RXe
n0j5dsf4t5qdtcHjpXy7clYX15ltwuOlfLvj1kopGU3E46V8uxPkHkrsbsPj
ony7k+qnlevF43FRvt3tUk2l+wbhfXSUb/dPovLt6BIcP+XbRcdPbwn1wfFT
vt3LMrHjgo1x/LRvN1aq+oUKjp/y7Q46ph/0pBn/LpRvd9Mov9MP3+L4Kd+u
xj7JmwM34nlwyrdbtjXWK80Hx0/5dkd79Dki+xvvW6R8u8bXzZ0feOJxUb7d
DyfrImRX4XFRvt1+BnuqH7Tg+Cnfrr72tyFyD/D9p3y7GiOWXxP/wnFSvt2+
WR8cuUsxp3y72XdUvYQOOH7Kt7vMQ2v78EgcP+XbLZCefkJWH8dP+XZPOY+5
ObEd33/Ktys1ROCj7Ijjp3y7Nv7KkV80cZ+A8u2GPp/YONGGi+Nk9xe3+MmO
O/0Jx0/5dqf5DF+fwsOc8u3uezTAeuxSPC7Ktztvcb/d5RJ4XJRv99mCPxF2
tvj+U77djUrKkQ9qcZyUbzd//JKFfxUwp3y7B0Zu/aC/E8dP+XYb+x+bE+aC
46R8u6e5l4PHZOA4Kd8ut91d/awk5pRvd9R3gx1vruL7T/l2HW+bna13wv0V
yrdb3HU7QysBx0n5dlWMAiY/6sRxUr7ds19Tz/1Vwpzy7SYsrsvcvAvHT/l2
h/tLTn11B8dJ+XY/zdzYZ/Q1sm+X9e2urausXlpKztNmfbstUgXODcrkXG7W
t+s6K2uJu8UBhsT33598tHBbUuPST+R8b9a3W2IV+aBhADknnPXtXn30dpX7
v3PFWd+uUsKL30sfHfoXH/nznZ59tl742X/xkT/lXXdKqBae/Rcf+fNGrsp8
UR/Lf/GRP39Ldx8qHGf5Lz7y5x79zw/eLbb8Fx/5M+WBx+dbeyz/xUf+nF14
jGNoQzjr2037+AmdKSL9L9a3u3rD5R0pRoSzvt2EsuVn5FpIH43y7VpIuJhY
Es76dmP6Jb2OFhDO+nYXe9ilD7tF+nSsbzd8+pqfB0ZhTvl2H77qO/1ePemL
sb5dxYGv2zasxZzy7QYb6YdK+JM+HevbRbEC64gBmFO+3ZRxAUvNj5D9raxv
d7Pllr7KqXj/L+XbLcnhpJUqEc7u29WbdMvvlTLpl7G+Xd8a7p+YWXg/L+Xb
9b5W+VhBipyjzvp2H0xKWXup5j7+POvbdY0JbC+NIftbWd/u3T1O3ks88Dnq
lG/Xvs8Z7Uen8f5fyrcrYTh+aqkO2dfJ+nZlxjsdCTqK97FSvl21PImg87Zk
Py/r211617J1zWO8v5Xy7W7Rbpwj8+9cdNa3e0iw72xNLt73Svl2rcJzwkNa
yX2T/RePcNLwr/lj8L5OyrfrvZ+n1P/rM/x51re78EnTxQX2eB8r5dv9VlaY
a7yC9BNZ3+4JhTQ19z6kD8j6dqX2hV1NfI/vA+XblSzd5m33FO/rpHy7z4xQ
QEMq3tdJ+XZXNU4M02km/T7Wt1tt3i/x3QjMKd/u4D/Fz+eY4/PeKd/ueomX
sd3h+D5Qvt1bwy0K40V4Py/l20VfPfKUB+F9kZRvd0mmUdn0VtwHpHy7yzNm
1M/JJX1A1rer9fnvb41w0u9jfburU+M5mo/IfWB9u2uT7/RbcY3cB9a3uz5x
+3DtI6Qfyu7Dleg6/tqH9Pso366CmdH+LTJkfy7r20VVO0dKhuJxUb5d/Z2b
EkPJPlbKt2uRtfLskXY8Lsq367iKUR7rQsbF7sPdvutwy7fruK9H+XavRqjr
bjiI+3qUb3dL5PVPjSHkPHbWt6sYVap+WxL3QynfbmeUhqeqPh4v5dtNjnYa
+Pkl7ldSvt37n+otj3bjcVG+3amX3CsnbcH9Psq367LkZP3kzaSvx+7D5fPW
/5qiR/ZLsr5ds+ipXYq6pI/J+nYjeP2Een6kL8n6dt0vRg7d4oPHRfl2T3LM
x297TH5Hdl9t46aiF40dZP8j69vVWqrr1JaM46R8u54zks51PSD9Wda32y7P
HOCa4Dgp366HguEDqUs4Tsq3m//VKv3hRdKnY/fVemk22jkpkH4cu6/2QIDB
ihtxZP8j69udKpPJtTEkfUbWt1t/bWn4aUnch6V8u69/vTlt8oLcf9a3a7Fn
8qyDa0lfld1Xu01qSn1tPu7fUb7dqw7MkJzVuH9H+XaDh22eHf2B7BdmfbvF
zke3vVTE46J8uwNHX7FydSV9Vda3u+DeA28bEemrsr5dQ9k3cUfN8e9F+XYD
i3br7PlK4mT3yQ78fm6f/kAcJ+XbPfzV/aQe2ddM+XaTPr+7st4a938p3+6U
pCyXVe9xPJRv95dfhaSRJO7HUb7dSc1mtZclST+O3Sert6A72VuS9B/ZfbID
+o7cen447qtSvt2j91Sl3w8n/VN2n+xnZa3vzcNx/5fy7apF7r6vNALfZ8q3
m53cPKHyN+kzsvtkC0Z8E63Iw/FTvt0Kg4+1PmE4fsq3+/OF92ehB46f8u1W
Nww6mMrFfVLKt9t+OU/lZjyOn/LtimSetGnfwPFTvt17dSNX2CzB8VC+3bLd
b9MzybnxlG93+7OnwVqO+Hsp3269Q0V8tTTuR1O+3YYfv/1TB+L+GuXbVX+r
6xsXhPuGlG/3uP1rj4hNpM/L7m99c2Cwawi5n5Rvt33RsdtB7qQ/y+5vnT8y
9dqzhTh+yrfbUaDLXRGF46d8u9yq+dX8ObhPR/l2W78MbD4YguOnfLsVH0s6
k+bhfijl2/3m95anEorjp3y7SXev97+jgfu5lG83zGrn8NaPOH7Kt+tvNF1u
M0OeB3Zf6ge7i8ZHb+LvpXy76+MdXwnrSB+Z3ZdazvXtfLiK9JHZfalnFr3X
nPMUfy/l2z35os8S+XDSn2X3pRqXp2vEtOP+IOXb3SXnNfvADNz3pHy7mzab
qkkcxf1Wyre78vbiqc/8SB+Z3Ze6KHGwgnYpjp/y7c7klsjWy+L4Kd+u/ulh
1e03cZ+O8u2OtYyvO6OO+4OUb/eK4ICIvwL3cynf7k97vvxNfdJHZvelbhr1
SGOEGY6f8u2Gei3e7HEVx0/5duWnFZlOeUB+d3bfqKHF2LCqFfj6lG83qnWK
HDOH9KPZfaPSptOtnSbh61O+3ciF816G8Ukflt03uinR/nNsFekXs/tGqzaV
NaWlkH4xu2+0PfL4lEADfH8o3+64b3JHohXx/aF8u1oNiUFZTfjfBeXbNRGe
bKt4j/9dUL7dg/nb7UZr4z4g5dvtc8ZM2DWG9IvZfaNuI20vFNTi+Cnf7vQ3
Hl2RoaSvze4bdX5yuGH5SNLXZveNJhS5lfd7h59PyrfbOSb+e7oejp/y7c5d
MmHTQLKvlvLtPiu/OPTuFdIfZ/d1li2NsOr7F/+OlG83Db32cGvC/T7KtytT
Y5ga6IL7lZRv1/iu3J/4hWR/E+F8FKKRNaWwFPdzKd+usMJWr42sB6B8u5tu
MZcGqJH+OOEitMS0Zu/KF/h3pHy7UTPWZWitI31hdl/ndrPM5uhC0r9m93X+
Ctw8bKEJ6V+z+zpvNXyf9a4P6V+z+zoVVXZvVif74Cjf7qfDZRbPx5M+O7uv
84NexszV/9YnsPsrv7qtmSgeia9D+XZvjI3M2e+Ax0v5dj9uGHPQZCzp67H7
FgfYyafq2OC+JOXb3RmjOGNOJenjs/sW/f+quUmvxveB8u2KZ8/t/uuPx0v5
dteZMPuLh+DnmfLtej5dnhxjjsdL+XYbfPWrrO7gvh7l253Ok751rAD3VSnf
7omdObN2T8PxU77dd+8d89eTfX+Ub7dz2EabxbH496J8uxomg6ZOH4Ljp3y7
Vskp6fK78H2mfLvd19abpQ3H16F8u2nHFeYYrMbjpXy7Gy1WHXW8hvt6lG83
P8dgv4EP7m9Svt0Dc07rq8SQ/jK7z7HR+bbOn2I8Xsq3e6bNd1VCN+mzs3EK
9CIWO8ni34vy7d5+kz13zwI8Xsq3e+y428EHV3Bf71+fi4u+d+dM/TEEx0/5
dr+NOnfl/Cgc/78+Fx99VZcvGS+H46d8u19WxS+MmYDj/9fnEqL0vYfdDiji
+Cnfbprl4F8Sqvg+U77djQ7JhvMm4XFRvt1LKz531Q7F856Ub9cgZ+t2jhiP
i/Ltnk1LOK6cjsdF+XZn1v9Q2/IYj4vy7f4c0PLzogVZL8Hu1/NRlnj+UhuP
i/Lt7loja/htHB4X5dt9bFi1IrQAx0n5do8GO0goh+E+KeXbndtnYeJDNxw/
5dvlu6YNHV+P+9qUb9dVdYIT/ynp77NxTos/NaJqL/53RPl2w3emuCTL4bxH
+XbTlfoe7BiLx0X5drXSHW2RJZ5Hpny7c19/ulbB4L4k5dtVdG6+eoOHx0v5
dqVPj786PR6Pi/LtDg/x7B80nPTx2X18befEkn/v43FRvt3sJfp9VyrgcVG+
Xb+WvShtLe7fUb7dKYoDI9aS/WWUb9dvZ8jCz6Gkv8/uj5viuCdsnRn+XSjf
rl9i/wXpU0gfnN0ft0585LhXOH5+KN/uWqNoE+9p+PmhfLsXf2u+G/sHz79T
vt3EpKTF+c44fsq3K/VwY4or6WtTvt3Npnl6umlkHQK77+zh0j3Fg43JOgR2
31n5yJpDaQKyDoHdd7Y1u7Ru+BIcP+XbnRe2LTQ8i/Tr2Tjj0MH5heT8bcq3
qxN7/H13I46T8u0WrbSeO454Cijf7tG0G+/QALIOgY3zz0a32Qb3cJyUb3dw
wOpDPB38/FO+3aczNrvcscd9Rsq3O1xp0f1+HNzPoHy7FxQmel0+juOnfLs/
Zfr7dJfj+Cnf7tbhLc9Ob8HxU77d2AF5AS1JZL0Eu+9MXRgVfGQhjp/y7X6e
Y1n16Cjuo1C+3UvzBgQNz8RxUr7deQsenr46h6wrYPdz1WuoanaQc+Yp3673
okjJQ6TfQ/l2N6MNmflkfx/l2+2vWXJvbSKOk/LtDl6S/jt0Pe4nUr7d9ogh
rjxffJ8p326Bhu7c1X9xnJRvN+a9yzcHHXyfKd/u89l5FnlPyToNNk6H1zKj
5fuQdQ5snBZqu94b6ZF1U6yHcViHnajponXEf5z19M3NW3FO5qrtf3wc63Gz
kZPqmD/cAX+e9bg5dv70CRjjjT/P+r+slM8U71BwxZ9n/V8qMnMuTlD2w59n
vVH598YeOlT0EH+e9UY11pi1JtT6/8d3s96oDt7z0f4z3uHrsB4i67ddrQqy
j/B1WA/RyOMeg5DCa3wd1kNUfz3y8c/3Yfg6rNcmZeBP71FDfPF1WK+N+4g1
Xh+l8ffuZr02VV/uWMzRi/qPW7Nem4vS58ZJjY3H12f9KYGqXyLitJ7j67P+
FF1Pzj0pnVB8fdafYjRsQG2BdQy+PutP8dvidm3WluT/uBS7Xkg2LbbMNDQA
fy+7XmhRd/b80/ER/3E1dr3QW7snUfe/4TgRu14ozaWw3DL18398PbteqCWj
/2WV4sz/+G3Nf98rXjTT6uj0V/9xT8Jbmd0L7eT150X/xwMJb2MWb+8SXNiK
448kvJ25E/a29YvGl/94OuGdzMXVxw6Up2Tj8bLrSdAdWdE4z2A8XnY9SYi5
ZTnHD983NXY9yWcF4/iW7jQ8XnY9yfHq51nNz7PweNn1JOcjvWNrc3Lx78Ku
J7nu4va2jFeI7wO7bmTljYVcDwX8nHiy60buLZlibqWM73Mgu27Etsj1jd6+
DHwf2HUjSz1k1erVc/B9YNeNdO/wfna5O/8/XsSuG9lhf9fB/gD2vEux6xmi
DNY///nxPb4/7HoG8z2jmcz4RHx/2PUMglXLsjZvwb8vYtczfC75KxGXgu/D
enY9Q+rC73Lu44rw/WHXM0y/PmdexjbsSTdh1zO4ZN/VkXDCPvd/eannvRlu
umjbxkCQlzioNVB8NaKLxM+ex9giqfbJ8FM0yEtcVDXf3XLTkliQlzioanXZ
br29iSAvcdHjtdN8DV+mgLzEQS4Wq29e3p8O8hIXrRli7zfhzBeQl3iI9yL9
U5R9FshLHNRfPcvg+okskJe4aExo4dJN3ByQl3ho6rLayXK3c0Fe4qDf2/+6
fcr+BvISF4UdOPrmdMV3kJd63temhemqbQUgL/HRhEVT2pq5xSAv9dRX24xk
fl76AfISF/FDZWWX3yK/L3sOUnyC8MVw/RKQl/joenbD/PIpZSAvcdC+9wke
0zXI97L/v7v47lLKvQ2lIC/xkOcb1ME/WA7yEh9FvO6aeNSyEuQlASoICtmY
c6ca5CUO8g5TW3PraynIS1wk/bVPSPnsCpCXeMjhZ7q8hmsVyEt81FfoddOh
owbkJQGyljNtr9r2E+QlDlpU034t0a4C5KWeeuCl0fERGtUgL/FQkGnejr11
tSAv8ZHxrNVagffrQV4SIIeuHW5WPo0gLwnRsZ3OA5+Im0Be4qC0uZv5+vrV
IC9x0Q2Tb5/37awDeYmHVvltvXdkdwPISz3/nzI5MmOBehPISwJU2k/FjXnV
DPKSEEX71ouXzGgFeaknHqUvSR1L60Be4iLf2XIVy+41gLzEQ2jcmz6JFk0g
L/GR0sTtAxsmtIC8JECjp3Jkhn9uBXmp5//7qr6KC860gbwkQs0z1swxmNgO
8lIzYz75R8ipx3a4jmLrJWfzjlkp1/C+aapeCpt2UnWoDV5vQNVLj7OlMyzn
4fPbqXqpPjPg/so7eL0EVS/V333rr/IRrz+h6qXbf7Wjq/Xx+dt0vaS4TaXC
D6/roOqlPie2WZlZ6/Wql+71l3QKNsZ9dqpeepgRpzFkMl5fQdVLKCJNyrlq
fa96ScpJ+m7OSdJHZuulVD1l8ba1eFxUvRQ53sN8VfiSXvVS7rqSDWvqfHrV
S1GaS5Z0JpB9u2y9lN7nyLOqaLxOg6qX+kSLtu5dPqpXvXRXIm6A6vdnveol
h7qvgzJ34P47VS9NKRTl/jmH90dT9RJa3eG6bxjC8bD10udhKHjLX/9e9dI+
kdm5C7IRveqlJ1XLT28cifu5VL2ktczi7xsN/LtQ9ZL1Bv9R0UEb/+NUvRT2
5VXdZN+gXvXSLtUyE7uUqF710osDci6j7+H+MlUveZSNGpmag9czUPWSdcei
vxFbsfeBqpcy61RGdpe97lUvxRkrurwaH9OrXpLfFepdvj6tV73kHmIy4Psc
3Lel6qVtgZL3X93E6zGoeimy4ZxP6Um8Ho+ql3ZmeBtsmv22V70kk6jROO1G
XK96KXZYVo6zOL1XvbTsxUhzw1rcX6bqJd/pfZcPIusrqHrJ09Wg67XiYXx/
2HpJZvQS4Qm3kF710nmPmdnSkom96qW5uY+yPpZ+6VUvBe5RXnRUM7dXvbRh
ZqJ2nvuTXvVS3y05NX6KQb3qJSMLA7WOiJBe9dIrWXc7rzsfe9VLiwbbLrT4
ENmrXpJ5E9d4uuZTr3ppXbiHxieX2F71kpfCzLVzH5PxsvVS8/WEXS8DU3vV
S9NUyhaY1iX1qpc0JcKbP1V97lUvKTUlb7Iz+9KrXsodluspuZnUb2y9tMBc
96dYN7NXvfQgJ2Ney6bsXvVS99y1Vyp1SD3G1kt5Sx6+djIidTJbL2UfURYb
N2X3qpe+uIRpodN5veqltKjVd4dzCnrVS/kLeczFp9m96iXt19M/u0Xl9aqX
wqbs2RWUW9CrXhrxOeFUmUVxr3opzbaIabxU2qteUvmlFp47JK9XvaTcuaOw
IaqgV73kfH5ZH5uQ4l710nBuvtRAqbJe9ZLjJbPxbgcretVLXzTuLRV7/ehV
LwUfn7xZ5lRxr3qpW4tzY55sWa96aZXc90i9TxW96iXHluBfx42qe9VLhQn2
U+8MqutVL8lufb0742lRr3rJtW9qwVqv0l710tAPFfoprhW96iV74z7fV96u
7lUv9R0jvTX+al2veulS8oycpecbetVLNrNKfhs4lPSql169c1b+/KO8V71U
PG/1Xg3F6l71klRYt+vTE3W96iVmUXDaiMiGXvXSnN0zudGXm3rVS2u9Bj6w
mNbSq16y2XP+loUUWdfE1ks3/aQOV/9I71Uv2Z92TxppRtZ1sPXSmg13jA1f
kP41Wy8dtV1tddaR9OvZeqm21LFfh5Dst2XrpernZjMdTpT3qpciylSmn3hL
+nFsveQoW6uq1477U1S95CnlcvZDak2veinX5FytYy7p17D10pCMvduPleN+
AVUvVastLApc1dirXqpdmp27+EBDr3qJP2V6y/g55Nwwtl6S7WffnyuB55+p
eil6yePyxt0tveql35c8X3k9be5VLynF3T+/sZmcA8bWS3tEbtq8BZhT9VKo
b9aA2U/IPDxbLwVsG84dlULm4dl6yXuAXltHM5mHZ+sl50jnmu+jMafqJdvj
OQUfEY6fqpfiBo2zPTu0s1e9VGFyVO7lCDK/SngbI/wS9rpgdHuvemnSjH4r
pWTxvCtVLy133FqweBweF1Uv6Qzw3TXC72+veulBxAOZostdveqlSlPH3Kd7
//Sql9QU7JyPL8bxU/XSmewLOgvH4vipeunTNQspEZkfpuqlOX8PpWQH4H0N
VL1U89NoOtMPc6pemv/xs9q6VHGvesnzYXLX2Et4XFS9JLKOT2icj8dF1UtH
DT45RjXh+Kl6afs7RVu3e9z//k7VS2MGhR9JK8H7Fqh6Kf/Axo28qZhT9dL9
8IrZc01x/FS99F6pbXaeCd6vQdVL8/Pl+iztxvFT9VKo3YrElzdx/FS9VHfZ
ivOrIBTkJQ5C5m3fy3TjQF7ioM6Td0e9U08HeYmLNlYs0TS8nwbyEgdF3NJ4
dqfjK8hLXCTB/z6jJIysO2LrpY5vqx2emOaDvMRFt4btzFuYTs7ZYOslhfUm
8tkquSAvcdDFT11uK2KLQV7iIv8LnOTmsCKQl3jo7fn+7QuMCkFe4qDYS8/O
jb9H8iRbL+0J1nqtr0fyJFsvdZdWVLkMJucts/XS/aGX5TJTikFe6rnPf6We
/n5dDfISF7VftNm+S4WcJ8DWSwESbQPi/ch5s2y9dMDeMFJlQjnISz33s1nJ
vbFvPchLXBT/o88uG6YO5CUeckrImjDiJMnnbL2097Vfld+zKpCXBEj9oeXL
BUUVIC9x0MFfxkl5q5tAXuIi0dGIuP2ajSAv8dC61MlXiokHnKqXboenW/3e
WQfykgBlBJw+NUCb9G3ZemmV6f17M160gLzERWdOuY79atkM8hIPPTvn+Mh8
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
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[CompressedData["
1:eJxN3Hf8/vX0P/Drfb1e13WloT7vdxpEGgiFZHxTaGiXtnZSKoXSkJ2klAYa
MiqzbEKkkjLaS0N7D9pLhZZ+j/vnPD83vz/O7TrXeZ7neD1fz3nO47yW2HHP
TfYYDgaDucaDQZ/fM4b1++jUYPDimVD+LBraIPy7QxuH7kjaB6Lz0sgXCS0c
Wi/y9UNbhO5M+geT/sbIvzlrMPhG6JzpweCP01WWPHSV+drwrwn9MPX/KLRQ
+BeFjg5/TGi58MtqUNq1SfTXHUWev/Pl/6L5/7q+dKRtGloj/LtCW4ffZqb4
1UNbzZTsrJS5R/J/OLRK5CuF3hY6LfLfhd4S/s2hX4X/9bj4N4V+OS4ZfoXQ
KeOSrRj+/0K/Cf/bcfFvDZ06Lhlemcoie3v4lUOnhz8jdEM3GFwf2in8+0Nf
TV8dGzozffX70Bui+/rQZmn75qHdorND2v7e0K3JN0paHzo08i+G/hzZn0Kb
ht8s1CVtGPpC+EPG1RerhbacqT5Rtj7Ud+rwDPrmQ4N6trVCa4a2Tdp2M8Xr
Y31L5l0tGDpqXO+Mzl1T1cfy6uN3hn4/rr5f31gJnR/+gnHx64bOG5cMv07o
3HHJ8GuH/jIumTG1fOg9bayt3N6hd6dPpekzfUXnHX31ub4+c1xtIcNr00Wh
j6Ste4beHfm4rz7Vl4eFHsy7eCA0K2VNz9SYNPZ3HdRYnQlNh74c+VeMkej+
MnRt3t11oSWS9vLQiUn7VugnSftx6K9JuyJ0SvhfhP4W/prQkn3lofvt0Db6
NHVtG7oo73WpvnSkfccYnVV1quv60G/D/yZ0Y/ibpos/NXTDdMm+Hf5boXPD
nxf6zqyS4c+frrYuHjphXG3Gvyx0/LhkJ0T3+NCfovvn6RprfwxtMq4xpy5t
0hZ1etYfhS6frmf+bnR2z7PsFlq6rz7fIHRhexc/i+5PQ1dG96rQReHXju4V
GVOP5P+l+b9e/l+V///M//kmGSP5v27o+9qa/+uH3yB0urmX/xuF3zj0N3Mp
/zcclOyy/H/FpHTfHTrHWJ5UWer4Sf4/nTZ9PPw/rGl5/7uEdg79I/J7Qrvm
2XcJrW6tCS00rrLVsUfkP59Vz+RZrp6ud02G9853i84HQgsk3yxzL/yHQguG
f1Hog+F3D02HnxkXLw9dsgXbGDT2zMHvzqp36l1eMF19/8PQZdP1Dv4Q/qzQ
neHvCp0Z/ozQbeFvD509q3Sk3W0NmlU60u4IvaSvPcFesGFosb5k+I1Cs8Iv
EDoybflS6JxZVaay/m7MGDuhe8LfO138H0P/mC7ZXMk7CR2evEeMizcnzUWy
6/Ls14beF37Hcb2L94f+Pq53Yi5qg7rNSXuUNm7U9i51aZO2qPPEWTWmjeW/
hL4f/nuhC409c8LcsAaEfzC0TMp6VeiklH2yPSNpp4VuTtotoVcaU6HvJe37
1qRZpSPt1tDJ4U8KXRz+kul6Nz8IXTpd70iaNqibjjlizpvr5s4l8oYeTdpj
07V3vjr0g3HtoRcm7YLQQ0l72BpjrQk9Gf5f6phVc8jceXy63r02apsx4Nk8
g7Z7RmV7Zs+qjstnVRnyPjFde7a93py2l2ubOWuuauM1eVd/C73XvhW6OfxN
5oy5M660q0Pbj0tnu7av/MleRhZ++9CV4a8aV5q954/j0nl1+GVC38654Duh
b45rbXFG8b6XdcYIfS9p3x/VucNZ5Vh77bjSXhP67qh0tmnnhHPGVcc1ob1T
3t0pb8eZoveF/tbS7g19NOl/T/qukT+SZ384tKC9sY3NnUJ3j2uMbtDOSeo+
Tp/M1DN6tqvHVTYZXh3/F/6toevTthtCbwu/YujG8DeFHhrV+md9fId2WVtC
T6Xvnw693R4ZeiB6D4beHP5NoQvCXxj6sjKT//zkf6XzQOrcPP+vz/+1Z4rW
cs4aV9p/R7W+Wn9XjXzJ0BKhwyI/fFR96Z14F/p0hfBvDJ0X/vzW5jWT//Kp
ehZtWyl0/6jaaKxai/82VWP2LTPVZm29aFRtV6ayPMPW7Rxz9rjeGZ3Vk//S
qcq7fOgNzjWRnzYqXWefP4wrjzFm73dm2a6dKZwbfh75L0K3WxtDo8jGoVeE
lg4dmbK+NKq0W0P9TOlIWyp0xKh07k/afaH5I1tgps4SZHhnCmn3hl44UzrK
uiXUzVSZ14a/JvRM+uLZ6eK9Y++W7CZ7fWgQ3amZesZV8vfiqXp2Y/7t+X/h
VM0FZd8cGs5UHfLeEHp+usrQlntC881Um653tgg9l/T/TpcuGV6el0dn8dAn
U8+nRvXsxoSxoA/+bu0PzR3ZPDN1znRW/7GzUOtjZ013hjl97+z2s3G9g43b
vvKNcc1t+4y952vhvz6uNDI8HWnmmLlFR1nOtT8dV5nWileFvjWqNWOz1iZt
oXNn2npHaBLZXKG7ZpUM/4KZehYyvGf6x6x6Rs82r3kSWi7065R96qjmlDHz
pTbXjMXXh34zqjH5+paHLtma4dcIvczZa1x9+7LQJ0bVx+a4Of1gm/tPZe38
T+jT0f1M6O7wd3W1z9lbn+5KR9r+40q7s6s9kM4d4W/vas+3T18a/pKu9iz7
Al06Z7d9U13/Dn1qXHX+K/yToU+E/+S40sjwdObLnjBv6MDwnw+9sC8Z/qDQ
/H3J8Ae3Pd/ZepdBnQXmCc0dOiDyz4Uu66qNp7dzizx0dx5UWXRfEPrsuPLM
28qQVxsu76qMM9q55orwf+3qnPPcVN2pbnEmG9ddC2/PsleR2auuCm03rj3L
XnZjaOdx7WnW/odCMzO1B0hzx3O3o6Ovb+vqDKbPlXVlaNtxlelM4263/aDO
OheEzg9tGflW43o3F3d15vjdnDZP1R3Bs7gjXBjaelx3h/PCnxt6T/gtxsX/
JbT5uGSeXZ/oC31wYatTXcpQtzLk1QZnL3u6vdwZzLt/IvTxcY0BY+z9actO
gxp7jztrhBaZqfu6NeKtSTt3qtaOR2fVnmmvXCj0kpmyO3w0evuFXhp+sdDH
wn/cHubsl/z/narzo7lBR5o5cuWsOvM46/zbHWJWyfD/cWaaVXWqa+GZmmOb
pLxrp2ruaSsdadrsXL9aaD5jN7RK+HeGnk1dz41qDyTD2xsXa8+g7dr8rlaG
vPM32rDtb9Lc3d3R3c3d4b1P52z9fF0bZ8bG9W0c/b2rOW5uO0vfE/4f7gjO
YaGPGEOD6iN9dV/oXneKyD88LlvM18316bLJ/DNpj4U+mrT9xqWrTGXJc38r
Q949Qg90JcPvOa46yPZsdT/eVZnK+lgjY0GbpD0ceii0l3OVNTptOS50lrtJ
6JGmI22f0O65j+0WWjh9ucio2vpoaN9xtRkvD12yYXTXGtSd8avuKZG9Ovxr
BjXunY3XaOcPZ+RfpcxfepfDvL/Q4+H/6UwV3XW7em/evTuZu9n8bRzg3e8u
aPdm9zJ3tcuS91LjNvzLQvNGd55x3RHdFc9v9+7d2r3ur9G9PLR4+JeHrhiV
DL9EV2nKVBadq4zx0JLhl3K2Dn91aOnwr+iq7Y+F1u7qGdzzr86zvnRQ98yL
2rlv0fAvttaHvzj0kvCLdZXmXLVIVzqehY40z6QubVC3Op1Ln0z5rw2/bFfP
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
5KT8F2T/zv/t839LfWfOjOqu86LwCw3qznPzqM7qZG/oyhaRZs4+wzt3w2Is
MKg7hnOpvWqRQc1pexZbirKcmZ2DnX2dnek4A/8u/18Yfn5z3vl6VLwy5+tq
jnwq/D1TNXfcxd1lmOPdyfnd2cv+b1B+xQ9Hf5tB4QGWiO7Ok3q2rUMz+b/m
pMaSMXRfX7aCZtqfbTP41KRsi8bEW5K276TKYj9cZlS2fzybIh8AP6a6VxwU
DodtXF03T5WNfLfQB0L/jt5/2GuaDP/UuHzmZHi+9HNG1Qee/YWhP9mL9En4
BUJ/HpUMP6ursz0Z3hn/tuZHZYflO5RXmcpSxh3Nj81GyYZ2e/Nr0iVbO21Y
K3Sad9MVbw209pHxwVp3jg5/TGj5cc1xc/ubXWEY+NGPDf/VrnxifGNfMxa6
ulsYU8aSO8blza+rLHlea78KfSn8l7uqy1pnDVHncvan0FfCH9UVLw9dMme3
34fm7uoMhz/Tmt+VDH+GPaQrGcwHHMY5XeE08LAZZ3clYyN2Z3ZXZj+e7cee
qj2SXRqGRBnywnrAmVgH7d1/6KosMrwy7d36WN/aw9cf1x5vb/99V5gXfajv
juvKL65OdbGFnz6qOWOuTLpaI62V5tDzWT8fb+vm821T42chw0915VPhR+nC
9135VehIG3aVRoanYyxpg7qNKX2nDerWh/xpylTWKPTMuPyXbIxf6utdvjp0
ZFfvdJlx7SH2jiNCK1nvQt8Pf1Jo5XHJ8CeHVjS/Qt+1V3XF2/PsdWRvcj4I
nRD+xK7KkoeuMt/ivBL6Vvhvd8XLQ5eMr5gPmV2InWiDca0f5u+6kb9jXOuj
9Xkd/7MeHJT/9+f/x/J/39A+oWUjX25Se/eH+MImtYe/fVzP5Fl+0NUeLs9y
bW9/d+iQlPdAyvvETJW5Hx/WpOriM4epgaXhS6fzcT68ltceb6+35/6wKxwN
Gf5HXeFoyPA/Dr0yZbwi9MXwh3XFLx06tCsZfqnQIV3J3jiuOW5uH99V2pKh
L3Sls8S4zgjOBgd3lUaGp8N/wFd3YPjPd8WzWbBVkBkbxoSxYIysYX8MnWos
doX5ggP6SfifdpW2eujXXengVwv9qisZftXQL7uSPTNVZcj7s67SVgmd0pUO
3pnFWYXMWPLMntWYUrc+1HfaYDwoU1k/78omyw4LUwRbxCY651wFp3L/uM4I
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
n5QMv+yoyibDq4PuR82JUeXZJ/ze5mz4V40qjU2YLZgOTDNs88vCLx7aKWk7
2jPZZEPvn5QMPz0qTDRs9GLhXzoqTAKcAR83P+Dxk+pzfb3dqOrey5wYVRv2
DL+HNSL8Ut6Zdxf6T571qb7GBhneGIF51yf64om+dPkA2P7lURabOVu5MtmU
2JaetLaE3jspHwHfwHyjastHQkuPqk14bdIWsh0mlYfuC0fl3zJGjc15Qu+b
lI60+Z35J/XMnnX7UY09Ph2+HGNQTKE4gBXCv0l/D0uGf3PooOh+PvQO945R
xQ2IE1g+/BtHlZcMr4xPT8rGz7b/1lHl5QPi+1HG/uE/Y88Ov+KoeHnokh08
qTrVtUroC5OS4VcNHTYpnxNf0/qhwyclw28wKswzv9K7wq8xKpwtbO+a4dca
FU9HGtmhyXtIaLXwq4c+F/6A0ErhVx5VWXxVfFzKXLjhhJW19qgwumT4dUJH
TKpN2vLuUWGO6UgTO6wuz+RZ1Kmuz4beNqo68fpI35AdOakylbVh6GfuqsPC
6MDq/HxYMjysD0wPbA9cDSwOvA/fLh/vr1oaLBHMDZ1jU/Yxoc3Dv2dU/NHW
0FHJjgv/VWta+C1HlXaUNXVUOng+Qb5AMrrKVJY8J05qDBp77x2V/55vm4/7
9DY3+YX5LfdsbZamzZ7F2qkPPLs11NizRlobjUEYpZOanxm2COYJzgkuCe7I
M/9yWJgnfYE/ZViYKjJ9IQ9dfSKvMpWljF8Mq4/1LWyVvGR4ZViLzDlzzZq0
y6R8YnxhC4Z2nZQM/6JR4eRg6fho+GpgWGFZ4ZBh6eDmyPDirqzF7rDurtZk
GKQ5flx+BzYANgW2BLaBSxruAWYDdgPGAw4DRgNWA09HGhmMnjrf2uz0MH1k
eLZ7GEAyvHgpbeXH46fUZnjLtQblk4D/hAH0jJ4N1g1u56nmNxGXAkMMSwwj
CCsIpwHrAnMCewJ3TEcarCHcLz8kPyLcrzbATq8xqLbBKMtDF3YRRlgeurDC
6pqDG1anvlGnuvSRuuEg4Ca0QbwM+wh/IzwLjAlciTgY8QJ4WBO4fzI8XIkY
ADKYITgWOBQ4GHnEGhjz57Q0OBYYFTpwLbAwcBlwP85CcC9wGM5EbGSzfdWD
sp3B7/CH8sme38pShrzKXLa9A30PJ2qOwdXt0+aetsLCiBPQZjgfOBG4G3F0
nhmWR8yQvoABoiNNXJU0OCBxZnTgxuAMxEyIO4ATkoeuWCxjbsXmP76s1S0P
XW2Ag9Jn+gp2yDOR4T2rupSpLHXC9c7BvcKCwviS4WFFxSeJRYS/hxeFyeS3
FcMnHo8fl29XDJ9YPj5Mfks+Xr5emFjYWLhzuHd5YBFWG/yvLGXIq0x4+XcN
CqMAz87nyW/HL8yPPHeT4dUBUwpbys8O164uMrw65eX741NWBoycNmobrKm2
8zOLafQM4sL4wV+ctJeM6uxDhncG+sCk1iBrz0Kj0uV744OTh9+aLxzOwLcf
PjipmAexDouO6uzlTOUs5QxmLMFqwlwZU3jYTjgrMrwzl7MWmdgJbVC3GIrH
xoXRgM34XF82WbjANzRbLR5WUFza7Fi1rrDlMN3WGj5tvm04irvbO1+7+UON
BZhzc8DYv72tCWs0/MgSrSw60pQJRw2HC2MORw13DpcBVyFWBe6cDO9bIsae
PHSNQXm1SVuUAd8IK8Kfw19rTIhjEFNhrMBgG2PGltgKfmO+ZD5nfl/PDuco
Jk8f4K2h1k4yfmR56PIVK1uZylIHvzIdaWe2MbNaw68YS3zOdKTx3fdNhufb
12ays9qzGItzcCPGJNuSd+jdsTE5h0yVCXn2PiwGXpzxR5O2X182SHZBNkO2
Q/eJL0T34EHZD9kd2SLZYNli6bIlsjnKg2e3ZOcje6LdO5zD3dXcv76Ysg4d
1H3PmfrJdu/bvJ2zn2j3OjJlsYWyGSrTeD8ieQ8f1P1BGrsemygdNiS2JHGw
7Jx3tzZrK7symyPZ2m2fZiclw9u7xXiI6xCDIRaDjYuta7/mixa3IU5D3Ie4
i9l19RVnq0662qBuefShvjtoUH2rreyObLqrtHuBu8TO7dzhTuBu4I7kruQe
657szLJju9e4q7gzujs+3e457ozujs+2e7A74zbt3iMPXTrPtXv1Nu1dwNjB
2nkn7sPumO6a4pjdU+bI8HTdUd1Vb25xx8+0e5W6t25t9m5g+DzLbJvAqO5A
7jkLt3Xt7hYH6xzm7rNrW3fw+mSXtg7qC33g2fWJM9v8bZ20VrEBuGe7w23U
1k1ntztb3C1MImyiMbNo60tt2qGdA91DF2jrnnXUmCLbvY01ZTkb3tHieo1R
Y/eQQY3dfzY7hLrdM8UEsi/DqInfcaZ2tj6+naudycnwJ7ZzubO4O97X2znc
Od6d9/h2znduZ3P4Zjvny0OXzB3FXcW5m+1C3JA4IZgCccGz7wNpy7GDsmeo
87hBybSFzDndPYAu27I1wVrAxuxe5K52VLtnuPe5K7ojuiu6I7srswGwBbj3
kuHZDtwR59wr3RPdu9zFjmj3BPcmOtIObvcGd6dj2r1E3e6O7izaIE2btIWO
tstD1zO4gylTWe5txjI7irh7Y9qddg6uUeytd6TP9JV3x6fEt3Rdi1t3jueL
uqHFzePpXN/i4K2JfCvrtbUSHgV2xZr5SEuzxlhb6DzexoyxYk18pNltYFjk
dWdQp7rE6psrxvRdLS5+kbYvmztiydnV2fbhIsX5Gwv6WN8aE+7h7uaPtDhW
d2T3Vvdad2m8PtNXZO658jza4lrl1WcPt7hbd2A6j7U4XXdyd3N3evdod3I6
0sTyGpPG3jGDGqt03cvZBOQxFpQhrzHBZmIMGTvsUt4dW5jvHHiH1hK2PDYY
awocCxwKnAvsCxwKGR42BiaFDA9LQxd2Be5FHpgXOBe4Pjg0uDU4N3FmYs/E
BIobErMrdhdeaNNB+Y/gd8S1iYuD8YH1gV+Dd4SxhNcRT+B7QfxfW7W6YY/g
bFZtbaLLPqqtMDrapC2wcQe0OpQNa/TrpiMN9l3bYXVgEj0DXBWsmO9EweXA
WJE90/BaMGCwYL4p5NtCeLgx3xwik5eONGVoK+wUTJA26wtxGWKa9YmYArEF
vosjrkIaGZ6OGC+xXnCu4rjEZ/hekm+QiN8SUzYnDkysl7gucWXiUsVx0CF7
vOUVr+lbS7O/udRVjJi4MDEOYh3WaTK8WBJxIGR4sWDKFrsmzkwdq7Y2qJtM
mfI83eryzvkv1WksiBsRGydmRlyLOFGxpXD1QPr6QlyKbwTpE3E2cPZw/2JN
xNmQ4cWu8gn6fokxwldojMyJi5k9drrCDYsLUKY0cStiZuhs0dqkLWTapk3a
oo3iFeF13R986w3uEhZTjKNYx7ObDC9WEs4Ltg2uEG4QD8sKY0gGA0ZHGmyh
GFZnImchsahwp3CNvuPl22V4ODbflSIzZ+Dc4OzMJbi4OTh6uDd4Vlhkcwwe
D0YWVhZOEXYRTlEb1A0XCU8Iyw2//e2mCycK0ygP3A2sDswM7Ay81l6D+oYb
fBjsjJh5sfIwNHCmcLcwb7BvcHnmoLkHC3hc05GmDrpzcL/ywODC3foGjm/h
SIPThQlevj2DtvIPeDZnyTlxCM6U1jpnLGcra56+0gZ16zMYQn2mr2AFrTFw
f+u1tQdvjbA2zI6VafdHaxI8rTgrsVjiqMUJw9zC3voGm2+xiaEhw/sWnLXQ
GDE2rInyGsPGrjLgdOWh61tyyoKL9o05ZYp5NkaMDbHM0mCnxUnQsfbMidOw
BhkrsI++c2XMwFzCVcLNwjXj9YFnJ6MLOysORB5nd3WqyxneO+CPMaa8G5hO
ZSoLVnqd5p8yhqyVxhAc7MptbOGNOWON7LBWxrJtrFp7xKaKS7MG8QHYw+xd
/Cj8NV+G/R2Uv+Qbebdf7wsTCxsLww/L/8mkHx/5saFjQpPkm8uZr688dMXC
+K6A7waIIxdbLg+dPVpZ3wp/YuiFyTt/6Nt9yfBwC9/pS4aHZTiur+8e+AaX
b3GJgROXJG7Jd/6+1peONN8S+25fZcgL5wB3AOfhG1++9SW+R+zPZwaFDzmp
r+/swYTAhpDx24sBoqutJ/T1XT5tVhbsiG+OKZOfVR3KhvP4Xl9tUDesBTyK
uj49KLwFn6w8dMUdndJkeHXCbZzcF2Zi4VaGvGIqlA1nAosCU8BPzCfMDwyj
DKsMFwE7AVMB1wAjQYaHa/Dujlb/pN6hvHzJMNHK4EPmS/aNEd8agVGBVeFD
5kvml4Zl4PPl++WfPiBt++yg/MtwFupUF9zElU2Gh6WAmSDDw2n45oRvT/hu
gW8ZwPTA8cB5wG3AzcDS8Ivzo5/a+sCzk8EFyUN3hdZGbRHj9btWFj87zIgy
8fzsMCZk8CKfj+6Bg8KDwJDAksB5wIrg1aHsOTK6YrzowvRoo7bx9Z/cxpSx
5B1657A2i7ax4Bt2vtNxSGSH9sWzP685KNm/0gdP2nfCf6Gvb8759twJbd74
Rh7ZiW3eSGOfdF6h4xss8AT2bN/nmKu9Z3Pw+DZvvftvtHmpLhge2B113hn+
jtCexmTornHJ8Hv1FUPFfrl6yt87/29O2k2h3cLvHrp1XDFYYq8+1Jftxrfi
9u3LhnPjuDAIsAcf6Atz/4K2Dpi3yqIjTZm3h78t9GFrSF/fLNQGde/TF3bJ
nmGvmKe1XR66nkFebdIWZcBEmWPmFqyEmL2527rz3bYOmecntXn4fPL+177Z
5o1ASDK8uTQ1KRne2kj3udBX+srTJ61r65i1yncGZn9bYaa+Ffej1iZtMUbY
mGd/m2CmbM/42d8mmCkZ7Lo10NoHw66uZ51r+qoTL6ZDLAeZOKY+a80Xwx/W
5v1oUmu8MTBv6wPPbn3x7Na677dxPN3W4R+2cbxAW7dPbv2oLM/o2ZQpLkqs
1OHhj+irbmPeWNcGadqkLXTEUMlD98i++so3b6z5+uyVbc+yV/H9n9bmnLlm
TYKrgZOBgYGFgUuDXXuizSPz6WN5RfsNCq8Gk8ZuAMMGy0YXbu7xNg/wcHLs
kmR42Dk2SjLxX76dqkzz0zdNfNvEdy59C5Ou2AE2aXnUxVYBU6dOY9bYFWNw
f2uDtvnmorbt28a1tAdavxzexqFxdmTrV/xU24PtzZ8Y1Pg7vL1n41AemG/Y
b5h72Hs2VrZW39X0bvBs574jRLZfm6dwhdr80dYmbSHTh/v3/+vbo9q469u4
MuaMvWEb92ySYm+ssWyVMCFwG75DDBvAD8CvAJMAm+AM4p1/op1N6Dw8VWcU
efkM5KEL2yAv3wRchDLgP5xlxPy+fFQE57F3S1u8lSEvmbz8FjAVyoARmRM3
6NuBcAtwCPzofOt42AQ+dTK2LGPAu2fTglOBQ/EdRN9F9KywKr6T6JnhAY5K
274yKDyENHno0pltq+3LVsJmqyxt0hZlqpufGs5BG5ShjdqmbGl82TAQdNhQ
jh5UnSu3NDgfmAo65o493V5uDh3W5ulzbd0zb+1Lz7R1RpyL2Jcb2jotBmXH
tm7bC/Dva+v8TW2d36Wtw7e3fcLafkfbV9iw2SJ9Y5hte/e27ku7q63bc+J4
fbtW3l3bvnBH09k3efcZVF7xV75dSrZXqxvO7Na2j3ylrYtdW7dg1mDXfKfT
d9acfcjwzkAwe9YYawvcnTOW2G5nHmcvZx7Yute0sxBeHrpkR7d9YNT2XWcM
Z6CV2tmDbca3i8RksdFoK2zcLW3f8i4Obeu6d6LvxRVd3/ZRMT/ifGDqrmv7
tH3Pd4TFoeHthb7bSoa3D/qGK5k+koeuvrOmOQeIcbXWWWOsLb4Zbe1xToD1
FSMrLhZ/YFvnyQ5uOtKUIY5HbI9v3vourLZrs7Z6BjE+dKT5Tqy1VEyWWCxr
qjgScS1igsQGuROLKxFn5K6MpyONTByMNc9aJ65IXjK8Mnzv1rdv3bHFQ4lB
EoskzlwsFZm4Jd+tpYvXRm0jc5cSBy1u2p1qy1bG7JivmZoDxuLeg5ob/w94
Erqf
           "]], 
          Polygon3DBox[CompressedData["
1:eJwlkDsvQ2EYgN+jTk8aSj5CSMRlsojBIli0BiXpYjKKy+RgKInEjyANKoaK
1S4RjaTtcQkWsXaRKIm6U9KI4JF3eE6+93lv3/naxudGZstEpAlsSPJ5s0T2
akQKJO4h6hf5xuVwGZ9IFlKwD7tGc8O1Il45ObjEOfTFcDPELhzjfLgJ3AHz
LM53zIuQG4JV3C9zDqGbezTjepnfA5v0fuL76N3AJ+AcZzPDxeX9OvuBeTFy
8xBwNP+KSxJvQYej9yrhTonPoJPeL2Zf4NbZlYA8NdcQN/oW7exo5F0a4BZX
QW4J9845yPmZmjh3HiCfxf0QX8EY7oZ5UfYGqLPoKbLzAxaofaHGs/Td0///
4ujsSupakK0QpjYEntE3GyW3wsxl2DF690FckP8ocT7hP6bJufBE3yPkjO5f
pK5g61umqeunJgRHuCIuhasjrodqqII1o7kueqeIJ2Hb6K4w7g8l0FCP
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[CompressedData["
1:eJxN3HXYrUX1N/D9HOLZ994PcfZ+6IYDHDqlwyBUQBTs+ik2SlhgIJiU2CIq
ipSACKIgKkipSBs0Spd0d7/fj2vO5fvHuvbaa9bMrIl77rlnfdcst8seO+0+
o9fr9eft9ebO70emer0Ph5Yc9HpLhQ4O/3Tkz4S2z/+v5P9TvZJtnf/z5/8t
4W8NHdv1equNer2bwi+RQk8b93qTSb+5Vzo/Tfrzw17vxl7pfCv/+9H/Q/jl
o//t6C+e9N/l/+9D+/Z7vSfy/4Ze5Tkw+ssNK02eryV9r9hwePifhP402evt
nvoeDf+YMpN2fuj48CeEFor+pYPifxFaMv8fn9nrHRl+lPr3Sf1Pz6y0RfP/
i2MJvd6p+Vk6/w/M/0HqPy3/f6uvkv+alHdi+F+GVs3/D6b+FSZ6vY2iv+V0
r/edpP+sV3XcGPuOyP+jwh8dui///y/6D4V/ODRf0l41Kn7l5L809R0c2RG9
KuOa6P8h/38e/rjQpP6JvceEn47+F6L/80GVTfZo9J+cWboLJ33fpM8clu2n
h/ZM/l7+/6ZXbXxH/j+T/L/uleyN+f/2/D8s/A9DR6S89w6K/1HopPyfe1Rl
LZvyD0n5O+b/k/m/Wv5fm/8fHpTuj0OnRf81oxqbVZJ+edI/nfY/nv9PhNaO
7n/6Nb9ek/STkv6hpD/SqzFdIum/CR3bqz7oRfeh/P9V2FNC2+T/jYMai5NC
6+T/W5J/2YzHhilvi4zHszMrbfH8/3LKvzv6J/eqjC2jv89U2aINGybtC4Oa
Wz8NXRT7X5hZdS2Z/F9L/rdG/8FejeG80b0kdHFo8ZS1RGijYaWvGP35Uv/X
BzWmxvLa0DfCHxK6Lvy/Qt8O/63Q9eFvmCz+m6F/T5YMLw9dsu8Oao6ZWzeF
Php+19Dp4X83WWWrU13qOCD8/qErwl8ZOnBQMvxVoYMGJcNfHfqp9ofuCX9v
6MfG0ziFvyv0/fDfC90c/pbQRwY15sb6t5OV9/DQ3ZNVhrw/DN05WWVIU6ay
6ChLm7RFmR8bVJu05feT9Yx6Vj1Dd+T/zKwJl4V/bWQLpH+3iu4qGe+35v+N
0X1n/r/DMxjdI0M/G9Qz6Nm7n2xQMvwDoaMGJcM/OFlzxFwxRzbqV1meCc+C
Mm8Lf2voZUnbIHT7oGT4DUPvGpQN6j5qssZGH+kbY/T+8O8zh8OfEtplUM+Y
Z+tk60P4d3umwx8Tes+gZPhjJ6ufPVubxsabxqWrTnXJ84FB1aHsX09WXepQ
tjo/OCgdab8JfWhQMvypoa+Mqw+0fePQoYMac2N9a+iw8D/Q5vC3hzbNGGwS
2jDPxUahzcNvFto2/KsbLZXx2WBGpe06Ve8c75qlQxeM61nxzLyUsd1IWaGV
orNyaJ/ofJ5e6rpwst5V1ghrg3eWOhdP+S+bUbb8O2X8K7R55FtMFX9daLOp
kq0Sndmhm/Oc3hJaI/zqoUfCPxpac7pk+MeGVffnQn+dLBtmp4xFUt/6qW/j
6Sr72tCmU1UHmTawne41Sbs6tHH4TaZKlwwvj77Ux/pWn+7b1iBrz8WhL4bf
zzoT/tLQJ8N/InR2+HNCnw7/qdC54c+bLJ6ONDK6Hw+dNVl5vhp+s9j+j/D/
nKy0PUN/nCwda8XXQpdP1pqBl4cumbwLzqh3lDLk3SN05mSVsdugnmHP7h9C
XxpUG9h+medrUDL838y3Qcnwf5+stuoDbddmff/Z0PmTNQafCb936M/h/zJZ
aWR4OrsPygZ1nzFZuvYM9gryfGeq9jbPhnbWtnHNeXN9k9B/rFX6KPzmoeMG
9Y71bn0sdEL440OPh38i9MvwJ4aeCv/0ZPG/CD05WTK8PHTJTgq/Rfrv2fDP
hc7M/zNC/dTV9atsdapLHUcPao2yNj1kTRiUDP+wNWFQMvwj1kxrZ2ielDVv
6HRrT2iu8HOHTgt/amgi/IzQWcY+NAg/7Fdeeegqg232IPYebFSWMuRV5hZt
H/LMZLXp5EG1Uduet+YMSoZ/YbLelReFFuvXOxN/YWjRfsn2G9e+Zf7wC4Qu
8OyFFg6/SOhP4c8LzQw/Cv3FXAiNw0/3i6cjjezsQbVR26ZC2w5rf2G/Nf90
lXVuaMF+lXnOoPLQna9ftthLHd8rm9hij2lvySZ7RnvHE5O+Qv7/I2l/Dy0T
ftnQ38z10FLhl+4Xb09qL0p2uWcrtFz45fuVVx66ypCmTGXR0Vf6RF/oM2Nn
Dpk7xvCuQc1hc3eLfo21PZS9kzH/dfhTQi9mLF4K/Sv8daHVk7ZG6J5B7ZHs
jV4eundQMvwrQvcNSoZ/Zehpcz+0U/idQ9eH/3dozfBrhZ4M/8r0z+vDv6Ff
umR4eW4YVB66a/crL5vYogy2XRtarV823hL+5tB64dfv17uYDO+d7Nm9I7Rp
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
98wJc8Ec/Nqw8szfvoPo6iN9I4++O2BY5+T60FjqU31pTD8wVX2ur8eD8jk5
C3EmMj2ouUqGN2f3H1ad6vLt9cKwfHp8ed8OnRHdZZL/zuQ/L/9n8YeFzg5/
Tmj98OuFLg9/RVf8uqF/diXbop3L3hL+1tDLpioP3Su70l0n9I+u8mwwVTrS
rgqtHn610MXhLwmtFX7N0GXh/9ZV3rVDf++qjF95FmPvNbH3Lfm/ZTsnVvdt
oTPTtjNCW9s7hc4K/8fQtuFfHTov/Lmh7cJvH/rTsGT4HUJ/HpYM/7qudM8J
vbarPGtMlc1svTR0cuwZx54rY88r8/8P0f196FWeva7ynh16TVdlsIWNbGMT
W+Why+bfhT899PLwrwhdHP6i0BvN/a76hg3q1kdnp/7lUv/dvTqn3jppW4Xu
Cn93V/yrQv/pSoZ/ZejOrmT4V4Tu6Eq2zVSVIe89oe8Ma820Vi5hjxv+e9as
8EuHfhD+UGtG+GW7SvuuNaMrnVPD/ya0WfjNQ6cNS4bfIvTbYcnwW3blD+CL
4Ae4vqszeefsN4W/uSve2fuNXcnOGVcfaLtz+c3bOT5dc1JfqkPZ+lReZ/k3
dFWGunaeUX4GdeLPG5dfgAx/7rjO/cnw6lQX2YyUPRF6p71Mv9quz/SVPrhk
WGNo7N7c1VheGNq5qzE1t/+TsburV3N8lal6FskuNP9HGZtePaOeVbYb63t6
1YbzvduNfej1+b9i9K/o1Zw0N+11vIv+0qs9z6KjOmvxjrIuPW4tmkg9+b/W
dJ7NUdliTunXl09VXfeGbk/5i07Vt9ftfND5v/Go0laI/p+sRfl/Xf4vkv+n
6LeUf22vZB+wBgzr2SV7d/7fO6yznutDn+vq7MLZiTMhZxgrjaptnnnP/jJT
Vbc+OcMcSvoDzV/rveHb7f5eyXzDvSb/7+uV7BHPz6iwD74h7ePNfW3UNs+A
vbW+Or9Xe2zfIr4Vzu7VN4mx5oPnezfm3m2XeNf36h1nr3Zxr2T2bM7W+fr5
wJ2x+9Y3Z8wV3/x/HdYYGrs3dDU3Lgjt1NUcwdORRvaXYa1R1qYdu9pLXcjX
3as9lXcHWy7r1TvEs/k3c6tXz6i9m738Bb3aw82X/vhjr76JfAf5djyzVzLf
kM7OnKWQOUPz7acvzunVN+BoVLwzL2df1jproTlpzfvosOpi44PR/8mwbPmH
PEn/tf1Rr+bspvn/i/z/Z69k61tjRjUWvkF8ixw2rDXHWrNcV3PO3DPG9+qf
/P9z6L7w93uHRPey0NvDv8M7RP2eV2Pd1d7MnDQX7dH+Ff660AfDf6grP+NN
od3D79GVz5EMvyf7xzXPPxZ+t67ymvPmujJuHVYeuh/vqm42sYUNbLs09Lau
bLwm/NWh9xmrrtJ2SPve2pUOvyZf51fDf60rfsekf6UrmeeZ33P/8Ad0xctD
l+zG8DeEdjU2oefCPxv6Rvhvhm4bls1s/URXtlwV2qUrm/C+YXy7kO3Qnkvv
YjbeMawzXGe3nwo9OSxMECzQQdbYYfWxvv1wV7ZcH/pIVzbxu/Idnx/+r6Gz
UvYfjamxNeZJWzZ0Zvg/dpV2ZuhPXelIs0ZYG+hIs27a29Cxt1k+dFZXexy8
MpVFtuJU7YHsfc4N/WFc3/y+9U8OLZy0hUKnGPuu+Dfog65keHnokjn7seey
13IGtGP0Xxd6MvxTXc0da6Uzb3NoiaQtHvpt+NO76ht9pq/00ZJTpSPtd13p
LhY6ras8i0yVjWz7TVdp1mxrNZ2lwy8V+r22dcUrU1lkp8ae34S+FP7LbBzW
GBq7g7uaK8+EDulqzpwU/pehDcJvGDo+/HGhdcKv21XaiaGXdaXzq/AnhzYK
v3FXewNrgGffHuGUYelI26Srsn4eWrurMn8U/oeh5Y1lV2WxQd3KPGFYNqh7
va7qtqZYS9jw42GVIe+srsqyplhLlGlsdgg90dUY4bcPPd6VDL9d6LGuZPjX
hh7tSnZsyjomtGb4tbpai6xR1iZrEjwFbMVD4R/uau+7auiirvbAf43u+aEH
wj/YFW9Ns5aRqcs7zbtMnT8d1ppqLV05dPiw2qhtK4aOGJaOtNmh/4S/M/Tp
8HuF7gl/d+gz4T/LxmG9k72LPx+6a1h56O7N5vAPhfYL/8Wu8tKRpgxzZ7EZ
hQE0h8yVp0Nf72rO4M0pc4nM2mXOmWvWMLZZQ6wdbFxlVHsDZSr7/mHZyLZ9
9FH4B0JfCL9v6KjwR4ZW1behnw2rD7R9la7mkjEyNuaUsdouZa/R1ZhpmzKV
pY3SZs6odxIdZStTWepQN5vYwgaYEWuYteuCrsbWns5ezhgfPSwb2ba6Z8Ke
a7qe2UXad5FvJ/tQuBx7MpgW67i1HYZpDq4PLgj+59K23zi2YYyOaTghafAU
l7X9yalzMFUNtwRbdHTDOcEcwRU5I3YuPHNU56pHtTx06Rzz/+GU1AGXBPsE
QwYndSLMxGThmuCeTm04pd2aLb9tGCjYp5vHhRODq7rFmSe/RfrgG6Edo/v6
0LfDf8saG36nQZV9wmRhptTxUvPbwj3ATvxysmxQN+wVnBQsFUwaXMsdqWOB
GdUnZzTb6EhjI4yVNmkL7Je8ZHhl8MHzxcNUwFbwyfDN8MnxC/H33NX27/yL
/I14e3r+JT4dfhs+Hb6d9/f/5+fhO+Jz5Xu1R7RX5Gfi64PbnGdUaW9q+1A6
eL5qe1Iy/qU72v6cv5qPnq/+hebH3rnJ8C81v6861cWPpK+Ngb7X59rA77lw
axufF5vYMu+o/Gj8ZHym/KT8aGR4vlNtJsPrCz4xfaav+NIG0/Wtoc/4x/hd
6UjjV1M33ys/GxvUpc/0lTr53djElslR+eDI8M6+dmtlKksZ6uCL66arbnPt
EO/kQc05/Ne9AwYlO6fhruCUYJnObjgrmCUymCnYKRglWKWzGo4KTweOCZbq
Nj6AcWGiYKPuDP+fcWE8YT1hKGEp8bCmMKJkcFawV3dF9+5xYcTgwuDa9mlk
P22Pf17DTKlTXeY63XMaDkue8xvuCk4LrusvDVcFs0V2UNp+oHda+O0GlQZ7
BdNGB37wirY/v6FhupSpLLiwe8e1Xtrf/73hw/7Rvj8ubG2HjYND0wcXtDLk
hSOjQ4aXF25WH+kbOEaYWjhamDvYOzaQ/aDZ9v3Y/r3Qm8K/mU74Q0NvMdcH
xdORRnbYVOlIe9ug1iJrlLXJmnRc+J9PFob0HW1NsdZe3Ku1xlyBuYe1N2fU
/d3QGwdlg7Xq+MnClFqz8MpUFhldmDZYNnnMFWuitdCcgduD04NBhguG8YX1
hTOGPTY3zClzyRzRN/pMX+kjOGE4QBhkWOQXG44LRsyaCbdnjplb94yrbHno
qkNeuEG4ZGXg2cSWQ5oN5oL3I9uMuTKVZS7AlFhjrC181f3pOsuwRvF/I37r
yelKg0uzxlpb4aJg1MjwsFIwbbBtMGFwXng60shgxmDH4NJg1eDG4Kqeii1P
j4uHtXpyXDK4MTg1uDC4LBgyMjysFswc7Bxc/lMzC5PHBnXDmj3b9u/ON+Zr
dStDXjbA7cDywCDBIsHwkOFho2DEYMXgfJ4bFw9X9szMkrENbg1mjY3wVmIr
7K/gneDKlCHv8+PC0OkDbYdth9tRp7rgsmDU4NBeiO6L4+KVIS+ZNsDOPTOu
tuH1ob4jU6bzGt8r6oJ5gnOaK2M3d2ie6TpbccYCH7V905mTtlpo1en6xvSt
6R3kXeVMybsJDgqu6cW0/6WZhdGCO4Irm4MzgyuDG4PbhvmE/YRxg2uDGYMd
g4GCQ2IbXBUcGRv1LeyeuBF9rC5YKnEC6oS7U4a8cEv6mA3Xt75niz7Vl/9u
c+C6dp5lbsA9wV7BdcGCwTzBPsGJwY5Jg72D+aKDh82D6yLDw+7BeJHBALKJ
LQ+2MvTtLb3/la1OdakDHtF+2RiJZ4AxhDWESYRNhHmcE1cDywjnAxcFAwAL
wG8NN+PcB3aKD44vjk9/jh+fbx+GAJaAj1seunBDcAVwBAvk/bvgqHTVoWx5
+P2VIS9sAgwAGR62AQ7BuZNzqflHVRYZXpliMpz1Od87stnGBnWzUVucUznH
0ibnbM7pJpJ3xqj2RNakedpeydoDOzPvdK1BdJ3tiSOSh19fH2g73IIzO2Uq
a65R+eHggvjU+NZgAOShu3Zr0wPt/FFb+ezkocuvxt92T6/OdPn7vHsP8I03
qHewvRvcI1yePRyfHd8dHxxfnDS4O5g9OnxyfHPitLpR+fD48uCqYK3owurB
BMozNV3nZ/f2Cn8lDa4PBpIOjC9cLwwrLKu5ZA6ZO+bUYm2OmVt0Xmzff+ag
tcYcVMY/29zUJ/rivl71FZ8mm9k6GBWGiww/HFWf8Gsu0/qKH1IfaPsKrU33
tvNwbeXj5Ovkt5zj1+S3hBODJftcGwN9T0eb4cyG09UXMGZsUPfUqPpOGfLq
Q2WxQd3K3KfVqS42ipERKyNGRVwKfLezUGei97Y0cTBiWujA3MHeLZy6FhkV
jhBu0Dk43B2cIWwjnBBcDjyX2Cr+vrP6hUGkIw12Z45sh6YLbyF267Fe4e1g
BGEF+QEWGxUeT5oy4cNgGNmgbrikM5oMzwaYBtgGfn1YAz57vnsYCLgH5wwr
te/mhafrDGJW+y737esb23e0MxlnM6u37/TFo7vEdNkAdwQjyDb4jedj23Oh
rn3D+5ZfJLqLThfGANYABgIWQhlrpO6JiSp7djsXYYs8q7Yy5F1suuqCdYLB
VCf+vzisYcmMDazkQqMaIxgnuCO4SdhOGHT+VzGA8J1kePFlc3ThkGAs5YFR
glWCY4KdkgZXBJNJB8YKrmqcuqZH1TZ9rq+1EQ4JLgoOCzYLzy/hXJ5MWXSk
KXNWOydzbmEM1A1HBSfFBrhOfhYYUljSC9ocMTcWH1VfwKbBoOoTvDx0yfQN
m9mqj7RJ28UDHd/aMsdPoE0wVbBVcF5wVdZwZw7btHg7abBY/C502Aq3BYfF
Zrwy5N2szSlj3ZuoucYvwM/hTMy513JNhncONG/4ebrC0cC9THYlw8PC9LuS
4eGG6M7dFeZGHj56vnp+en55aXN15fehw+/HV+pM0dkiXX4hfhl5YHZgd/j8
+f7x/ET8SGTmOBv2bXMfvuXFNO+FXvnv+fPxngl4JhgUOI9x+m56ujAD/D5i
6xacLpwBHAIcAWwIHAAZHpYFrkAeujOny3bYGD4WbcDD0vAjkS0k3mpG2QRv
A5OgDHlH02ULGZ5NizQb2Sav80lj9VKv/McwzeacubbEqGzVx/qWzTBJsElw
FXATyzkPg/eYKP84P7Jz4yXt7abLj0yGX3q6zpCdJfMD863jnRPzCZPhnR3z
QZOt1c4BrU3Orp0Jm0PmjnM/z9Ly7VzRM+W8eq7YMmOizpv5vPl9nTE7hzVG
sGcwGMZOXc7B+cDViXcu7RycTF5zyNxRhrz6QNuVoS/MIXNHn6zWziGtZdZQ
Z5rawHbn4ks3m9hyeOsDfcdmfbNOOwel6yx93SbDO4fXJrJftbay1Vm6M3s2
24uL9RDDYU8O1w3LvmTGcqlR4RzhDOG8YNv2zN5mj9AKvo1CXwr/RT5+e/dB
xSCLRRZTvMWgdMWIiw2XR1yVWC5x1GKXnmh4ED5i8VviqsRaidkSuyWmSmyV
uC6xXmKylCHvI86dp8oGdW8+KFv2gzEYlE3/ckYT2tLefFBp+8IQDErnet/c
/Mj29oOKYb0h9KpBxbbi6Ugj+1ryfjW0TfhtB2Wr2FVxY2zef6p0pL069PGp
6jN9teKg6v5CaKNB2cA2faav2MgWNrOVTepyB4DYf3U+3PpI3+gTdYulFbPG
BnFu+kjfPDou3IRnyrO0TGi3lPUxPrjoLjco/qN8boOS6eOrm//3v33f8DHO
jMSbipMUi/pA5A+OK8ZYHLGYOHFw4ortoeydxM3d1vLQfWhcunSkyaNMOtLU
pW/EhIsF10fqEpd8/7jqtAdT5zFtbyauTaybmDixcc5GyPDOSMQAivt7DFZi
XLw+0jdkyhb7fN+46lCWODpxW8o0J5Uhr7mqr8Uyi0nU5/b6xtxY2/PLCycg
5ksZzrR9W8JMOOv+fHQ/F3pZ5BsMKibf/k5M/ir5f2X+XxFaNfxqg3oWrbHW
Vs8knClcKZwqnCbeHs7ejQyOFrZ2+eiuMCpMLRl+1qhwuLDBy4ZfblS4Ylhj
mFHYURg3WDe4E7hRaXCXcKR0YH5hf+FQYW/xypB3jkw8v/bQhYllM1thSx/q
F44A7gGWFGYZLhmuATbVWgPbDFNqzYGphq2Gsd21kbswrC/S7BnFkoopfbzl
VaaylAHjCicBx/CxYeF82aBuuFZ7YTK8PbG9sDx0d2s2K1udDzRbrInWQjbp
G32mr/QRnC2cDhwKrPc1GcurQ2tkLNcMvWVGyfBrhT6bufCZ0Hrh1x+U7lWh
1QeVR9reoXUHpSPNHDE36HwyaZ/gcw+/8qDmzn/n1KDm0KemSkfa7EHNPXWq
yxyU1xplbVIGPLa7GIwhPLW69wqtMygb+JacETgb4GOCYYezgfNYZlRziwxv
jsEc6xN9AZeuTLhlmG91KdudFO6iUIc0uGUYcTpwzMqQF47c2T8fAd8AH4Bv
Iu8s7yrfSvLKQ3cOztycN9c9E2IcnUE5e3J3gLMlZ1bOqpwxiTEUaygGUSwi
3Bec1yzfQtOF4YHlgZtYfrowPmT4FaYrDRYI7okOzJgy5F1pujAWsBYwK7Ar
MCFkeFhjGBIyPJwGnAkZHnaDLepU16zmX4T9mm+i/Ln8mHyrq47KNwtnAFew
XMNNiMGZE/cjTgcvFkgMEJk4GXE24nzE/ojpkYeu2B74li519ScKfyMGaE7c
j1gjMT9if9YeFZZCDJG4ITE7YneObnnokvGfrhe98UTF84hBEosE57XWqPps
raRPTlRfwkzBTsHkwebhYT3h8sjgdGB7+Lz5teFgyPB83TBCsEIwPrA+dGGD
+K3lga8ZTFQb4XdgaJQhL187vzZsDB87P7a8cEN83srgg+dH54fma+cDl4fu
/U1mrKYmSldMkj7X12Kv9ClcEdyOvoY5hcOCMYMjg0uFU4XTgk2FOyXDw7rC
oJLh4WLhVMnwcLEwsMpUFmwaDCsdaX9ufaqv552ovoarlYcubBvbzElzkY07
NB1pxgBGV5nKgnX7b7xWyhpN1Fw4ro2xsTVHxKSZM+bK+tOFsYG1WT1pa4wK
cwBnIA5LbJY02Gf3HtERoyUua23PwXRhWuShO9H6VN0zJ6qvxXjJQ3fd6cLF
wDbBVMP5wDWQ4WF/1E2GZ8OhrQx515uuZw7OYM32LMJgsUHdYs0ebPsWd64c
3tZga/HrRvUusB9YObatNFHvA2u2tfvTbd2d1fbNr43+dqOqc113QEyULcrY
WDzyxP/Kto7vMKo67GnsbdwB4y4Y31xwtMtO17fYSm1fuv2o8vgWEOctTts3
gbkMGwJTMQc3AluxRsM1wJ8tMFEYVHg1GCq4KRgnuCQ8LBWcExkeFguuiezX
LQ9dWCZrgNg+mAprg7UL7gkuzBqGh4WCESOD2bDmWevcIwL/tXBsWWii8FEw
VOpQNuyUss259RtuQ1uUsXq7d4SOvNMTlddaKPZQnKM1EUYPzgUGBhYGD/sC
Y0WGh5uBmSMzB4yVPvpma7vYM5gufSCGUCyhmExxknB+6lA27I26xTWKo2QD
Xh66ZDCB8tCF7TIGZHhjs1qbU3u1fQQckDXJWgT74l0BKwSn453Bt+OOFphH
Ph53taw8XRhKuEkYM1gzODw4Ozh6uCdxAmIL8HAycP9keNgZOGkymHfYdzEG
4gjEEyyWvll0ouIFpClTWXR6qfulcd0p4G6BiemS4d2z4L4FsaNiSGdMlx+M
L03Mu9h38cGwG3yW/JMvND+bNHcJuH/ghoZPcvbNh/BfX8Kw4ordaeNuGzaK
d+g3P4M0ZfOL8Uu5U8HdCi82P9ycstnE5jm2uq+Br4yPbZ7mU1PGUy1NTIY4
iw0zFhuNihc3scGoZHg4czhvMjbBHMEasdW+1V73wbbPhZmEnYRhgmUSb7HE
RN3ZA58vXkPfu1MH3mm9ti6KmRU76xnxrMBJLtxk1lJr0HptzbX2itEVq7tu
k+GVARPlWfKO9zzzGQ7zf+0Z5UuE+WQj22DpYETJ8OI04LBgScVMiJ1gIxme
7eaMOTVnLtFVhrzywGLpU30JkwUnCle6rrV0VPcFuUvImgEvimBH3SEkDQ9n
6k4kMhhTZci7/qjKglWF81em+z186y3UzjZ8Z/oWdyeLe1gebt/B7uly19d0
O2cTdyD2wprlGfNsWcs8a/Zw9m6euYXaOSFdsRwPtO9Wa7t3DPyksyxn6Eu0
M3Nn53Byx7Y8zu6cAS7UzhidNYq5E1c3aueIYkbEQYzbuSCejTNbHrp04Fph
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
           "]], 
          Polygon3DBox[CompressedData["
1:eJwlkU8rBHEYxx/E7s5M1s4qf9qL8mdKSlFqZ7eNTYMkbciJUsbJ7htQLi4o
WTmsHLwC5WBTjBxwVN6AdVlRiou4KD7bc/jUM9/neb7P83uma6WQy9eLSAIa
4ToiEsCwLZIjMdJKHBYZgt+YyCjaX1wkZIpkiXeJV8n54KCNox2i7fNdhAZL
ZBatjFbC9wjihogNE8xYIJdhxjK1S7V6W32b0G6oyRBv0hsl1wIRCMNPTHPf
5CohkSf4QkujvaOlmONCD37TaAn8dujbBsvWPU20eeJF4iQ4dfQzs8I7Zvg+
w2cdjzy8wSukqZ8jl6K3jNc5tKF5aM1oJUN32KC3yk4v0GvpLQO0WzzuoJue
SbT+2hu4+zM+F6buekrdGDVZ8Cydd4/2wfcnHEARBmy97SBzfUtv+UhdBzt0
QtXQ/7WFlsTfhT1mTKFF4YG57fgUqHNr+8Mx2iU7r6H74Nh6iz5meKa+8wS/
K7wC+AePVUHz
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwt1neQVdUdB/C7qxMd8+7b7OaRkWhGBceMOBqKRlATWkDAQpW2FFkEAZEu
CFKlLUtZOriUpUszVEFRUIwMtgQ1Yx1xNJLESEaNRkcMJvmcOfePN/ez3/3d
c8tp96qKkV1GFCdJct7vgvCrkyQbBfeWJslKx0FFSdLHcYVfBfd2nJFPki38
+U/U8OOcqG+eJsl4/rQkST7MJcnNvJobyMfy2/yfQpKs08aV6p/kebxNfko7
U9U0kQ/njfyB9nvwen6Z/8eHuLOaVryGD8kv5RW8iJ/nJ7iems/4ALfia13j
Wd7kegV+uig+41tq9nJjvp5XhxrtHHH/A3mk2v+6z/XOa6TmbTXT5Lfwd/K1
8hL+N6/hH5z7aD4+77f8CI/hL3hVPr6fi9Un2p3NvXix/CEu4jrySh7CeZ7L
A/i4msncgAfzSD6tzS9dt8Z1z/I5+Sx5FzVneAa3DtfSp7VqWvKD8lHyM+rP
8qPcQb6bJ3JdPsKPcH3eyg9zGffkB/kN5zbSp+PCPYR3Kd/NV6ipn8bnPSXf
5h3+iit4k/uc4x6G8j/lzeQ9yrTj7wW8j1fLb+By2TPcmCfwQW7Eo3iPdiq1
s5R38Fyeyq+ruUnNfC72vBuK4zi53N/z5Lu0f517axXGM7fgNtyff8bNw9jm
DzzLPm7m3CvzcfyHedCBH+BKNTfxEJ7LX/FM3sAXudYc3sr5NPbRUdnL7u1G
nsWn1U/nNWoOpbF/W3qfr3IVL3Otv6pvyrXqN6axTxurqUhjv1zAZ9QM5VVq
mqZx/HzM5+TDeSfflca++4pr5ddzN56Qxrn2U+28IG9SFN9jf/c2gue5t/28
iy/1Hg7wpHBv8gVpHFf1nfuSfEq4B/l6nsCLeRyPDn3B72j/19yd5+XjmFnI
9Uvi844sjXMyzM1Zjpv9nuPZjuP072OOVerHZ+N8AY/h1cWxL0bzquLYF0ka
x+c+bdcUYrt7w3ULcfzX8sZCvMbh0He52Kdb1Z/lYbyeJ2ZzuVrN9Gy9Wskf
a7+PmkGe/VPuy8P5Ne4VxjPPytaKGvXvy8vl/eTlaXyHCS/3/4U83nFytoYs
Vd82je/wi5I4DsL7Gee4vBDX5J1q3uAlxXE8jCrEtubIhxbiOdPCOExjPz6l
na7y6jDv5AN5KU/kQfpig5p3tNNTvlg+oiyOgzAeyh37ZtcaK19UiHNqS5g7
2RwMfdqaq7gXd+RFYc/gdryA+/EdvJAHcMtszQ9zv04a16IX3Wcb+Xx5ufzN
7D7DvLg8jWPp1ZK4fjQMa6bjCXlP7qRmL98T1nk+zN25PS/kTnwdP8x38WU8
mu/kAv8xez9lPEfeUX4138238/dhb8reTz3537Kxd4JPZs/1pZpm6n+n/h/8
SvYeitQMlHeQ/5jb+l91mBfGfNOSOAamcAOeH8YD91Hfni9U31y+KMwLeed8
nNevhHU7mxfv8u3q28q/Vvu1MXxLWOv4Yvlv+Bgfyfroaf5eza3y/dw6H8f8
Me3cwPeHdYN/yYN5M79fiOvfOr4tH9ecw3whD+AZ/FE2B/fxD67bXz6Wv+V7
eRL/uRC/ISq5LB/31mquy/eFNZZ/ob4Fv+7ensvGw2tcIv+t/AQ35tb8F/5D
NsY+5KvlLcN4DnsNdw17tDbXcBduwt3SuMedU3PSdX/P13q3RfLbuKext0u+
k0vlw+R38GD57DSu21dp52bnH+PJYW3Mxe+iIbIX07jXdFRzWXjvfL+aTtpc
F8a5/HguPu94/28vXxv2CHk1b+PzXC/sfzzCuTfKH+Md8nW8nS+Sb+EdnA97
dy72xQDnvZnGsdRdfama5WFt5/fSuM/25Ur5Vv6Gf+Scw+HZtXOJfBlPl3+j
fjGP4WVp/E5owJ+ncQw/wHc69zhXObcmjftgI/l32nkyzE3539M4hu+Tn+el
PJG7OvcFXqLmHnk7rvCeR6VxTylVc6t2angvT03jd9fPuaFzj/JDzm3Dz/NM
vkb9Kl6r5l98MKwD8it4Ja+QD03jd9QlvCeN+3UL/kTN/mD1f+I93JD7cW0Y
k2pO5eK8mOmaY+Wb+BP5Me30COPc/e/gbmHd5qNp/JZrp2Z7Gr/3moW5wL3D
ew77Zi7Okd7anCa/m4fJU38/xf3DN2cuzs0q2Uu5+E0yhZer7xz2UPWnc/Gb
ZIl8knvbzJ+51v8BxxeYVQ==
           "]], 
          Polygon3DBox[CompressedData["
1:eJxN3HW8dVXxP/C7H7Hv2efc47EDwfqaiICABVIKSqhId5d0d3c3Ag/d3SEi
KQqKKILdoCAqStjK7/NmFi9/f8zrzp01a61Zs9deZ++Zz+y51tvq81vOmpqa
etlLpqbmyN/NR1NTm4X+OJia+lNoicnU1PpRWLSbmnpz/r9uODV1behF4ecI
bZv2ddK+Rdo/109NfSb/LxP6dNqWRuE3TvtSaf/UoNrI8HTuy1j3ht4Y/k2h
JSc1p7neEroqbV/qavx/TE9NPRN6OnRJ5JeGzgmdHXoysj+HDslcn5yUDt3z
hyXDPxu6MP9fEPpr+L9N1xjG+mf4f03XWGeF/jRdYxpr7fT/SFdjfi+++W5o
7ax1ndCDo5Lh1+1rjmfauJeFzgudG/pLZE9N17x0tF3e2qyB7XT+FP6PoSX4
YlDXYtPQHwZ1TZ4clo62pUL/Ynvoi+FXCj0X/r+hVcOvFvpS+m4RejL8n0Nb
jkqG/0toq1HJ8E+Fth6VDP90aPvw24X+Gv5vrnf4bULPhH92UHP9J7TKoObU
Zgx96bB9k9ATg1qDa/j30JXDurb/HtYa2L7yoMYiwxvzsFm1J+yFOdnMV6HP
hP9s6ISMfXzoLfH9nH357g+hxQflw7vTdnLG+HzavtDXNXcN+P6K0BGzas/a
q8sMyjY62tj4+9DjoUXT9kk+GpYN5l429Fj434U+EX6RQdlmTGOxkS1PhBYb
lE1PtDGNRXZS7Dsx9NbYNlfoa+FvDS3jXuprr9rDzza77wp/Z2iSvq8O3Rzd
m0JLRnep0PXDukfdmy8eVNuNoSX60vl62u4OvSZtrw3dkbbbQ8umbbm+dG8I
Ld5Xn+vDXxf6ZPjF+pr7jtCrBmXDbeG/FhqFnwndGP6G0EvCv3RQbbeGhoPS
uX1YfeiOB3XvfzP0hkGdAbeE/0poOvwgdFfmvjO0fOZeoa8947o8F19Mpf2r
w+pDtx9U35tDrxzUGM6qa0KzBnVm4a8OdYOS3Z+xvx1aPWOvEfpW+PtCq4Zf
ra82Mjydk0d1zVyrufuy/Ruh1w9qDfcMy8d8+7pBtZHh6VzR7vv/xP7/Tpcv
+YQv+HTz7MXNQj8O/5NBrVUfutb8QOb+TmjNzL1W6KS0nRj6TdoemS7+hNCv
p0u2eMZaLPSyjPXyQV3r20Kf7euaa1s3+/XjXenoe3zoV9M1xi3R/UroU9H9
dF/nlrPNWfnv0EXDOlP/1u5rZ+eZzrDpOkMvHpaONvf+NzPWN0IrZayV+7LF
nrfX2cT394ZW6esaHJe+x4Z+kb6/nC7byPBstNfseXvdnrNX7Gl72Z45NW1f
do9G97Hp2hs3hV4xqD1y2rB0tD0eOn1YMvzvQ6eEPzn0aPjfTpfv7Rl7xTWw
1jOcOdO15q+Oymd8tXRfvnOPujf5kC3GNBabZg9rTnM90c4lPuZbe8TZuXHo
94M6Q3cKv2PoH+H/Gdoo/Iahx8I/7sx0dlpT+p4WWslvgznDfzl0TPijQz8N
/7PQUrn+G+b6L57r/6H0XzT/r5n/F8z/P5+usYyh76nNJrZd286ZbUJbu2ft
ldA64dcOXew3OrRG+NWdYeEvCK07LB1tl4bWHJaOtgtDn3CeZO5zYsNZseVn
bA19MLbNG1prWH3oXjRdbT8JzTMonU9Nak3WMl/oh2n7Qei94d8X+tGwZPj3
h74T/v7Q3OHfFvrWsH5z/Na8dVBt3w7NNSidHw9rDH0/EPqVvRhaMPxCg+J/
EfrwoGSfnpRNbJnfb+SwrpFrc/p06f48tMCg+vzGvRtaOPxHBrU2c5rLGlcb
1hj6zp4uX/MJX/D5tu2auBZfDW03LBn+1tA+4fcOfSv8t0O7ht8ldFf4u0M7
ht8hdFv426erbefQndOlo21712i6dHYPv5szL/w9ob3C7xm6N/x909VmDmPT
eWXugfVyfU+Ijx+c1F48yjWcrj15UOSrh+aPzjfz/x7DmsPY35iuseloMwfb
dgrdMV02WhsbzG2N+w5rzdZ6/3TdCyu6p6frnjgw/AGh73q2c8bEx0dk7uMz
x9ax72DzhR5M2/eni9eHLhlf8DHf8omx9g89MF1jrh9+Pfe0ezu037BsYst3
pkv+wcx3YOY7O/MdkbbD7dHIfzRd/GH28HTJjhyWjrYfhw4Nf0joofAPT5cv
6WjjU23WwHY6zhJnhrPCmWJv2/P2uj2+ZfgvhW6M7k2ho6N7VOj1uW5v6OtZ
67jQm/t65joy/BGh14Z/XeiQ8AeHxuFfFTp0VDL8pK++x4be1NcYx4xqDmO/
sa82MjydZ2LL06HlYtvynjmHJcOvENo9uruFXhzdl4QOCL9/qA8/DB0U/sDQ
KPxM6LBR2cSWV4f2GNUY+r60r7UcHnpNX2vaeVRnrrP2X/yTa/Ql51L4n4d2
GNUzsmfjvw+qbYvQTwelYw9tFfrFoPYW3hj6kq2dvmuFfhX+16F/ZG1/D30h
/Iqhdb1bhH4T/pFBnf3mNJffgPXDrxd6NPxvB8XrQ5dsg1HpaPvdoMYyp7mM
aa18whfWzJe7huboy6e7jMoH1v7v0F+HdQ34/nOhTcJvHLo6e+Wa6eI3Cl01
XbKpUb2TeBdZPbRs1v7Z0Brh1xwUv2n2/tJdyfTdMHTldI2xWfhNQ9eGvy60
+bBk+Ouna69uEbphuvbsVsPaw/buzdM11gahK6ZrzEeGdcY6Wz86qL7GNJYx
9o29+4zqnJoO7TcqGX4Q2iv8nqGXhX95X3uNjjZ77tFhzWHsj7kmw5LhPz6o
dwUyvHeGvw3Lp3z5+UFdezK8PfCQezf0f+HfPai1OFOcJdak7cHQuwal8z1n
Wegd4d8Z2ntUNrP1FX21PRB6+6B0rMU9YO9bk3vFPeTecc8Y25jGMsfDw7KJ
Le8Z1Dut99Ybcx1vmtQzqmdVz2SezbwPbNnVO7zn9V9m7F+EtsrYW4d+7ywK
7RJ+1774x+y5vmR0fx7asq8+O2SODbJfts14u/XV9rPQl/rS2S7t66V9q7Rv
lP8fStv33SPh1++L987uXZ3s4VHpaNsg9INRyfAbel7LWDtmzN2dFaFfjWoN
bN+mL1t/54zoy+aFZ/IcEPpJ+J+G3hv+PaFveFcIvW+mZPh77aHwLwvNDn9G
X3NZo7WZ86Vpe0notPCnh349KhvMvW1fc//WM2FfNuAfdUb0JcM/4ozqS/ab
UY2h73ah7SflM77aOPSjtP0wtEn4Ta0h/E9Cm4ffIvRPz57OSGdl6N/OhtCR
4Y8KzRFbXxQ6he9Cf0nbn90j7pW+2maFTu5L56lR6Wg7IPSn8H8M7R1+n9Cz
4Z8JHRT+4NDTo+pD98C+5mYTW9hgrifds33N+eKZsoktp/blSzI8n7KlC53U
l01PjOqau9Z79rX2H4c268sHeD7iG7I/jKoP3b36sp0Mbw3/Df+f0HHhjw89
NyoZ/oTQ1EzJ8CeG/i//vyt0d/ivu6auTezZIfv5aHtsUjL8Me6RScnwx4be
P1N7zN66L/TumRrTWPf0NfY7Q3f1Ncerw09Cl4e/IjRn+LeEbgx/U1/8m0M3
9CWj+6rQZX312cP7auzbLfbd3FfbOHRpXzq7pn2TtO+c9vPy/3TaXhk6K/zZ
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
Iy8o1yinKLcoR0iGP6v5hK/sgSeabXS0sdHa5NnloK1RLE7OTq5OTE5OWF5X
jlPe0R4iO73tLXmAOVscUexPHhtWYLX4e/Vxxf+26yr+Jl8mjyqvLM8vry/n
Lq8qpy23Da+wdVfxuL616UOXjry9PnRhC9x7sD9ilO5Be00eUg72lLZHnV3r
d7V3xYHFhuUg5b2ubzK8PSdHbM/aq/K8bJXnhklgsz0jb/zVSe0l19zeYbO9
IKcvb/+1tN02qT0Fp3D7pPaavD4f8Y284RtbH7p0+JoN5uZz1wYWAgbDNeIT
Priz+QomATZhlYy36rjmNoex2QDXAcdws5jCpPLeZPhbJrUWMrw1yem4pq6l
WPH24bdzTfOO+dpR8duGXj0qmZiw2LCcqTypnKq8410Z6+5JxazFruFs4JDe
2eLIdOVFxb3F1mFcYF3kb7fvas+IF9szc7e4tr307ha3lueUy31Xi1sbS97T
3HKfd07KBn2tyVqMYS65Uhgdc36sxfXNDXsjJ7tgi7vD6sizysOK0YvLrzWo
PMSL5YDkRgYlw790VDlZfeiK2+srlyuH8Egbc8eu4nMLtTa5ZzlcOnzFJrbw
mbyx3POaubZrjQvPtVNXY8APyXHzOV9/fVK2s8Hc1rDOoGxk28tG5Ts+4ys+
5GM+/WnzvTyNXBmMFVzVNycVjzMn/JicjNzMfZF/a1L5ml27eoZasbXBdd07
KR24M7iqe8J/Y1I8XBPME5m55Opg0sypDc5p3XHp4GGf1hmXjA3GNBbbXpH5
d+8qnrjeoDBgsGAbRHfDcV0reaI5RnXN+MyetBf50rOMmJ1YnWcaPhQ/tQfn
bXPDcq09LhusWfzSmvkCDg2Wbr20rT8uH8jDyGHxzcpNRxubXEvYgjXGdU3l
cficr2HZ5HHI8LByxiLDG1Ms0jund00xyUPDH+KaurbifoOS4d8dmpGv6cpH
mw7KR+uGXj4q323AttAr5azoht89NGf4t4Y2Cr9haBC+D208KBl+KI8SfovQ
JlnLpqH7JxX/MufWrW3z0Mbj0tlkUGPoOxqVTWSjZqu52MQWc245qDmMfZQ8
zaBk+G979wy/Q+h10X39qHhnlrOKzFm1TWgyqjNrp0H1ofuG0FxyB7F1r9Ce
be27hd4yKh/Qeb6tq77WxAZzW6u1bcYn41rjruF3Cb0p/d48qrHI8MbUtnPo
jaPSce0ODr1zVNeQDa7BW1+wLfxe5sjYm4f2C78vn4TfMnRA+P1D34ktD4Tm
lTuJrfuGjot8n0GNoe8WfBj+SGdK9N4/qrHoaDPme0bVVzzw8MgPCh0Yeruz
flQye8zeontw09FmDcY+wh4f1Rz2mjPI2WPPfTn8KaFjcv2+Oyn+5NB245Kx
+djQB0e1lhPCH8/nad96XH3EC63RWMeEjg59ILrzjKovGd4Y2qzZWumcOKgx
jbVNaGG5oa7ij2cNyofiofYE3540qD50tx2XrWR4Np8W/tTQfBln/tDXR4Uh
hR1dsa9ryi9HNTvvaTravhi6L7J7nSGRrTQq/puhFUcluyf8150J4T8fWtM1
iG2Hhb7nuofuD60a+Wqj4r8dWmVUsu9aU2j18GuMaqy7QyuMaky63wqtPKo+
3xjUnOb6QrPJXOJP9zXb6Ghj443hbwgtHX6Z0Hnhzw19LPzHR8WfE/roqGR8
fGZooVH5/vxB9aH7idD3JhWfPDDzXRH5haELQoukbdHQ8u6ZtB0c+mrk14eu
C30q8k+PSteYxtLnpkHZyLbPtDGM7Zob+87QHaE9cy33Cn0l/M2hz0Zv2VHh
J88Qa+gKfwgDCXf4WzHDSeEGyfCPTeq6e0+BS4QDxXt3gVEk+2LbF3CicIFw
jLC7B4/rXcfYZHhz0DWmsfSBUTSnuR73DDcom9m63Kgwr3S0/T70o9BOGev4
rvAsx82qeCIf3jUoHxpjueZba+czvuKDr4W/1RkW+3Ybl69ud0aNy2f425yb
45LJM8t1yzPLdd/VfMy35qZrTGPpAwcBK/H92PlQs3nX6J3e1VrsnbNDHxnV
Hrok/MWhHdJ3x3HhTGBt4BLgFmBOyPCwDDDkcJAw6nDmdOFgYBj0gffhm+O6
wjvAsMCywHTAccA4wDrAbcA5wEWQ4WEfXtL60IXrMBecFIy8OfWlo80Y2mCp
YOrpwNsc2VX8FN7nodD3nclZ277en5oMv9+4MEKwQnA5cDt0HwztPa4+PxhU
H7r7h344KBn+gHFhhGGFYYjgeoxFhjfmjwbVh+6B47IVVlRNAJv5/qLQ9uO6
BnwJWwQTtUfzOV8e29W1uCx0aWin6O4curzJ8LuM6551L8tHuJevCl0ZWizy
xUcVkxWb3avFWa9uOtqWGNXY9oS9YI5rw18TWjJtS43qbCDDOyMeaGems9KZ
yHZYLDgma3CmOjPXaGetNrUMME501FTYU/aS2gU1L2R4tQ7wT9Z+TOhFch5p
+8+gaiLgvp4blAwPlzXVlwwPq9X1JcPDkc3qS4aHqzIm2c5tLnvWnjyw7WU4
MXvE3oDtgod3L53WFb4YLn/RvnDGcMcfCb+wXGHuu0fkDfqS4R+dFD5Z31O7
wvPPF/pQ6PLIr3Bmy+n1VQegdkDbvKHLRqXzf34D3cd+C0Lv7kuGPy/0wfDz
hC5xLUdly0JyjZOy6aLITsncJ4fe39oWlHuclM78zSa2XDkqXBqsHkwgbCCM
GhkelhCuENYQRhGOkC4ZXp+39YXT/0nG/mno7X3J8D9rPtlFTLorX70z9A65
jMh/MSleH7pkbP1w6JeTsln9yYnwrF3hH9/Tl0/44vzQ+8K/N3RB+AtHdR+6
d2EAYQFh4e9pvyMw8Ud6TxoXxgOuY/92TsAV6rNfO0dgDMkObOeAsWANT/G7
M668szw0/qRx5aDJDhU3GxfmB/bnxPAnjCtHLlf+3rYGtrP5eOf8uDAWcAxH
jctGtsGeuIbWaG0XtWvGl67x/G0vfCB08aj2hL1kj9gb9pS8izNh75ZHcQY5
i9bK2GuHjgl/9LgwD3AOx45LhpeHl6OQq5AjkSuxFjaz1ZoWa/eIe8Pe95sJ
1/bD9lsK5wa393D4H0wK4wTnAyMFK4WH84G5IsPD/sCAkcGkwZ3BWcFe4WHR
YK7I4NvOiS/O7gpvBVMGW/anzPXkpO7dRfqqEfhKm5PuWV3ZApMFmwXjBusG
pwa39of0/eOkcFp0tMHKqZlQO6FGTV2augN1P+os1H7g1fWouSDDq/VRc0Tm
TFG7cGc7a/DqFtRUkOGNaSwyeLkzu3qmUo+yctvH6iQ8a+Htbc9GZHzHZrby
Id97ZvCs4Bqoq1BnA6cHl6fuxpqsBW5PjRfc8anOsVHdozvn/j2pq3tXG1zx
l0el495Xq/PjSZ0BeLVWJ84qmTH0dQ/P2faGPWEv2CMwwM4cZw3ss3ucDO/e
h1uGjVbDpS6I7WxmqzXAMdPRpnaIbXDNp4zKRntgt1nlQ3uDD9WVPNx8i+cT
viBz7WEXn5jUHlB3qBbRPe3etrfsEXvDHnOWf6yvmi5nur3mjHe223Oe1WBd
YfE9s7GNzWx93sZxnSnOEtgWmGW/SX6L4Ir9Rh4d24/q6rdT3lbeeI+W53RP
3tZVTYd7VU5YbviqjHn1uO4JWMTH270ihyuXe33abhhXXliu+Nrw142Ll0u+
Zlyy+dqYxiLTVx+6xpAjliuWI5YrlheXl9+65eXllcm2aXl4OWaybVueXI5d
nninlseGkYCVuChjXzwuHpbiwnHJ5PH12bnlueXZyXZpeW62kO068z+bbvXu
05WtcqJyo3LcO7Q8v1z1ji0Pr42N27U8OIwJrAnMC+yLtcEVbNVwAjAYcBQb
NhwEnAoszaWx9bJx5anJ8JePCyMAK3DluHK1dGFxLhlXHzgKOIstGq4ApoIM
D2sAwwu3+1T2ytOTwsDCdcEdwTIZc//QV7r/zSVPfsW45rRmvrilK19oYyPb
6MBswGls1vLscBuwIDBDmzYbjH1zV7ZNhuUDa4cF4QvYEjgQPoEpgS1Zr+FC
tJHh6ZjLHMY2J11YGBiU9dqY5rqpq7n4ho2bNxyHtcO2wVnxgWsFlwKX5JrB
R12Xvtd2hVeCK4IzOidrPXdceJwbPEt3hZ+BoYI7gqmZ9eri9aFLpi+s0tnj
GkMf2BuYHmPBAcEGnZe280Mvyhj7pd+NXeGJYIxgjWCI4IbgoGC1YJBgkWCI
jKHvBeMaG44HjskccD1wUzBMsEye9Z0JezYcBIw0nPKfszf+MilMMmzyYRnr
8HG1wS3D4NKxl/Sha09p04cuHXOxkW3mhBc+L2s5tyv8MNwXnBoMFywXW9nI
NjbDscHSwaDBlcFX8QWfwz/BZMFhwUzBScGIwYrBwMHCwaHBrp0Ze84aFwYG
FuZUsaRxXWtYJBi0F3BqbGILHBmc2gu4NNgytrKJLWzW15zmMoY9os/ybe90
uX77xA9Xd4UPZDPs1lptLTB5cDqnx5bZ48L4keHPGNfaYM3gxKxxVtsDrj3Z
i5sPrN2Yzjp7wLV35tlrfGDt9pw9ue+s2tN/b76CHYRZXKKdUfb6NV2dXWyG
Q5x6da2FrXzId2xWs6J2RR28bxPApcKtwiHBHsJ1w5HDvcISw5XCmsLcw9nD
mJLh4aJhMmEz4WDhXOFfr4gtl3eFj4bBhcWFI4Z9vrrJ8LDR2mCP4XzpwOjC
6h7Xnjv/47kz67+0K/y0ueA+4VrNCTMNFw3nCwsMYwprCgMLCwvjSoZXSwBj
aw1sh8OF44bbhrmFvcXT0UYGwwuH+9/Y8dyk5oY9hamdv53B9spVXZ3N5sBf
2dXcfAt3C9fFx3hYXBgvMrbyId+x2Rx7zyof3t98Y43WxkfWCgsO02zNao7U
HqlBU4smtuQZ2rOzGJN3fTEBsQDv/HTVRqlx3ajtAc8aYiz2hhiLZxLPImIv
ap7UPqmb9e0Be4cMbw9pY4O56Xj2eKGOwzOIa+zaXdLVtXd223P2mjPcNYWD
//ekrjUcMVwxXDRsPcw3XLf3EO9WeHvk+PaeBXOsD124fBhpMjysvrFgleGk
jWkuOPZ/TWpOOHJYd5hqOGq6ZPh3tDHs5cu6Gtu9oa4BJtw9Yo/bQ/O0vW+v
wG7DPNszcPdw+HDOf58U5h72/h/h/9loT1ia7n9t+tClA3MOe+4dzbuascjw
xlTPcmH6XtBVvYOaBbUL6jDUhsBUw1arM4Dzx8O2qysgc6arq4CjdtZrg4VX
c0DH3Gppjm7vidautkONDR+o+VD7ocZAXQHeGeLsIGOTWgx1ImxVf2CtbFZ/
o25DLYeaEnUkZMYcNN3j2pqshc4JrQ9dY6oXsLcu7gqfrg5IbdBJ7b1dPc35
Xf2GqXdRF6OOBS78eax4fLzHrNJRb0MHjlwdjL4w5HDj3tG9q8PE8ylfqjOA
iyfDqz1gA9lrm232Aqy/5357Aq+WxDsA2b3N5pPbe4G5YNWPaHEBtqq9gWFn
M5y7Wh11DOp01Oio1Xk26/jrpOpk1M6o6YGLx6u9URNE5lrT0eaaq4lSG6XG
R60PXTK8PvaS2hg1PfaUudRNPDOpOfmKTWzhswOaj/mWjXzKRrbx9cXtuR4u
GbbZc4dnFTVaarU8E3s2huuF/ZWPkKcQF5XvEMfYJn78YldxULUlckxySws0
XbkNMVR9xDz0ubLFRddpcZCr2rkoTiqWKkcjD7Je2tad1LkpLorX5+oWN/VM
5jlnjvZcYC65mUtb3PaMQdW8qHVZcFS/Y3LhcuJiPs59+VL5M881fkf2bPnV
h9t9BksAUyBG47mHrpybugH7Wu5YDlkMyu+y3DWZfe93AdbAnNe0+xh2k+zS
ds7t1vLdt7f7GFbCnLPbdYa9IHOfrz8pn/CFWLEclTzDxS2uLMcl1yVmLHYs
hiyWLOdyS4sr+92RNyGTs9PngRZH1lcu7f4Wd5Zzk3uTc3shTyf39mCL+8u3
GUNfsWh9X8jT3d/i2n7r5GjM6dqw+ZIWZ1+oXRc5MLkwOTYyvHyXHOuak7qO
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
bWrHYbBdA773rAjjD+vvmdg5qc7HO513Od+lhZGEe/Sb5reNb8nwfAwXCWvp
ucHvOF0yvD7e0713e2/2Xu/ssCfsBWeIvQDr7TndnoCbh7v3m+l3Upsz2VlM
BwYPFk8MRCyE7d6JvQtbA1wdjI2YkjgRXTg7cSN91H1+KPt5vq7qJtVVzduV
TF2omiTvqN5NfVtU3ec8XX3DTl2s76J8oCuZulB1vO/vSua7KWyHq/cMYw14
7/ieicjUePA5X/ttYhub2bpuOxucSc4iZ4R72pnlrHKve973/in+BPutTl/d
t7pkdcrqrMnwapfVXJPh1TrTVXethlkfNdrqrNVlqyXHL9Le68jUfavr9k0A
ddx4feiSqR+/vSsMhPptNeTmNJfaa3XdxtBXLbj4zf7tfRU2fqWs/cNdfZPT
tznVqKnr8s1b3759np/Ud2/Jnucn9Z1TMjVoatF858+3LP12+c3yW+U3zPcv
t23v7+rZ1M369uICXdWBwlbBaMFmwVj53uUOLV6gtuaTo3r/9T4L662eU52j
b75e3Hzpvdd7N5/ygTUf0nwDN6OeT00yXI48zxrW2xVOFa7VuyeZPJBnfe8C
Yhie+eH+1AIaAw4HzldttBppuBY4T7XlZHDAcJtq38ngQOFgzbVWV9/Idlau
1tU7rzPTNbqjq2vo2ol1ebf8QlcxL1i1FbuK8YrbqpvlO9fMNxt9/0Luft+W
r19nprACcu5y756lV8r/K3f/w2XjvWM4M8QWvWus2lWMUSzP3OYU0xMLFls2
hpiw2CNdaxCD9CzgWcw7sWcCe2arFj+5te0NdYW+AWmP2AP2jL1ib6jjVufu
m3u+k4dX++6bfGQwNp6JPAv5boCab33o+raeGnR1377J59t8eLXgvttHpuZV
7atvXF/Q9swWLd5z0wt7eVLf7LWnYYLMaS7fKjCm668G31y+r2l/eGdUL64O
W92374b6LqgabHXXvgnqO5x0yPD6+p6yd1fvsNc2XbXaviuqjzpeNrPVd4/V
XKu99o1i3yVWZ02G963iS5oN5jaGGmq11L6z7FvN5iA7sc2tzRj60nEvmdNc
7qnzm4/5lg/Vzam7891x3yVXo6dWr2vP/Wqa1DZ5r3hVI/F78Xht6t/0oetd
Qd2hOkvfpfUtWzV55jC2b59rU4vpm7V0nLFqleZuZ68zwRj6OiuMKX4vn2Au
z4OeDWEiYYWMKd4vf2Cu/wfXoavj
           "]], 
          Polygon3DBox[CompressedData["
1:eJwlkU8og3EYx59tOdDGu5+5OeBOKeNCWS5uykGbA2MJl0lJ7aYw27s39BqS
tOTmYCm2KLu4uSgXc5k/J3J1k/JZz+FTz/P9Ps/v+3t/b+fs0njSKyLt0AC1
FhEHYTQk0hcQCUMMojBnRLbxHvDK1GfUm1DxiAywt8HMOiTxdtEfmSvSX0AK
zUV7Quuh74Ypo1n3aF2W7kSpbbwcZND20SYhQYZpFgmQ44dzdk/RfW0iHUGR
E+o1du+YqUCV3SO0FbR5+gVw2cugDaPV/CKv4LH0m8bQpsmMwwez71Ago1B/
HDLK9CU4MJr1y/wi56WpY9DL/a44rwrPMGE0q8hcP3th2EI7RHtDu7S0XqYe
xBuCGYiDbfTu33h/zB1Tp6hdvD1I4+fRVsEh94U733AXm36EuUb6JohY+uYJ
tGv6EvjAW/+nRudv8RzOzMGO0awftEhQvz1L/Yn3Vb9bUN88j9ZKXgj+AZF2
Tzs=
           "]]}]}, {}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0llLlFEAx+Gjo6Uz44yZLaYtamr7+k26a1OQ1GyZ0XJp1Vbb9/Te61Y/
Q0RIhIRERIiolS2aH6DMnhEvHn7vnwPvxeGU16f3pLJCCP1kk/l+4uMpz3jO
C14ywG7n+TkhRIkRp4AESRqcN9LEYcb8sFmPcJRx+5geJ8WEndYWWvlin9CT
tPHVbtcOOvlmn9LTnGHSPqvnOM93u0u7ucAP+6Je4jI/7St6lR5+2df0OjeY
sm/qLW4zbd/Ru9zjt31fH/CQGfuRPqaXPupyQ6jlIAfYzz72cihzx+4pMBcJ
4R+z/OUPuxztZAfbGfX/bbqVLYzYm3UTG/lsb9AaqvlkV+l6KvloV2g56/hg
r9U1rGbYLtNSVvHeLtGVrGDIXq7LKOadvVSLWMJbu1CTJBi0CzROjDd2NPNm
yOO1vVgX4TrCq6z5qwiRhff3H5KsR1E=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0mszlGEAx+F7l7UHYQltm2Qlic2ppHyMQnnrA/BxVDpSu+ySIp0VKuoD
dUCnqxkvrvnNf+6Z+5l55s5NTl+dioQQHnKTGR7HQyhQZIFFSpT56rwiGUIl
MaqIkyDJgfNf/OYP+WgIfzX4SITzdlQrqKTXjmkVcfrshCZJ0W9X6xFqGLBr
tY40g3a9NnCUC3ajNtHMRfuYZjjOkJ3VE7RwyT6prZxi2G7THO1ctk9rB2e4
YnfqWboYsc9pNz3kmUiFcIPrjDPGKNfY9ysOEsoeP/nBd77xxfkuO3ym2/2f
9CPbdNlbuskHOu33usE7Ouy3+obXtNuv9CUvaLPX9TlrtNqr+oyntNgr+oRl
svaSlimRsRd1gSLNduH/m+ERjfa8zh2+qQb7gd7nHmn7rt5hllr7tt46fH//
AJ7SQ6I=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0tdOVFEAhtE9eIvwDD4A2AUrKipKnRm7UoLGGGKUEEIoIp17wN4ZigUR
UcECCMILCYqXIuuEi5V/vuzkzOzJ2XKlNnkrFkJIke1DFi/TQxgkxRDDjDBK
lfN/m0NY4z8hI4QYaWyi3/kAd7lHY1oI9+0DHtKkH9nHPKFZP7XPeE6LfhH9
Bga5rVN2iGFa9Ygd5RV39Gv7hre06TH7jnHa9Xs7wQc69KT9yCc69Wc7xTRd
+ov9yje69Xc7wyw9es7+YJ5evWB/ssgSpzNDSJIgThmllNDn/K//bZU//GaF
ZX5R6byCci7T4PmX7EUuUK/P23OcpU6fib6TJLU6YeOUcVOX2hKKuaGLbCGn
qNEnbQEnuK6P22Pkc00ftUc4zFWdZw9xkGp9wO5nH1V6r80lJ7qL3mN3syu6
k95pd7A9upfeZrfGNt6/ddC8UeE=
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{51, 52, 53, 54, 452, 55, 56, 57, 454, 58, 59, 60, 456, 61, 
         62, 63, 458, 64, 65, 66, 460, 67, 68, 69, 462, 70, 71, 72, 464, 73, 
         74, 75, 466, 76, 77, 78, 468, 79, 80, 81, 470, 82, 83, 84, 472, 85, 
         86, 87, 474, 88, 89, 90, 476, 91, 92, 93, 478, 94, 95, 96, 480, 97, 
         98, 99, 100}], 
        Line3DBox[CompressedData["
1:eJwV0T8oxGEcx/GvP2e6EsqgxC2XgWQxKEohfxdZZNENZPCvyEAGJhZZZJFB
GZRBSUpSkjIog7rhyqCUK0pRisjL8Ov1fp7P8tQvlZkenCqIiFnfUWHEWCLi
gJM85RwvWFsRsaiv9QpvucZ7pm0bOqe3+Mgd5llv29Nv+oCfPOIvm2wnOlEU
cc4kr1jBZtuNrtJ3TDHLOrbYcrpRP7KZebayzfaqO/QH+/jNQbbbfvWwTpRE
jDLJcXbYSvWUruQ8q7nELluNXtVprrOBm+y2Nert/zdzl63cZ4+tTR/qTh6z
n2fstQ3oSz3EG47wjj9+SJYZ5wdO8ImXZRHP5REvesbdOxf4xWUWFEf8AdlW
PjI=
         "]], 
        Line3DBox[CompressedData["
1:eJwV0T0oxHEcx/EfcpvyVIoFi2y33cbEJANZZPAwkOGuG8jAxGbRkYeUpIvh
SlIeu0QUXVIGMlwpyqCoK0oZeN1wvb73ede//3VNw4meeEkIIenzWxbCVCSE
Lyb5wXG+8aU6hGxVCM/uEdsTB3jPvHao5dx9tkt2M8tHbU87cHfadtnOHd5r
GW3THbOtMcoUb7Vtbd7dYptjI2d4o21pk+46W4KVHOOVtqENuSO2fv6Vh9DL
C21d63J/2zr4yTaeaatazP1qixZ/F1uZ1Za15uI72xqYYy1PtSWtovgMW4RH
/CsN4URb1H7cGVuBab7zWEtpr+4VW54LfGDBH3LHWd+vOc1zTrC+xnPdcfc+
R5nmIDP8B+amRxY=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj8ohGEAx/HndP6UK3GlqCtKGa5uUAZ1SUlKUqcuhpM6SjnRkfwbZCAD
GchABiYWWWSRQRmUQckiiyy3GdQNSvkY3j7f5/29T72t+bnh2UgIoeipi4aw
WRVCDXfYyH0mmImHcKTb9CmTPGcHR2yXuktfs4e37OeY7V4P6Udm+cwc87ZX
PaHfOc1PFjllK+ll/cV1lrnFgu1H7+pIdQgHrOEx52wxfabjvGAzrzhvS+gb
3cY7JvnARVtKP+lOvjDNNy7ZuvWH7mOJg/ziim1Il3WWv8wxWhnCqm1M1+pJ
NrDAJq7ZZnSLXmD7//dMMVbhH7jhnOY2e/ld7657A3rPuwwPOcoTjvMPmAQ3
sA==
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D0oRQEYx+HXzUeKwlXKoAzKoAzKoCQlqTsowy0Dg5iEyCIDGchABjIw
sVlkkc1wfURkIAYMLEIiJUnkMZye/3l/neVU9gx1DGZFxLCnMydiOS+igwtM
cZYtTCYjXoojGu0pt3qOs5aF2oNWbY+6VXKA5czT7rSk3edWwG7mMKHdaL/Z
EWm3T7bzjT8lEVfao93qds8mXvNLO9cu7Hq3U9bygB/ambZrV7ntsIJbfNdO
tA271G2dhVzlq3akLdkJt3l+50bM8EU71CbtN7cxPnKEz9q+1m/fuvXykl18
0va0tH3s1s4M2/6/1zJas73t1sBN1jESETVc817FFVZwkSn/rMyes4s4zQQn
mM8/J8A/Yg==
         "]], 
        Line3DBox[{201, 202, 203, 204, 527, 205, 206, 207, 529, 208, 209, 210,
          531, 211, 212, 213, 533, 214, 215, 216, 535, 217, 218, 219, 537, 
         220, 221, 222, 539, 223, 224, 225, 541, 226, 227, 228, 543, 229, 230,
          231, 545, 232, 233, 234, 547, 235, 236, 237, 549, 238, 239, 240, 
         551, 241, 242, 243, 553, 244, 245, 246, 555, 247, 248, 249, 250}], 
        Line3DBox[CompressedData["
1:eJwNzz0oBVAcxuE/5bo+roSSLEjJZmNi8jHIQBYZfAxkuDKQgYlFFllkUIZb
BpKUpCRlUHdQhlsGZSBKEUWJwjOcnt8573Tqx6b703kRMePsFkaMFEdkOMFD
pnnCh8qIWX2uF3jJJV7x2baic3qNt9zgPd9sW/pZZ/jOXX7x03ag//QxE8mI
M6b4bbvQVTrLWl6zgb+2nG7Wt2zhPVuZXxXxpNv1Kzv5yV4W2L70gP7jEBMl
EaNM2or0pC7nNKs5x2JbjV7UdVxmE1dZamvW67qFm2zlNlO2Nr2jO7jPLh6x
zNatT3UfLzjILHvy/ZXD7jcc5x0bKyL2/P1RT3l74Qw/OM8f/gOjl0I9
         "]], 
        Line3DBox[CompressedData["
1:eJwVyz8oxHEcx+EPKRdRSElSl+02G6WYZJGSDGQgAyn/BhYkpSQDyXLDxXAy
KElJyqAM6gZlUAYyKEpRckIpj+HX8/59Xn2TQxPd4wURMeXLJyKmSyNeOcYn
DvOBu1UR9ZURt/aA2zV7meO2VqNd2F1uZ+zgMdNapXZgt7ntsZk73NLKtLTd
6LbJFNe4riW0ZTvptsBaznJNK9Im7Qq3UZZwiCtaaP12uPXwuySik8vab0VE
u/3m1spnNnFJ+9Ea7Tu3FG/YwEXtS6uzc27VvGA5F7RPrdg+cQse8rs4Yl7L
a+921u2FGT5yTvvQ7uwNtxuu8oothRGX/+/9n3OGp5zgvXdH9oi9z0Fm2Mcs
/wBIm0HT
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D0ohHEAx/G/K+q8lNzpilI3nK4ow9XlpSMlXRnUlbsMDMIiRBYZyEAG
MpCBiUUWWWRQBmVQssgiy2233aAMSj6Gp8/3eX5P/56e5MxyYakmhLDiikZD
2GwIIcIdNnOfCbbGQzjSHfqUKZ6zm+22S53R1+znLYeZtN3rvH7kOJ9ZZKft
VU/pd87ykwvsspX1qq5wnVVuscf2pXf1Dw8YaQzhmBlbnT7TTbxgnFfM2hL6
Rnfwjik+sM+W1k//5/Pl/32+ccDWqz/0EMscZYU5W15X9Ti/WeQvB20lXVsf
wjQbOccYh2zzuk0vMsk1plmK+AZuuM9ymzlOtPg/sRBG9J5nYzxkgSec5B/a
STbA
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj8o5gEcx/EvV/7/yZ9BGZ4op6frLor0pCS64YnyxMBEXclyPZIMZCAD
GeiGM7FZLvlzlHoGRckNSgzXs9iezWa4MqjzMvx6fX7fd7/6tXybHc0WRcSc
Z6wi4kdVxDA3+ZVr7GO+IWKkPqLHXnbr4AKTfNDSWquddWvmDBt5qw1q1faU
Wwkn+L884kbr017sjNsz03zilZbSCna/2yNT/MsLrVu7szvc/jDJS+a0Ti1n
J9xO2cQDnmtftH27xm2PpdzhmfZJ27ZfKyM2+I+r/K0ltSX7yW2eBX7nsdau
Tdt5t0nec5xH2kctY1+7pd//nQM81Nq0XvvErYu/+JlDxb7jrvcEf7KJW6xt
jKiz1+0KrvC1LGKRH7y/AR1aOx4=
         "]], 
        Line3DBox[{351, 352, 353, 354, 602, 355, 356, 357, 604, 358, 359, 360,
          606, 361, 362, 363, 608, 364, 365, 366, 610, 367, 368, 369, 612, 
         370, 371, 372, 614, 373, 374, 375, 616, 376, 377, 378, 618, 379, 380,
          381, 620, 382, 383, 384, 622, 385, 386, 387, 624, 388, 389, 390, 
         626, 391, 392, 393, 628, 394, 395, 396, 630, 397, 398, 399, 400}], 
        Line3DBox[CompressedData["
1:eJwNzz8ohGEAx/EHg5L/fxZZrttuOxMTFlmkJAMZXAZSDgMTixhk0Q3KoAxX
l0QioU7RJSKHQRmuKEUp6spg8xnePt/3/fXU80YSyf6pkhDCjCddGcJQTQhb
HOUux3nITGMISX2m53jBBV5zz7ak83qVz1xngUe2Df2ut/jFNIs8te3oP33A
UBXCCct5bsvqap1jE2/ZwktbXkf1M2MsMM4r25tu05/s4A+7eWMr6l79xwGG
2hCGeWcr0wldwQnWcZr3tgY9r5u5yAiX+WCL6jUdY4pxbvLR1qq3dTsz7OQ+
n2xd+lj3MMs+5pgq9a8c9P7EEb5wpd59nHvVY759cJLfnOUv/wES7UZI
         "]], 
        Line3DBox[CompressedData["
1:eJwVzz0ohAEcx/E/GRQiXRYZlM3GxHQkUpJ03kWdl3IJV4osDGKQzXBlUAYl
KUkZlEEZlOHKoAyKUpQy3HaTzw3X53f/b0/PXXN6dXilLCKyPn81Ect1Ed9c
4Adn+MZMImKnPuLFHnN75hAfOa9tafd2v9stu3lVel5b187tTrdTtvOYE9qq
dmS3uh2yhXtMaRlt225022SC2dJ7tUUtY1e5zbGC0xzQ0tqIXayNGGSBfaXf
ps1qSfvHrYOfbGOvNq212q9uLcyziT3apNZgP7rV8p6Vpf+pjWtl9rVbsTri
ggV2aWPar33i9sUc35nURrVX+8Atz10+cb884oEbvt9xjTdc4qnnLu20fcYp
5pjiCf8Bx8k/jQ==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzz0oRXEcx+EfilJerqhbBjEog7pJSUpSBmXwMjAhJYuuJAMZyEAGMjAx
kEUWGcigDEoWWSSlDLLcgSSRrngMp+fzP98z/E/1yERvOiciJj15xREzpRHZ
ooh5FjovMcH78ohVndQbrOIWa/lo29X1ep+NPGQLn23Hul2fsZMX7GbGdqX7
9Q0HecdRvtoe9Lh+4tT/95zlu+1FL+gPLjPLNX7aIhGxqQu4zWLu8duW0Ac6
ySNW8ZQ/thp9rut4yRSv+Wtr0Le6mQ9s4xNzKvybzuhOvrGbX8y19ehfPcD8
koghFjHPNqzL9RgrmWYNd3PdgdPOKc6xiSdlETvu0qoXvevgCru4zj7+AWAb
QMU=
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D0ohAEcx/E/KUoOF4My0A3KoCQlKYMyXBmYmMQgC9d5LTIQeblECYOS
0i1YZFAGZZNFUrbbbjMogzIonxuuz+/5f7u6e1onMyOzZRGR9RmqjcjVRwxy
k/1cYw/PGiJukxGd9pJbOzNM8Vi71prtabdGTjDBAy2vVdpjbsER/iYi9rQL
7dtOu31ygEVuaWdawe51+2AXX7munWrPdrvbE1N84Jp2pN3ZTW43TDLPFe1Q
O7er3E5ZxkMua/varv1TF7HBL65yUctpC3bRbYYFTnFe29XG7Te3Ub5wmHPa
jpa2H90GeM8+ZrVtrdu+cuvgJdt4Uh7RUtJzEw+Y5A7ffa+69A7sitJ/4k+N
38E//gPmYD7S
         "]], 
        Line3DBox[CompressedData["
1:eJwVzT0ohXEYxuEHYVNIKZaTgWw2GxOTlGSRgQykfA1kYGKRRZKPRJIYTkkK
0UlEkaTOQIZTijIoiihlcBnervv//IY30TXQ0p8VEUO+ZHZEZ27EJnu4xwEe
saw4YsQ+tcd5yUneMqFN23f2LDNc5DMrtVX71d7kB5P84ef/j3MiDr3zecIC
zhdGHBdFlNjXbuVMs4ILWkqrtjNuNXxmLZe0E63Ofndr4DebuKKdaa125EW0
M59dXNMutF670G2QpRzlhnalTdgJtylWcYZb2o02Z9e4LbOW60xqaW3brnfb
YSP3uavdaym72e2cbbzmgZbR0naH2wO7+ciU9qS92H1ubxzmF8f4yz/w+0RK

         "]], 
        Line3DBox[CompressedData["
1:eJwVzjEohHEcx+H/Ed0mlFIMZCBZbruNiUlSsshwMpBwGcjAxCKLLEgkieFK
l0LqEp2iS+oGMlwpVwZFCaWUx/D2fN/fp7fehsRE73gkhJD0pEpCSJSFsMcR
HnGSZ6yrDmHavrDneM0F3rFRW7Lv7RUWuMYim7Ut+9Xe4wdT/GGblrYjpSGc
MspzVjCmZe0aO8d65tnETz/cyoL3GIuMc73S91UhtNvvbp38Zjc3tUutz46U
hzDAKIe4rV1po3aVW5K1nOGudqPN241ui2zhMve1W231/3/dNhjnDlNaXjuw
O9wO2cVjprUHLWP3uGXZzxxPtIKWtwfdHjnMJ2a0Z+3FHnN74xS/OMtf/gEw
wUPU
         "]], 
        Line3DBox[CompressedData["
1:eJwVzz8ohWEYh+HHEWXzZ1CKkgwkyxkUExOTGGSRQgZCZCADE4sssshAkhhO
SQopSVF0kjoDGU4pilKUopRchq/r7vkt71fZN9Y5mhMR475UIqI/L2KbQzzg
OE9YXhIxpc/1LK84z1tW2Rb1nV5mlqt8Zo1tXb/pbX4yxR/W2/Z1IjfimAU8
YyGTtgtdqtOsYIbVbLDd6TqdZZLPbGST7VU36w+28pvt/PKjXUzkR/SwgAPc
KIq4LI4Y1iVuEyzjNLds17Y5XeW2wFouccd2Y1v5f6/bGhu5yZQtY9vVLW57
bOMh9233tlPd4XbBbqZ5ZMvaMrrX7YGDfOSp7cn2okfc3jnJL87wl3/paEOm

         "]], 
        Line3DBox[CompressedData["
1:eJwV0D8ohAEcx+EfF4My+DMoRUoGkuUGRakzMekWWSSRgQgZyMDEIossMijD
xXClSyElKYOS1A1kuFIUpShFKR7D2/O537e33q5heCo9WRQR055sccRISUSG
4zzkDE9ZVxUxry/0Eq+4wls22tb0nd5ggVt8ZrNtR7/pDD+Z5Q/bbDmdSESc
sIznrGDSdqlr9DXrmWcT2213ulUXmOQzO9hpe9Up/cEefrOPXbYf3a8TpRGD
LOMoU7ZyPaGrOctaLvy/7w9aZqPfq2zhOvcqIm4qIzb/v9dtmx3cZdaWt+3r
brcD9vKIOdu97Uyn3S45wGse2wq2vB5ye+AYH3lme7K96Em3d87xi4v85R87
4UKx
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D0oRQEYx+EXl0UpVwYlH4MMdLMYFKWQYsIiiygy+EhkIAMTiyyyyKAM
yqAkhZSkDMqg7kCGW8otSlEKKY/h9PzO+19Op3p4qncyJyKmPQe5ESP5EXsc
5zFneM7Kkoh5faWXeMMV3rHGtqbv9QYz3GKWdbYd/ab3+MkD/rLBdqQTeRFn
LOQlk2y0XesyfcsqplnLJtu9TukMG5llM1tsr7pNf7CL3+xhq+1X9+tEQcQg
CznKNluRntClnGU5F9hhq9DLuoarrOc6O20pvfn/zdxmM3f548fus937Ibt5
wqPiiIdkxIXuc7vmAG95asvY0nrI7ZFjfOKF7dn2oqfc3jnHLy4yEhF/Rm0/
5g==
         "]], 
        Line3DBox[CompressedData["
1:eJwNzz0ohmEYhuGbz1+KwqeUQQzKoAzKoCQlKYMYyEApJpFkkYEMZCADGZhY
ZJFFBmUQIjIQAwYWSSIlSTiGt+N67nN6S3uH2gZTImLYl50WMZERkeA08zjH
IrYURCzaJfYKy7nGSrZpG3a1vcVa7rCBndqe3WwfsJWn7GBqakQ3r737eM8B
HuZFvORHjNjPbmN85ySPtVdtxv5xm2ciM2KJJ9qbtmrnuq2zkJs80z60bbvE
bZfl3OeF9qkd2VVu56zhFS+1b+3Wrnd7ZBOfeaP9au92q9sXO/jHOy3h3zPS
I3rcctjPJB+0LK3YHnQr4ygr+KTlalX2uFsNp1jHVy2pNdqzbi1cYDuX2cV/
QTk+cg==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzz8ohWEYh+GHDpIidJQykEEZ1BmUQUlKUgZ/BlKIYkJKFhnIQAYykIGJ
RRZZZFAGpYgMxICBRQaRkiQuw9f1e597+sr6R9tG0iJizJeTiJjOjEhwjgVc
ZDFbCiNW7FJ7nRXcZBXbtW272t5lLffZwC7t0G62j9nKM3ayR7u0e+0bDvKB
wxzQnuxx+4WTfOcME+kR8/zxXvp/Z0Ws8jQ/4q0gYsPOc9tiEXd4rn1oe3ap
2wEreMRL7VM7sVNuF6zhNa+0b+3Ornd7YhNfeKv9au92q9sXOxkZEfdawj9k
2X1uuRxiko9atlZij7qVc4KVfNbytJQ95VbDWdbxVUtqjfaCWwuX2cE1dvMP
Fp082w==
         "]], 
        Line3DBox[CompressedData["
1:eJwNzTsoxXEYx+GXHLeUW1HKcMpwyqDOoAxKUpIynBhIuaScQS6DLDKQgQxk
IAMTiyyyyKAMyqBkIAYMLDqDMpAkz/Dv+fze7/BPjk5lJvMiYsZXVhCxWBiR
4Aqruc469lRHbOmk3mWK+2xir+1QN+tjtvKUHRywnetufckMr9nPIdutHtYP
HOcLJzlme9OzOsd5fnKJWduXXtV/3GCiKGKbE7YSvacreMBaHrEwP+KESe8z
pnjB28qI76qIK512u2EL73ln+7U96Xa3N3Yxx0db+N+nzrj9sJ95iYhnW8JW
rEfcypllDV9tpbZ6Pe3WwDk28t1WYUvrBbcWLrONH7YaW6dec+vhJvu4w0H+
A2lVOo0=
         "]], 
        Line3DBox[CompressedData["
1:eJwNyz8oxHEcx+EPcf6lXBR1pSiDMqgb1A1KUpJSLgZSKMXAkZJFBjKQgQxk
YGKRRRYZlEEZlCxiwMAig7pBGXiGX8/r+3n3axjP9c8URMScr7IoYiURkeA6
a7jFFPuqI3Z1oz5gM4/YygHbiW7TZ2znBbs4bLvSvfqGWd5xiKO2Bz2mnzjJ
N+Y4YfvQC/qLS8xzlVO2H72h/7jNREnEHqdt5fpQJ3nMOp5y1pbS57qRl2zm
NedtLfpWp3nPDB9ZWhjxwk7vD/bwi8/JiAL/5XXW7ZdDLCyOeLUlbGV63K2K
U6zlu63CVq/n3Jq4yBZ+2pK2tF52y3CNHfy21dq69aZbH3c4yH2O8B/8oTh3

         "]], 
        Line3DBox[CompressedData["
1:eJwNyz0oxHEcx/GfxyukjtSpK0kZrm5QNyhJSUq6unQxnJRTyg3HSR4WGchA
BjKQgYlFFllkUAZlULLIIoNbZFAGZfAafr3e/++nf3t+dqRYEUIoeY3VIazX
hhDhFlu4yzgzzSEc6A59zARP2cVR27nu1pfs4zUHOW671Wl9zywfmeOk7Vnn
9Stn+M45TtvKekl/cZU/3GDB9qu3dYiEsMcID1m01esT3cQztvKCJVtcX+kO
3jDBOy7YkvpBp/jEHr5w0dar3/QAyxzmF5dtaf2js/xjjlU1IdRVepzyHWWB
MX5EQ2jwX5ued+vkCpP8tDXZUnrNrYeb7Oe3LWYb0jtuGe5zjEec4D8qxDeI

         "]], 
        Line3DBox[CompressedData["
1:eJwVyz0ohXEYxuHnKPkqcpSSJLLZzsYgJlkkJQMZyEDykYGJREoykKQMYiCD
kpSkDMqgzqAMpwxkUERRilByGd6u+//8eqt6R9qHExEx5tvJiejKj9hkL/c5
wCPelUSM2qf2BM85xUs+aHP2lb3IDFd4y2dt3X6wN/nCHb6zISvim4feidyI
E+byszhi2n9F9oVbKdOs4Jc2o9XYGbda3jLFH21Wq7Of3Br5xmb+avNaq/3t
1sFEQUT3v8mIBa3PLnAbZJJjzNaWtEm73G2a1ZxnnrasLdm1bqtMcYOF2pq2
bde77bGJByzRNrRju8XtjG28YJm2paXtTrdr9vCGldqudm/3uz1yiK8c5wf/
AFRcQj0=
         "]], 
        Line3DBox[CompressedData["
1:eJwVyz0oRQEYx+HXHXyXz1KSSDabjQWTLGKQgRQyECIDEwMpyUCSMoiBJCUp
Sd1B3UEZlEEZyKCIosRA8RhOz/+8v3Mqe0fbR9IiYsyzkxHRlR2xyT4ecJDH
vC/yjX1mT/Kc07zgozZnX9mLvOEK7/iirduP9iZfucMPvmv79rd9xERmxCmz
+Kkl7Xw7xRJespwNiYhq3niv4R1r+VMQMeu/OvvZrZHvbOavNq+12t9uHUzk
RHT/WxixoPXbuW5DLOI407Ulbcouc5thFeeZrS1rS3aN2yprucE8bU3btuvd
9tjEQxZrG9qJ3eKWZBtTLNW2tEu70+2aPbxlhbarPdgDbk8c5hsn+MU/SoVC
/w==
         "]], 
        Line3DBox[CompressedData["
1:eJwVyz8oxHEcx+EPBiLlbylJSjabjYlJFllkIIkMRMjAxCIlGUhShouBJCUp
Sd2gblCGK8OV4URdEUWJongMv57X9/Pu1zA02TORFxFTvv3CiP7iiASHecwx
nvG+MmJaX+o5XnGB18zZlnRarzLDDWb5YtvWOZ3gK/f5wXfbkf7Rpywoirhg
MT9tSV2uU6zhDev5bUvrJp1hM7Ns4a/tUbfqZ7bznZ1sz4/o5o93LwtKIgb+
rYhY8d+ILnUbZxVnWGhbs83rOrdFNnKZJbZ125pudttkC3dYZtuy7ek2t0N2
8ITVth3bue5yS7KHKdbadm03us/tloO8Y4PtwPagR92eOME3zvKLf3laRAk=

         "]], 
        Line3DBox[CompressedData["
1:eJwVzj0oRQEYx+HXRwgpn6UklGw2GxOTLFhkIIoMuIkMTCyyyECSMoiBJCUp
SRmUQRmUQRmuqFtEUTeK8hhOz++8/zqd2sFE13hGREx4dnMj+vIjtjjEQ47y
hI+lEZP6XM/wknO8Zsq2oG/1Eu+5yiTfbBs6pbf4zl2m+Wk70L/6mNl5EWcs
4JftQpfoK1byhjX8sd3qBn3PRibZxCiLeNbN+pWt/GQ7s2xp3al/2cPsgoh+
5thy9bAu4hjLOcW2zIhZVnufZz0XWVgSseJflnWj2xqbuMli27ptR7e47f9/
h0essG3aTnWH2wW7ecUq27btRve63XGAD6yz7dme9IjbCxP84DS/+QfKx0NN

         "]], 
        Line3DBox[CompressedData["
1:eJwNzz8oxHEcx+HPic6/UggpSUq2225jwiLLZZGBDGRwKDIwscgiiwzKcDGc
JCUpSRmUQRmUQRmIuiKKEkWe4dfz+n7e069lZDKTTUTEtC+fjBgqj8hxlAec
4DEfayJm9Jme5wUXecWCbVnf6FXecZ0PfLNt6oLO8Z15fvHTtq//9BFLSiNO
Wclv27mu0Zds5DVb+Gu70e36jik+MM1EbcSz7tCv7OIne1ls+9IZ/ccBllRE
DDNpK9VjuopZ1nGWZbYGvaCbucQ2rrDC1q7XdIobTHOLPUURO+z03mM3D1lf
bfcPJ7rP7Zz9vGSTbdt2rQfdbjnCe7badm1PetzthVP84Bx/+A+XH0K5
         "]], 
        Line3DBox[CompressedData["
1:eJwVzD0ohXEYxuGHlM+Qr1IGMpBER5GkJDKcUsjARAZZkJKBDGQgAxmYWGSR
wVepMyhKDEoMstjOZjMog3Kd4e26/8+v3rqp+ZG5rIhY8OXkRywXRvzlRayx
0HuTZSytiNixq+191vKQDazSju0W+5TtvGA3a7Qbu8++ZZIPHOZgdsQYX70n
+MFpNpZFnJdHzNppt0V+cYVN2qW2bv+4bfGPu2zWrrUDO68o4oglPGGrdqOd
2dVuV6xlim1aSrvL/N/tiQm+sEO71d7tLrdP9jKdeWv32peddPvmMH/Zoz1q
URAx7pbLSRazX3vWKu0ZtxrOs55J7U1rspfcElxlJ4e0D63H3nAb4DYHucdR
/gPWAzpn
         "]], 
        Line3DBox[CompressedData["
1:eJwVyTsoBWAYx+H3KHVcyjVKGY4UJRFFkpLIcIqcMjBhkcVlkIEMZCADGZhY
ZJFFlDKcokRSYpDlbDabQRnkMXw9/+/9pabmMrOJiFjw8gsilosifpMRayz2
32QFyyojduwae58pHrKR1dqx3WKfsoPn7GGtdmX321mmeccM67RHe8x+4QTf
Oc0GLWfP2h9c5CdXOJwXsc5v/y3+cpfN5RGXFREHdkFxxBFLecJW7Uo7s2vc
LpjiNdu1a+3GbnJ7YBuf2alltTe72y3HPn78/7Vb7dNOu30xwx/2avdaojBi
3C3JSZZwQHvSquwZt1rOs55p7VVrspfc2rjKLo5o71qvveE2yG0OcY+j/AN5
wjsH
         "]], 
        Line3DBox[CompressedData["
1:eJwVzD8oxHEcx+EPShzKnyvq6gopyqAoktQlMlwJZWBikoEsMpCBDGQgAxOL
LLLIoAxXlEhKDLrFdptBGZSBx/DreX8/r/o1ziyMzRdFxKKvtDxipSLityxi
nVXeW0yyNhmxa6fsAzbxiG1s0E7sDvuM3bxgP9PalT1o55jlHcfZrD3ak/YL
p5nnLFu1d3vBLnCJH1xlu/Zpb9jf3OYv99ihlVRGHNoJHrOGpxwtjjhnyvuS
TbxmVy3rIm7+/+32wE4+s0fLaW92n9s7B1j4f2u32oeddfviOH+Y0e614kTE
lFs5Z1jNIe1Jq7fn3NJcZAuz2qvWbi+7dXKNvRzT8lrG3nQb5g5HuM8J/gFm
hTrw
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj8ohHEcx/GfPyV3Uu5cUVeXTlfUDUpRkrpEhis5ZWA6k5R/iwxkIAMZ
yMDEIossMiiDokRSYpDlttsMyqAMXjc8vd7P9/N0XVtxfmyuKoSw6KmrD2E1
KrjBRm4zwXhzCHs6qQ+Z5jE72Wo71V36nL285ABTtms9pG+Z5wPH2W571pP6
jUV+coYdtpJe0GUu84trzNq+9ab+5Q5DQwj77LLV6iMd5QljPGO3LaEvdJJX
TPOGPbaMvqv8Pp8q3/OVheoQPtjvvcRBlivvsRDu4/6Xzrv9cJx/zNkebTWR
EKbcIpxmE4dtL7YWPeuW4hIzzNvebVm94tbNdfaxYPu05fSW2wh3OcoDTvAf
Arw4FA==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzD8ohAEcx+HficJdKaSoq1OkKIOSP11S0slwRZSBBZNEsshABjKQgQxM
LLLIIoMyKIOSlBhkuc1mUAalPDe8PZ/39317G6cXRxcSEbHkKa+IWEtGJLjJ
Ku6wjrW1Efs6rY/YxBO2scF2pjv0BXt4xX5mbDc6p++Y5wPH2Wx70pP6lTP8
4BxbbQW9pD+5wi+us932rbf0L3eZSEUcsMNWpo91iqes4Tk7bXX6Uqd5zSbe
stvWou+L/+dj8Xu+sNfWpd91Hwsc5Ceztpz+0nn+cJx/RUsiSisjprwnOctq
DlVHPNdE1Ot5twyX2cK87c3WrlfdOrnBLMdsH7YBve02zD2O8JAT/Ae+vzde

         "]], 
        Line3DBox[CompressedData["
1:eJwNyz0oxHEcx/EvZVDkElmkDLbbmJgkkZJOnTxGHsvlsRQpMUhKBmVQhiuD
SCQpgzKoG5RBGZRBUYpSBtstXsO/1+f3ffevHZ3rni2IiAVftiQiXRZxwEEe
c4znPKqImLav7QXecpn3PNHW7Ad7k0/c4QsvtD37zT7gJ7P84XZhxB/PvPO8
YmFpRF95RIv/iu07twRzrOKA1qrV2E9udXxhkkNam1Zvf7g18pvNHNE6tHb7
z62LefZwTOvUhuyiRMQ4S5jhlJbSFu1KtxVWc50ZLa1t2XVuu0xyn/Nav3Zo
N7gdsYmnXNKGtUu7xe2GHbzjqjah5eyU2yN7+cwNLaO92sNu75zkF2f4y39b
00Ev
         "]], 
        Line3DBox[CompressedData["
1:eJwNyz8oxHEcx+EPyiDyJ8kiWW6zMTHJQEq6gSQXOn/KRShFSgxSkkEZlOFK
EomEOqVuUAZlUAZlUJSilMFm8Ay/nvf38+rXMDKdnCqIiBlftjSitzxil4M8
ZJqn3K+OmLSv7FnecIG3PNKW7Xt7jY/c5DPPtG371d7lB7P85qV2YP/aJ/zj
BYvKIq61nF1i51nJO9ZyozCino/eCT6zkamqiA7/Ndnvbi38YhuHtS6t0/51
6+Ef+5jWurWUXVwRMcoyZjihJbU5u8ZtkXVcYUbr1dbthNsWG7nDGW1A27Ob
3fbZymPOa0Paud3ulmMX81zSxrQ7O+n2wH4+cVXLaC/2kNsbx/nJKf7wH6DH
Qyk=
         "]], 
        Line3DBox[CompressedData["
1:eJwNyz0ohXEYxuGHlMFnUrKIyWZjYpJFShhIIur4KId8lCIlBhnIoAzKoCSR
SCiKTlIGZThlOEUpSlHKYFOu4e36/Z+7t2pgvH0sKyImfDv5EZ1FEVvs5T4T
POZuacSovtBTvOYs73hgW9APeplprjHDE9uGftVb/OAOv3lu29O/+oh/PGNO
QcSV7VLn6RRLeM9y3tgedKVOs5oZ1vDW9qJr9Tvr+cVGrmZHNPPXu41/7GKi
JKLVf306tzhikIVMcsTWYZvWZW5zrOAik7ZO24qudltnDTc5aeuxbes6t102
8JAztn7bqW5yu2QLU5y3DdnudYfbI7v5xCVb0vas+93eOMxPjvOH/94jRWs=

         "]], 
        Line3DBox[CompressedData["
1:eJwN0D8ohHEcx/HfKWU4nTDIottuszExySLLZSCJbvBncAilSIlBlsugDFeG
q0sikVCnSCJKGa4MV5SiFHVluO3yGp5e7+f76VmeeGommY6EEOY8uWgIg7EQ
shzlAcd5wnxzCNP6Ui/wmsu856FtTT/rTRaZYYmnth39obP8Zo5lXtj2dUUf
s8pz1taHcGUr6Ki+ZRMf2cob27OO6yITLLGdd7Z33aG/2MVf9vDBVtZ9usIk
qxziky3SEMKYruMEY0wzUxPCIlu8r7CN60w3+l++29IJt222c5fzthHbnu50
y7ObR1yypWxnutetwH7ectU2aXvUA24vHOYrN2xp25tOuX1yij+c5R//ASTK
RuY=
         "]], 
        Line3DBox[CompressedData["
1:eJwNyz8oxHEcx+EPg1IukkUWbrvNxsQkiwxkIIM/gz+Dy0ApUmKQBYMyXBnU
JZFIKIokImS4MlxRilKUMtjOM/x6Xt/Pu1/dQLpjrCgixn2bZRHd5REZ9nGb
Q9xntipiTJ/oCZ5zmtfcsc3pB73IHJeZ54FtTb/pDD+5yR8e27b0n95jgUcs
SUSc2U51Ql+yires4YXtQSd1jinmWc8r26tu0B9s4jdbeGP70W36j50ssId3
tuKKiH5dymFWMM17W6We1NWcYS3n+WhL6iWd4irruc6V4ogNNnpn2cxdTlVG
DPrvULe6nbKdl5y1jdhudZfbE3v5zAVb2vaiB93eOcovjvOX/6bqR4o=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj8ohHEcx/HfKUXh/MtwZbi6Qd2gJCUpw5VBGc7EpFtkOZR/RTcQ5Vyi
hOEkpVswkEEZlE0WSSnDZbnNoAxXBnkZnl6f+757rieemUlnIyGEOc9vYwjz
zSFUucLaphDW2MDX9hC27DZ7lzEeMs537djuss/YzXP28UO7sgftW6Z4zxEe
1YSQ5pPf43zhJPOtvsN7U3bZLcsKF1jQFrVV+8ttnVXmuaMta3t2TYv/Zz1P
uKetaCW7ze2SMd5wX8tpd3bC7YFJPv5/o7amPdu9bm8cYJlFbVOr2Cm3T47w
m6fatvZjj7lFoiFMsI4lbVeL2hm3Dk6zkxfagZawZ92SXGIPr7Wi1m/n3Ia4
wWEWOMo/2QRAUg==
         "]], 
        Line3DBox[CompressedData["
1:eJwVyz0oRQEYx+EXpSif3TIoRd1B3UFJSlIGZVAKExMWGdwMRF0ZiPKRKPko
ktJdMJBBGZQsskhKGWS5iwzKoAw8htPzP+/vnNqhdM9YXkSMe35LIibKI76Z
YWFpxBxL+JSIWLIT9jqruc06vmj7dr19xAYes5lv2pndZl+yg9fsYk67tXvt
e/bzkYN8157tEfuV6f/vOcnd/IgZfnqf5zeXuVYZMe2/DbugImKHxTzghpbR
snbC7ZTVvOCmNqtd2Um3G6Z4xx1tTnuwm9ye2cpX7mmLWs7ucPtgF794qK1o
P3afW35ZxACLmNXWtXJ72K2Ko6zhibalJe1xtxSn2MhzbU9rsWfd2rnATq6y
m3//WkIq
         "]], 
        Line3DBox[CompressedData["
1:eJwVyzsoRgEYx+HXpRS5Rhm+kpRBGZSkJGVQBiUxMcki5TaQgQxEuQyfEtIn
KVkwkEEZlCyySEoZZDGQJAZFeQyn53fe/znlvUMdg2kRMeKJvIixgojv3IhJ
ZnmfYR7viiMWdIlOMsF1VvDBtqWr9C5ruM96PtmOdJM+ZQvP2cZn26Xu1Nfs
5i17+Wq71/36kcP/33Oc77YXPaU/OMtvLvLT9qtXdGZhxAZzuM3N9Ig9lng/
ZIInXC2KmPbfma50u2A1r7hhm7Hd6Dq3ezbykSnbvO1Zt7i9sY1f3LEt2X50
l1tGfkQPs7lnS9oKdZ9bKQdYxgPbmq1Sj7pVc4K1PLalbA162q2Zc2zlMtv5
B2M8Q0s=
         "]], 
        Line3DBox[CompressedData["
1:eJwVyz0oRgEYhuGXKOXnQ1IGRSmDMihJScqgDIpiYiGLRDKQgQxE+Rk+CwpJ
yYKBDMqgZJFFUsogi4EkkYhchtN1n/c5p7R7sG0gJSKGPCk5ESO5EV/ZEePM
8D7FBG8KIuZ0oU6ymCss451tQ1fobVZxl7V8sB3oBn3MJp6yhY+2c92uL9nJ
a/bw2Xar+/Q9h/6/5yhfbU96Qr9xml+c57vtVy/p9LyIVWZxk5+2hN7Rhdxn
MY/4bSvRJ7qcZ6zkBddSI65Y4/2W9bznen7ErP8edZPbC1v4wS3bgu1Hd7il
JSK6mMkdW9KWr3vditjPEu7Zlm3letitkmOs5qFt3VanJ90aOcNmLrKVf7rm
Q6U=
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D8oxGEAx+HXFaUc519XBnWDMqhLSlKSMlwZrgxMDJJFiAxkIAMZyMCC
4WSRBQMZlEHJIoukrgyX5QaSRDrhMVzP532/9/vVXWJoone8KIQw6RMpD2Em
FkIhGsI8S52XGONDTQirOq43WM9tNvDRtqub9D5beMh2PtlOdJc+Z4qXTDNv
u9Z9+pYDvOcwX2xZPapznPr/Pmf5ZnvWC/qdyyxwjR+2X72pSypD2GGUe/yy
xfSBjvOY9Tzjty2hL3Qjr5jkDX9szfpOtzHLTuYYav02ndcpvjLNT2YinmW/
c3FFCIMs40GV/9A7q/WIuzqOMcEj25atUU+7S3KOrTy1ZWwdetFdN1fYw3X2
8g+dT0Mo
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{451, 496, 4890, 4891, 4892, 4893, 4894, 4895, 4896, 452, 
         511, 4939, 4940, 4941, 4942, 4943, 4944, 4945, 481}], 
        Line3DBox[{453, 497, 4897, 4898, 4899, 4900, 4901, 4902, 454, 512, 
         4946, 4947, 4948, 4949, 4950, 4951, 482}], 
        Line3DBox[{455, 4792, 498, 4903, 4904, 4905, 4906, 4907, 4908, 456, 
         4841, 513, 4952, 4953, 4954, 4955, 4956, 4957, 483}], 
        Line3DBox[{457, 4793, 499, 4909, 4910, 4911, 4912, 4913, 458, 4842, 
         514, 4958, 4959, 4960, 4961, 4962, 484}], 
        Line3DBox[{459, 4794, 4795, 500, 4914, 4915, 4916, 4917, 4918, 460, 
         4843, 4844, 515, 4963, 4964, 4965, 4966, 4967, 485}], 
        Line3DBox[{461, 4796, 4797, 501, 4919, 4920, 4921, 4922, 462, 4845, 
         4846, 516, 4968, 4969, 4970, 4971, 486}], 
        Line3DBox[{463, 4798, 4799, 4800, 502, 4923, 4924, 4925, 4926, 464, 
         4847, 4848, 4849, 517, 4972, 4973, 4974, 4975, 487}], 
        Line3DBox[{465, 4801, 4802, 4803, 503, 4927, 4928, 4929, 466, 4850, 
         4851, 4852, 518, 4976, 4977, 4978, 488}], 
        Line3DBox[{467, 4804, 4805, 4806, 4807, 504, 4930, 4931, 4932, 468, 
         4853, 4854, 4855, 4856, 519, 4979, 4980, 4981, 489}], 
        Line3DBox[{469, 4808, 4809, 4810, 4811, 505, 4933, 4934, 470, 4857, 
         4858, 4859, 4860, 520, 4982, 4983, 490}], 
        Line3DBox[{471, 4812, 4813, 4814, 4815, 4816, 506, 4935, 4936, 472, 
         4861, 4862, 4863, 4864, 4865, 521, 4984, 4985, 491}], 
        Line3DBox[{473, 4817, 4818, 4819, 4820, 4821, 507, 4937, 474, 4866, 
         4867, 4868, 4869, 4870, 522, 4986, 492}], 
        Line3DBox[{475, 4822, 4823, 4824, 4825, 4826, 4827, 508, 4938, 476, 
         4871, 4872, 4873, 4874, 4875, 4876, 523, 4987, 493}], 
        Line3DBox[{477, 4828, 4829, 4830, 4831, 4832, 4833, 509, 478, 4877, 
         4878, 4879, 4880, 4881, 4882, 524, 494}], 
        Line3DBox[{479, 4834, 4835, 4836, 4837, 4838, 4839, 4840, 510, 480, 
         4883, 4884, 4885, 4886, 4887, 4888, 4889, 525, 495}], 
        Line3DBox[{526, 571, 5086, 5087, 5088, 5089, 5090, 5091, 5092, 527, 
         586, 5135, 5136, 5137, 5138, 5139, 5140, 5141, 556}], 
        Line3DBox[{528, 572, 5093, 5094, 5095, 5096, 5097, 5098, 529, 587, 
         5142, 5143, 5144, 5145, 5146, 5147, 557}], 
        Line3DBox[{530, 4988, 573, 5099, 5100, 5101, 5102, 5103, 5104, 531, 
         5037, 588, 5148, 5149, 5150, 5151, 5152, 5153, 558}], 
        Line3DBox[{532, 4989, 574, 5105, 5106, 5107, 5108, 5109, 533, 5038, 
         589, 5154, 5155, 5156, 5157, 5158, 559}], 
        Line3DBox[{534, 4990, 4991, 575, 5110, 5111, 5112, 5113, 5114, 535, 
         5039, 5040, 590, 5159, 5160, 5161, 5162, 5163, 560}], 
        Line3DBox[{536, 4992, 4993, 576, 5115, 5116, 5117, 5118, 537, 5041, 
         5042, 591, 5164, 5165, 5166, 5167, 561}], 
        Line3DBox[{538, 4994, 4995, 4996, 577, 5119, 5120, 5121, 5122, 539, 
         5043, 5044, 5045, 592, 5168, 5169, 5170, 5171, 562}], 
        Line3DBox[{540, 4997, 4998, 4999, 578, 5123, 5124, 5125, 541, 5046, 
         5047, 5048, 593, 5172, 5173, 5174, 563}], 
        Line3DBox[{542, 5000, 5001, 5002, 5003, 579, 5126, 5127, 5128, 543, 
         5049, 5050, 5051, 5052, 594, 5175, 5176, 5177, 564}], 
        Line3DBox[{544, 5004, 5005, 5006, 5007, 580, 5129, 5130, 545, 5053, 
         5054, 5055, 5056, 595, 5178, 5179, 565}], 
        Line3DBox[{546, 5008, 5009, 5010, 5011, 5012, 581, 5131, 5132, 547, 
         5057, 5058, 5059, 5060, 5061, 596, 5180, 5181, 566}], 
        Line3DBox[{548, 5013, 5014, 5015, 5016, 5017, 582, 5133, 549, 5062, 
         5063, 5064, 5065, 5066, 597, 5182, 567}], 
        Line3DBox[{550, 5018, 5019, 5020, 5021, 5022, 5023, 583, 5134, 551, 
         5067, 5068, 5069, 5070, 5071, 5072, 598, 5183, 568}], 
        Line3DBox[{552, 5024, 5025, 5026, 5027, 5028, 5029, 584, 553, 5073, 
         5074, 5075, 5076, 5077, 5078, 599, 569}], 
        Line3DBox[{554, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 585, 555, 
         5079, 5080, 5081, 5082, 5083, 5084, 5085, 600, 570}], 
        Line3DBox[{601, 646, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 602, 
         661, 5331, 5332, 5333, 5334, 5335, 5336, 5337, 631}], 
        Line3DBox[{603, 647, 5289, 5290, 5291, 5292, 5293, 5294, 604, 662, 
         5338, 5339, 5340, 5341, 5342, 5343, 632}], 
        Line3DBox[{605, 5184, 648, 5295, 5296, 5297, 5298, 5299, 5300, 606, 
         5233, 663, 5344, 5345, 5346, 5347, 5348, 5349, 633}], 
        Line3DBox[{607, 5185, 649, 5301, 5302, 5303, 5304, 5305, 608, 5234, 
         664, 5350, 5351, 5352, 5353, 5354, 634}], 
        Line3DBox[{609, 5186, 5187, 650, 5306, 5307, 5308, 5309, 5310, 610, 
         5235, 5236, 665, 5355, 5356, 5357, 5358, 5359, 635}], 
        Line3DBox[{611, 5188, 5189, 651, 5311, 5312, 5313, 5314, 612, 5237, 
         5238, 666, 5360, 5361, 5362, 5363, 636}], 
        Line3DBox[{613, 5190, 5191, 5192, 652, 5315, 5316, 5317, 5318, 614, 
         5239, 5240, 5241, 667, 5364, 5365, 5366, 5367, 637}], 
        Line3DBox[{615, 5193, 5194, 5195, 653, 5319, 5320, 5321, 616, 5242, 
         5243, 5244, 668, 5368, 5369, 5370, 638}], 
        Line3DBox[{617, 5196, 5197, 5198, 5199, 654, 5322, 5323, 5324, 618, 
         5245, 5246, 5247, 5248, 669, 5371, 5372, 5373, 639}], 
        Line3DBox[{619, 5200, 5201, 5202, 5203, 655, 5325, 5326, 620, 5249, 
         5250, 5251, 5252, 670, 5374, 5375, 640}], 
        Line3DBox[{621, 5204, 5205, 5206, 5207, 5208, 656, 5327, 5328, 622, 
         5253, 5254, 5255, 5256, 5257, 671, 5376, 5377, 641}], 
        Line3DBox[{623, 5209, 5210, 5211, 5212, 5213, 657, 5329, 624, 5258, 
         5259, 5260, 5261, 5262, 672, 5378, 642}], 
        Line3DBox[{625, 5214, 5215, 5216, 5217, 5218, 5219, 658, 5330, 626, 
         5263, 5264, 5265, 5266, 5267, 5268, 673, 5379, 643}], 
        Line3DBox[{627, 5220, 5221, 5222, 5223, 5224, 5225, 659, 628, 5269, 
         5270, 5271, 5272, 5273, 5274, 674, 644}], 
        Line3DBox[{629, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 660, 630, 
         5275, 5276, 5277, 5278, 5279, 5280, 5281, 675, 
         645}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1: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
iWIxQ9Uo+EPCvtOC8vZv+LYPNhag9T6XtOtCFCTxl7zvQbneUh11Zp4VRHPL
3L3dGwmFVDoswyg/H8o+XjtnAyTAPPrBLxKMxIF2EuV8byWC+h8ZAIfDf+nu
Pklg/FswlQrtA9KnJJerxU2g10QiXIQvCcy2ZjvoUf6A8u1wL9N74Lkb4k20
nAh7xt/2bqPcvF7qxZNsC6C9+9GtNioRlPzmOYRQvnSG62kFmzWc3+DytRVL
hONuD3QlUN5rY5HImm8LY/s/E3m2E6A5ayBFHuXnXcy54u84QNup2GZ8RgL4
6qfP/nONNGWRlQOzEcT3LozuTn+EyssPzzShfXs+I+TIDQ0zcOiI2r1T/BH2
b+SxT6CcumlPw5/DAirqshV0vT7CsRnJs5soZ5RX5N7cs4KgyTxcrPJHoGu8
VE2Celn6sfr/KLrvaCzfMA7glBKVkaQ9aNIQUUq+CkVFRsgPKSIhGdmy9957
byIrmWWHyN571ovX+1YKafg9/nLO5ziP+7nHdV/3ObfruaPUZIVnTy/Wt55O
RvqL3TwchDOF9TuXhdnConpglJYmGTsLxB6dJJxW3S7vwGN70KqcvHqhKwk/
HkerXyL8zoCoa8nic4iQbVn1dDPQ96O4IH6JeK/f8ra9zKZQE3u77/DFDGxk
ZzJ4T3hWEu259mPmeN+4k6ZnUwbMvu7MHCK8uDaCq+mKFV7P0td4dKeDZvPH
p8uEm9XTcVXL2eLs1bXHV5LT4cLA85p1mTjncvItFT8h4ouzHplsnI7PUwLm
3IR7lW8u7BVxxNvkUtVY0XSwFZKqrxH+OYVyTu+eMSKy6mTiVHKQUXA448V3
Kmq/xuUl5L2AfeTywX9cOVgLqK+MJfye1E/n3m2WOCVXdkeNko36Sx931hNu
rtyvufWpDdJobYZLSrJxqoY7fY7wx61nN6PeDrJHMjrZnLPR4T9lzkTkk1mV
z4NLWBwRp5/H/0w6GzMy35x5CXd8S3rf/t4JE2Mb6Oo5ssG4LNsqS/iJ/kJu
12QTHJH5XN6onI891u9v7l6got6TjpQmZo7a97yfJy/nY8NAarA04VShuJaG
KSuw3Vn9+vtAPr5fNexyIPyI2CX7L84vMSDEOMZGm4+ffaz0BYTr0kt0bQhy
wAa6k4Xc03kgX/Y+O0H4psjUHyyaTninvs9ItCEPvho9UkxEnsZUv2f5AJ8L
gnmzdytm5eFJ8vx9IcKtD39Mu/bFFOpaL8+x8r8BbaJrltpnKhwE+ldomyxQ
YJLgw7PzDQ5G6zMlEB5369e16iwbHFKX1hP/WYiG/cf3ThC+qhy3097HHuIB
882qvYUwbs/+dOgLkQcKxDgeKHaEedvkG+PiQnyZXj6pRvhFnf2yq+nOcOaL
PukWUYib22lOhxHuEralsifCFcZHX3JHWhWCwfF97yfCt3hU/Ht1yAyJLypj
3YWLEa53UJBtlBj3Aeq/KlEriNCvtpTsK8Y9y+xYHcI5L+lWdz96ibikKAbS
6lucsGbTKCa8eenUI9NqB2ypKlZmJ/KokImb1pvGqFDM+yryu8MJRUq65aKl
byHUJEKVJVwr9VCJ46QLdg3WXtKLeIvuHwvvIgn3sGj12rzohtOXJrsCLd5C
uuP25zHCi7KCzjTdMcffZ0omK8ZlkIoR4N7eTQWHr/jluSxrNN53GlS+W4ZT
lSzOJoSfYjzZzsBgjzuTZo1vTpchrMriczfhrEbpmcGFjohioLvGzFiGim2q
9y70ULHdaoYtcdIZ5Q40Uk++lGLT1KuWAMKvSfb1Z7O6wSILMxV1pdijpHZ3
jvC+h25Zb0U9sCcibC9LUim+3dYYFiXO48WbZVLDDYnxvT1lta/jHf4eHDu3
v5EKVfcdLLb0tliJiVGvzn4H2T1JWqGEc+/31Don6wC+kOVTjz3egYNCkdva
ROQVVEmv+BgnyDr5T298/A6xR/JXXxKeeVH/CNOsC1RzaYIT8A4fLveoLxDu
W7Sj1VrAHcHKpMuX973D3lpJG5WPxLqO0xSYcfSEa8b0RPtSBZpurMrXEF7w
Yz9YXC1xhubglaZXVahj0JzbUUaFocQYt6HSSzB/FaVtiajCpoPe/YmEu4pe
Zp1hc8SRLb8nWoh8mM2K8/yZcipqyE+zAm2dUbrFebzZpAra1dt/vCF81wNr
S+EZV2jfZ6Fp0qiCZjf/EaEKIs9J/rJjRtoDRzYMidXdqcLLD7YlpYSLPjrL
6v3WCw6F+3LfCVVBaKqjVJA4Pz5rXr12IsAKahlbOF841mDUQ8WjPpOIG50m
RQXhduB6p9NS+KwGwkUXaQyyqPCZyluJbXOEQDtOf1OpwbtCUhDTKypO72Gj
e6Tggg2hFyVO36jBxZu3RXMI9zRl3szZ5wa/yO97tflqYJ2ELZLZVEQ09biP
/+eJi+K78qMP1sBYN31ulPC1jLAdMaPeMO2Q3NrOWIOT2dpfjHOIfCZqu+0n
f2ssHXwnI6lbB9HTeQqM4VRUH1LKvthsDxqhiiedCnW4tuUh08fw9fsD6bl3
nZ2Q9jG1XgV1QMKDUNcIKm4I9dXRHnFF0Slfg1HuOkjVOJGEI6koD9oZkP/e
Ha71bg8f7qpDxmwK/VfCuRnKvR+oeeHG0YzUMdo6rIjEf4+LokKg7TjfllUf
SIzTi6ot1OJGhHSmVDSRnzBH6X1ztkHc8rTojwcf8K4gXqTMkZhvgQaHX1g6
IFtl5mOv1Ae4tvIMhDhRkZHAfopy1hnPHWcOvL3wAbV1Zxb1nKnYcEX7sg4x
vhv7nooEHfoAC2VTH2EXKpKiLCuHoj2gc3yFV5/xA3IEW1IYiPN+TcQzLhl5
b1yJ4VgV/VmPSBpG4U7C2XdrdVRs8UNIjWwc23g9aq/RyIe5UUHznKTvYGCL
P9sqkvc9bsSOlSD9/KfEeSFm81FlOkdolO9m05ZpxGSOzKMMPWK/4BXwNuh0
Rkm3RV3WpUZ4tU94R+kT8fkeR4N9ghsuLLVWkDkbIfePed7dgAqrFHH+AENP
8Fuw0/Jsb4Qwfbyd0TNi/Vor8sQK+8BeWzxMe7kB1xaUbtwzpMJdd4oxjdEf
lo5KjjETDdCZpr3O/5yKN9J/fz6Regm3BN3T980/4mWZX06bDBVOko19Qp6O
eHWEos7x8CMGY+rkp+9SUUb7fcv7Zy6gOTOETqmPEJRYnl6UJfKN5CeDkHdH
g2Zonwf/RyjvH9P6J0dFiwR7xHtBL3A4uHBfOfARERsutm1UINbF0BdfoX2+
ePbfDpHZzR/BJltxnO4eFYdrPtHnrfnj4VAWR/DXJlC7z+qtEd5ak9gSttcO
vu2DzZdDWjBhn/JvhZfITw58WGGld8INx+Zlu5ctuNhQYHOaj4rbzRNlvTSu
0NX2vfRepwVicycT/+MnzlPbJkgRq+7wjFgMXrnbgu+7Cg2dL1CRo0BbqfzD
Cww1XcxnhVrQJEQznSZAxUkmR6sdFF8cYNlc8ICzBRf+VdPUC1Jx7Jgs97Rp
ANr4tB28trbgY2t23chFKn43z/P+G7ND2QY6XumKVvQKkmfZWYj8Sse8qvel
E/j/DAwcS23FdMas4FNWKiwCik2zvV3BF1mxuOLbCtlpy/m3O6gIS/jywD7S
Az8jSM4fzFtROXuJfo2NitCzRa9l0r1RVB0b4KfRip7KZs9r7FQwUtr89xT5
YW3w4GE5yVa4m/aa2O0i2vn2RfjziQAcysi/xHS+FRa7aWuKOKhgKZGnC460
R1Ix9YOneTuea4d/ZiNT8PXT/WDHBSfseex1qVGvHb07ohrcFygIfkTvc5HJ
DdnN2d4bNdphyu7W9ZNCwYayMM+5s0R8DkqvvaLQjsgnZIYHXykwn9TNjLzr
gzyuT1NGN9uhKvtIr+obBcxHJ7aIG/ljMceYmnSlHQtatj/2L1LQ86xA84Vk
IN4enp/tONcONpf+dNMfFKgJFBikczkg17Fa0T2oA2uO04kzdRRszYlJYVJy
hv+L8c54tw40PKBNsf5AgeqOi4mmHm6Qk7Pqe2PdgbFaagRDIwUVd1eNeso8
0TK09ckHww4EzZ93CGqiYFutBif/gg+svuxx7dbsAHOStAp7MwVR7N8m6pkD
sOneCYExpQ6QJVq4gloomLy1dp6aEYhxhjLrz7c6kNh4eWxLKwW6coLmES8c
UOKUy6yR3wkjLwZB5ygKkTepe78sdsaeNnEfldROVGoezhGKoSDcP0ns4aob
Br8r8MtGdkI/uW9qNpaCpJt74nHVC4c5PbaI+XYi+XzSQHA8BZomvbF7HXxx
h+LHzOfYibMNS74XEynIOrhyyPJRAPiv775zwKwT377fpelJomAwt7JmbEMQ
tB70VtM97YT7ntO8BikUtLzRtY+vdMBxSXo1uc4u5FiE35kzoEDhgfyHDlYX
FPX9VyfwoQtk3lW5GkMKqg/fCqB97A69tbFl9rIujDSvkoKNKGizT2w7Q+x3
X4Wern7L6UKDwR8WDRMKTnpmmSsS8bArr7mtKbELtbd1mrheUFBrOVx+JScA
JpfGbGJDu6BZlMw6aUbMt4hATSmlIKzettvwzLMLiluPzkZaUNDFc3NLLREn
aVfU7RN+dOOu3X2eg8IUVOqd4WHTdsEb3tosc1I3ok8ox3KIEOPL3VPwsN4d
29NfikoOd2NL5X1LRlFiHu70dsk65g0rLydx9vZudOvmlS9do0BLO8aV6uqH
40wfy0Zqu8EcUaQzLEaM145saY7FAFQ8vpueWNyNx8x1luUSFGzi9lDkTw4C
TQUL06NX3aifuPIt+CYFY4b01tvFHfEfX/RkIEcvLpheeXViCwVGP55DJt8F
D9gXXR9t7YVKbMSZ64wU8DdLSfsc9ICh6dz502s9KGii/FTcRsHrp4W2H7y9
YXA7ZO7b9x4YbXPcqMVEQcxMc9rvFT9wL29+U/C5B0n/whSfslBw7tB/8uz8
gZg5rhZkONgD1krbed0dFKQrNJ7InA1C+nCe57HWHtAvOtU92klBytEuNd+X
jrjgKHz/+eU+nBe33MPesQCqOb1VyJIL/KZDVnC2D+3lNbtkuxbwXsW7NuK5
B44ZlWMrZx/sfqcJu/QsgM/gCmMkyRsSbUPnO9j7kHrivld+3wKsl37sDXnk
j8SHx7oCGfqwvIdprW9gATEpzY/EnwXC93zzCem/vdDU3BS1PLQAQ78Ns2Wn
gnH618YLG7/1gnrT/j+W0QV47XSwVMx3BJue1H0PtX5Il7/ZuBq2gITlEu0/
F1xRbkS6+ki2H/80XubeiySez275NKHEA2GCx59eEO/H73MCBhnRC+jqVrop
SuyDjE3XRmkv9UM1b+3Sz9gFVEtTawYr/eF2zS6xiacfNRKb2K8kLODXKOVu
cWIgvKs4i70P9eOZgOmaVdICLP+Oy77UCkaOrjWXJFs/zqbZLOenLICWY8u4
7ZgjnNtbefhfDqCAxu0rRWUBHlkspYkGrjih81Nxn/EAijQ1b+mqLeAZh2xw
7S8PBM9/1v77eAAB1nzJgw8WQNN56tSEmw/Om33VGLg/ALUcxlWJRwtwoHOM
+sMQgDM2WpK5dwZgp0Unk6W1AJ7Q+Euu7YFQ7w7lshddr9sjEkevs4DRwmMt
DOHB2J4/8VPywgAsdgzNqusuQHV8H+ngFicctb9P2xo9iKcC/JtZ9y5g0ej6
tdRYV+wNX9vb4j8I/9OWI+n7F3Di7pTHSX5P/GDLrqh1HsSlB7LpFw8R7RQS
N05v9MHZ8sK5NxaDuFFerVl1ZAGn+hSVWM4FoG6rcWa8/iBa7vUxXT+6gLTr
+eZNvwKxcknsr7PGICTUE7Mqji8goHLQxK4uGHTH/OYeKQyi4pSAAO+pBcQG
vmNQ5XECy0jJdGXxEOziWZMc+8jo0t1Vd7qROPfNOl8efDUEssnpqAuDZLiw
tKv9fuyJqkaJdwvxQ9i8ffHl+DAZG7bx2dfT+sK0SNl4NXgIeyrV77iOkaGh
cH1e/G4ABJc4VGk8hhDBokfHNUmG6m0G9+QDQYjtn7VbsxnCs6q9qaXTZBjc
DSX9nQ/Gu1cCE8vPh3D6g8UZqS9kkPUVC+5JOYFibhZq1T4MoYNnp7SDyKiq
jKnXJLviszXD9rd1w6DctLfkDyXj3YXezGf+nkic7FeZLxmGgtjY8q9wMtpO
G9K94POFgswVhz05w7hbLvSwNIqM1Hndq2V6Adhb6usimjiMuXj7PONYMmye
XxoQFA5Csimf/sPQYWSfSP/CmUDGZh+Nk7nbQ1B5MPCSlecwFtpf0X1KIuO6
+vGN/MR5f7Oq4iXzmRGkOwryfL5Fxj95ymVzRjfkFV+UGhwYwVqZTEmLNBkd
p6YvvS3wxFyy9ZBg6wgcgmf5smXJ8FOviP32ny8O3nu+6F0zgosnv0S6KJDR
e2CXa7BjAKwSDUIH3o7AZOo0WVGJDOlPZv5ZikFwo2urP/RqBLx2qScPq5AR
IKkq8u5UCOr8VzwexBPPp70mM6VKRtbkY6fD5k6QdyQi6tIoTK6+jThDS8a5
pdc8UZxuUK7p92+ZG0Xkox5VHjoyfhzeFMzS5gkxo7bnimOjiL1TspOTnowQ
VhdFJxtfqLVSXXu7RsFadaGGlZGMN6lHtywHB6B7i1vv3cZRXGs5prW6jQwT
k8u8p/SCYHxuWru6YhQ5HfpLQ8xkrCWFflMSDcERXs1LPPmjsHIiW7/dQcbA
D7OqW65O0L9J8+cM7Tj4yRUvnxbNY/mbksQmATeYZGW0HVgew8N7JnG2JfMw
qy1yqpj2xH4xB7+++TFsC3pd7VE+D47r59meh/jC+uX7S57jYwiUE/ns+34e
hX5vGrcnBWAtJaGTr2cMBz0XGX2q5/G4be32uBUxP4/rPexuGsM169SzznXz
kHv76eFruRAYez/+/Oz9GLQLeWVNG+bR83fjjwl/J9jzeb0tdRmHzK/5nsYn
89CrtdL6ds0NjF32ogL24+DkLdWj6s0j30rd4++iJ149E4/OthqHrwYNG7Mh
0c7bE7/p0nyx59Bc46EX4+g0cft0wnge0/tjeDZmB+Afn1uzn+E4ce5njxR6
MY+E7817aFyDoHjkfOov3XHYnn35QtxiHj9OHAhdUQ9Bi/fm+w+1xhFLCXwg
aT2PPzqp/rvDnGBxf1U3dNMEhDrevrfZPY/JMFmWaCk3sOVcVT9DMwGXvPDO
wn3zCE16J7H3ryeW3l3ZUL06jo1ClUwzB+fRR1/SGJLnC3/73yqyP8ex8nXe
mJlzHqxMmyPpCgJw+oy7zhB1HNK+E6t8x+Yh+lR8e7l3EPRvkE9pzo3j2KJu
xt2T83hf5bD9mXYI0nyupE1Pj8NESNZKm2ceDo11XZwRTvh98QFntPMEvuv9
96OgYQ4a/1XTXLtD9GepBouc3QSuVOz2Wf04h3tau6dVabwgotkbuMFqAnLK
eo+vtM7BJ/wEh8kbX1g6VWTkmk5gpHyLrVnHHL5Vpe259iYA2bXMyvcNJ9Dq
VNCR0T0HmpSfuhJ+QdA82RH3R3cCSxo8j3v65nD3Iv8NCd0QgGGTU4zWBFK5
hPl+D86hhHpfQ5DoT8ENrnFZ/yYg1lemGG82h4Av3/24brnBO3j3oP2vCdif
WX7xw3IOx7sSLbf/88TD2HI/2R8TeHD+0tfrtnNwaEDx93xflDv+934/dQIK
xfwfvOznwN/X9Z1E9OdJphm96dkJXA9O+dnsNAcTZ9W2bp8g3LWSCUufnsDB
qFsvN7vNYb4zXaRCJwTeD32v64xNwCl5TvWy5xxqfD9UewY44cK3f/szzSeh
R//TyJhzDspcooIuYm6YaueoijOeRLxH58HOY3PI0XHVs1nyhCRnbZ2/wSQk
vak3Tp+aw8mNDb+fZfqiTXL0tO2TSUj5rH2xPz2H3Veixc68DgDr4VurWpqT
OD9XRvPpHPG+Mxt74t2D4PVr7uxN9UkMfh71Z+OfA1dmKQ3ToxAIRWW0HLs/
CcbMMyEKgnM44beB5Z67E8gzJG7H+UlEKm3fq9I6C9+1rWypl9yQbDPCEfF5
Em/um2jXdszC5LnByPdZIi7Rd8hlTUzi5VzV7RM9s9hh94JZONoXI8yBg8XD
k/hj+arZpX8Wez+VpSAtADmxlMKqvknUnJ+dGhqaRfzgROiIXRD6Lr4fq+uc
hCudYPDpsVm8tlHlsVAOAd9kn0bdp0m8T5HvN5+cxb//Ku1arJ1QEBz/iFN9
Cl4P321ztZqFqmGMbuMpN4guj0qo3p9CwPRBlmXbWfx1pueq7vfEGjHb/RWm
4CfO06HpMAsanlPyRe6+yO/dXPNeZgpj7KEyjc6zMHvA/kkuOgBJvQbqs1JT
MPFicz/hPosMupi79SZBsOPQEmKWmIKOiaaVg9csmhyqnC7cCsGFY/nKvKJT
iL96/WiX7yzkV/Zv5NZ3gkqdw37H5inwWdNGcR6dxUB+5VleDjdkWCebDn+Y
QodnoV3UiVnklGQK8Nd64jr7lWW+mincPBMisY1nFmXjjlXnn/vC3Xcxw+Xd
FJgklRcszs6ibWL5SqhvAG5o23p1lExhkb/oxcj5WSjmy2zw0wpCSYpH7J43
U8ir0RsUFpiF8eMYdyehELzob51Sy52CGYQOhF2axcz82mrSfSeEzAycCBOc
RtmhV4/UW0kYGIzKOEDrhl1lyyI7+aYhXlqoOdBBgr+y/9XQTE8MZL0w9z0z
jX/Hx/Xv9pAQxBf+ZIu8Ly78N99Ge2oaCa8+21T2k2BiJzh3+WUAor79umN8
dBpn+h0DTw2TkNX2ebehXBCyDl2nDh2ahr2v0SvfMRKGVyp2xR4LgciupyXX
9k0T8d2scX6ShCMt4yMGYk7gZt2m/yBuGh1qZA4NSxLaJ2I3dXxxRdPStcdr
kdOY7VdxGbEhIZdl+QifjyeSvz97ER06DenITYeV7EmwdRL+7Mfri6PH98Ty
BU6j9nLmbKMTCbO+YxtMiTzkmUD7WJ3PNDbabxgXcCPh68bZPdFEHuIuwSUi
7zENUZku2lhPEjZwfmatXK9nuppaOug8jcySCel/PiSEMkYulRN53eLlj/6D
G2bA/5+X0l1OEib3XN3u2ewK/qRh7bh/0zjxWza49RgJdH6NxxX0PaHsu/2O
+uo0Wo/KnJA8RQK3Zsif3Vt9URnWLcaxNA2LfLBWnCZBiOtvsoFiABS6s2Va
vk2D1/zLXW5eEhKZeR5JHQtCc89OQ9sFop3iWyeD+Em4XeO8g/NnML4l+SWf
mJ1G7NyLDz8FSTCN3n4s9aMaEkLiyvXFZxASv3Zp8+wXPGEuW6sbMgA51Lvh
nugMLgr6VUaTv4BZ6E7A/kwzaPrmDl8SnsFLbrE3PF+/YHrkyOK9aVt4+5v8
4bg0g28fetnfLn7BqSqzgDpmJyjyiJ78zj8Dlsubpi4vf4Eg5z4p1RxXWOm6
P2o4N4OWcL+9ZatfYL/QqLFwyxOd9WWZ4Twz2DIkWM7/7wvcEnOEN5roQmHG
znKxSQ8jH3ebrtetrb90K+n856fY/N5L23CK+PmTedu6N8THL2v8p4+ZTxtF
Zv/o4shgou8c4XbZ7Ff8Wg1AP/V5w+Ndurhh3bo8S/jyhZ36FdcNUdjMWzR6
7gne94TeWncd5o1uc2+f44HSqKKKlA62LCy7kgjfwXBMwifUCCly5JkuTW10
V/3I/EK4G1P98N4iXRTLFQmcm1JFvoKpwSLhtSkn+sRP6SGWPpOJ7vl/MM2O
DV6vs/TZJrPGMFYf4tSqrv7V+0iLTk39RrjLxEBsBOsz1JQ/c8txU0bPEe+k
9Xpx8lyST2pcDaFx+PBJpx1KKIOMF5XwQ/7OB8i/nsOlXbJMKe4eLixR1Nbr
NRmW+o4xFhuh0v6+CA+3AuRuPNu7/n+74RfejfilGcH1goTNZQ5rkGLFD6/f
HzjdduOXS6kxsj7kl/FbWsGL5W/H+v2Ec0cy/1q3mOCMlkv76QFL6F8ykV93
jwtPSUZjpkgQP/3+2GVL5O9MSVy/52DJtq1Y5/sLPEzb7Xow2gLaqUGV6/ci
8hp3PVHbZA6vupLjHH/MYT5/NXv9HoWaBtOS3G4LUIZsUpjVzVFESn2y/h2H
Lbs9mL99e4FXtlam7nquoNnxZ3a9LjrHZkG3ParEc97UPm3e5IrHdCoSJoQL
/65qvlZnAUv+hOPMiS6QkBKQXvfai8mDT89YIUYy8pW8sAvqBwNo113gr1JO
YJg1FsWFVkP7nBFapK+5/vwEPyWR0jUbCNow7hwwccbX/vrn6/cWpnj3e4zr
vkQnwlf3MTkj9Ub8qfV7DsUzKQcZ91th11Rtng5xzp494BQx/I+K1GixPx/7
rXHGy3OB44Y/Jp+H6o+u3yv7XenoHWoL8tdzrxpb/PAoXaV6vU6yIP9Mym15
O1gU2JMtFfwQl9saOU74rcuVOa70Dvjz/Nqbk4O+8LP68WPdg6xfSc/MOMC6
/eqm/oe+IP/+2LnuBcv7c8TrHOHjcHXS7YsPePnl+dd9c1B9c8qxl/g19/Gx
3N9QPCqJuP3lLxXfir1ZzPjtETTfrVLwNhSfrm2Mnif8pFmrVlKCA2r92Hp2
GIUi9rejMJVwpoT9Xz3THcGY/aHf5FQopHJ38n4nvFO//ajxaycMc5590jkZ
ApXz5WY/COcje/5SLnLG80FPp/MxITB8ZLZ9iXDNy7PaIhUusK7ecyZAMQSX
ucWW1721weBdqbsDxMrMDmttjoXUja+Mxn+oeNxQkUkucsTxsBmtA29j4MgR
vNWKcKERv9OHpp0gN+7S3asdgwKeiBMOhEsxXRGS2+GCgl15Zv7sMfDduvbA
jfAanT21TqKukG6qvXWzPhpz8g353oTX/XZ8V2johrrI/cr/XkTjQ97XQwGE
n1ho2Tcd446Zyxxxb45G48YX68xgwuWtkj/SP3PCdPCDdxFWSeBhLpNTXCXi
icdjkbvVzhhheEn+eCcJwa1JmpqEz15oPhDG7ooPWUYmfw4lgb+zT96QcKmT
fUrDT93AsSdC7sxiIpL573NaEb6416PvyHt3BDHI+6h/SAQDD1eHE+E53SO+
OjuI/ff636O+kYnYxXxJw5twWd7+J1k6XqCNXTlQYZAIOsWwliDCJeglSv5c
d8HSgQcBf0fSkDMnEm6wTMQHhHOdrHBFf9PuJznZaWAjlV1xIDzo5c0GeQF3
fFZ/f1XNJg2a/wrtgggnj0972b72wJsMBw7GW2kICj/5MJnw3Nh/iqknvJAf
Fbj8dncaTG9zjBcQLr7hKMunBG8YSHBNaH5JRfyY3b+q9TpIttMJi3t8MT/4
pG/721S43nxQ/onwfY+pii0MbkQeuKBgmv0KjGPHen0Wqbixx/1zbpo7XpxO
mm0yf4V9ObO5GYSHkapMg8Q8EXFEcfuha6+gcl9yqobwjNqEEdNxL/zXe6bW
ZOsr/JCA0dD69wsquOnuvfQBp/g95vqeLPjsb1H6TvhpJq0Gvr1+iIz9+pM9
IQv8deQw+h9UiB2VoWcp9keENI+Ntl4W9HXiefcRbkdasY2rdscE1ev2S6M8
TNp3sHlRqNhddOTMDkdPFKXZTwUo5OFh3bGRXMI5o/tDXUS98drwsHWyYB7O
nq8p7iKc+aad3881HxQf376jaE8eqGVJyT8Jvx1qSnlc6YcnZc2q3r9ysS+v
NoGdSvRnm8+NpwjAo7jQhKzKXKyWHMnlJ5xuknT40KFACLSVLDe45iK9r7T1
LuFMm7LS/PU88exVlfG7K4WYYpglCZKIffOd4T3D294YZwxuaN1fCM2kdkNd
wmdvhxjePu2LVv2UmtG/BSiXGSkLJ3zboYaa49v9cY7uvM7CaAH0mRk+1RH+
/KcKM41FAFIUzIpWKwsgpCaTSiVceXhjhv6TQNzkfF24ObEAp49miO2epcL1
z8UdvcpBiLDf/ZjVqQARn1gzRAhX2NOQm0/nDcnTZo6jAm8hWFu/VXuciMPt
a+jf5It+Wan0jexvMXiF/WQK4ZaJ+aQ/m/2hWo7NJ34UgaXowrtxwrcGPXnL
7BKAeVnRJMmuIojH72veO0EFQ3pqQ7xLIG495rfXLShCL12NnDzhSvU+nmeJ
8/vDN7SJboFFOOV1WM6dcOvZsJFy12Bk6oVsTTYqQtwz3qZSwu/dT6nfFuAD
uV7ZvwVqpdjwePfITC8V2fvUlVTy/FC1eXf1hsulCPxpbXShjwr7wAudcroB
UInsuCrLUYqmmNozDoSzPHctNLMMRPvZQ5bRP0rw2/XzzibCX8XUcEd4BCFq
U/KL6Y4SOMb3H1u/Pzww6stWGhGMseW1izy5JaiP9H8oT3j1fU+p/owQ6FgN
fHjuUwKpL7T1QYRXTtBbJWzzw+rOj0a/cipA25S75NVMxej7C12WxwLwKu6Q
ibdnBSrcoibnCJejy+RIEA+Eh/yfsL3aFZgs98i42UKFBe+lsXriHBG9uXE6
TbQCta56komEK268vDbrFIztz+Yf8u6vwIFvvDXLhHcnbZbelkScL1jbWYqX
y3F09RP77U9UTOYuxZ6uDsVJpfFfl7vK4exzQSyacHsy9ftja39cs/cxyGGr
whfKcPnx91REPKuPaJkLwJZoaksyTRU2qZgNRxKee/rnee3dQciOS+zkHaqE
7Eq7G0MlFWXXXrP9kQjGX1KE566iSmj+HiwzI9zmSMS2QNMQZHz9V7fiV4m2
AnvLUcKP1vw3z5UYipkSJu8+3UpwBWZXilVRce1tnN2b1jDsfUo3WXC9Ej+5
ZQNSCb87aM2VZhCA6mXDTxemqkFJdZ7zeU3ke9toXx3OCMSQCY2Edls1zBWd
WdhzqdAr+WoWORWENUbD8ODyagT/uGYUSfhBv8+3WQ6FIKVdtLEyvRphHSkM
e/OIefXO/ofLf6Gwj9owNBtcjWMhQcNhhH/e9d/F5dAwGG0U6WJ1qMatq4sk
5nwibp/dOazTEQ51Xbs3Fw2q4XQi76wr4cd8rlMTdwbCgk7fQ7auFn0O9jzB
MVQszXBz66sH4Svffzcbc2tRPcu5iy+WCm3Xged8acEIO+j84mp0Lc743ptv
IZyUE+KwTAmBdOkoW55bLawGvmdpxVHxSSR5f9nFMMgu6Zw6bFKL450j95YI
1xu+Q2ftEI6shl2lvuq1WGReJrnEE/vOnsFlwaYIRO+b+7AiWQty1ZEnzAlU
NIfW/d5bFAhRTrfRgqJ6+PumJrB6UMGqscUsgTEYa67BPvYJ9XhdVLzcSLir
Vtl7roch4D5aySvlXQ/aOP95G08qftv6BqYUhaKwxrSN2bwebc0bbbm9iPkj
KpDGuTUc/M8PPOt6WA+BSHJGN+GmvDpFsQ8j0G1ziinkdj1kBY6aWHsT+e1C
jwX720jAdnOxnGA9ZFLc+vb5EPlP7Y2ITTJB0DtwnXXj2wYc/6ZiOGVERZXd
m7+FucHw+3mgiS+hAaESJhVvjIn9ZXRtWYM1FI/1ixcfeDXAtMFB1dGEWF9K
+y4xmIbhR918qPuLBgRuUrgtZUqFycVVw9zucHBMRr7JftCAoLQS720vqNhF
DpCWF4xE56Wke62SDWB+6ry/mfDv53tcvoVH4X3HZ2syXwOqudz/upgR+e3b
4e1KY0HIyy4+OlrbhEoWY5EvSlRssH/AGXknBEuZY/r2OU1Y22Iz36VMRfo2
c/+B0lDM7nYM3x/ehIZv5xLK71NBOS70b9eJcCzvnc8ucmhCrrKCWpwKFYwR
7znkQiIw1mSYf0uvCRFHXx2y/Y8YL5ODru60UTDj18gaUmhCd/za7D1VIv9R
MKGWGkYT64E1VvdqE7QN95WfVKOCl71Gl/ZpMN6c6v3ZN9IMmcK50jUhKiB3
ZLP4RAi2TtPm//rQjOtuLJsZrlCh7hNd6awSBrcjTCW78poRyxvPtl2YiG9N
DwSriPnfO1PKci6yGVWX7k5uvUrM/4tRW39JRYI24kPVdadmPGsaMt4kQoWT
rd34mZooBP9d/iSn34ytBRtqfhEesVVE6cHlGNQL7BRRu9eMYR2XThKoOBvT
dvXfXDDU9z9ItN3QipP/Ni2z7SXOF4Hz2lnPQgGBpE1n5z/h79ndS5f3EfuF
6uozha9h2EMKZhvs+oTfv3pN1fZTseYhSV0xicDF9gcdDhWfoDFLeW55gFiP
v7mco35G4o3WeQnO1E94Zco853eQigCJ4ZqLltHYQhE2e+/7Cau/5ybiD1Ex
Q1N7s301Bn5eRU8UzT9BvFNQ+dVh4hx3nFdXQjsE7rNze0/tbge5X2iAeZkC
Jk157bpvodh5SENVbls7fEqzDRVXKLBy2UUvahcO3y8C0eY07ZD7vUU89BcF
sbJro8WMkbA6blJ+frYN7bco99tWKVDfEmjHQ8w3XjHdO0YdbUj1WMve+IeC
/7rkLKK4YmBgS6JmlLahuWkSfH8pCDr28T+6vFhY2gRkDyW24YfyNVbVfxSY
u9uVd/aF4Eur4L0Fvg5IyzU8nG6nYGcvz13fZ2EwSSn8Rj7eAfoKdWGpTgqG
NzlLi2+MwBt9KYHZvR0YtLU5kNFFwcZabdHliEj83GHKOcnUgYzogo20PRT0
PC7OTz0bjb32ORV9GzrwIyqCotBLgfJDdZ67dTGQ8rCg/7hEvK/lh5GEPgr6
ynBxUSUOtktym0vn2lGX3d/+pZ8Cd1JkWur1UPB0K9A2y3biftrkF/d0Cgba
v0vQTYSh+gNbd6Z4J26f2uu8LZOCxvNdHBr2EdjwT+ury6VOMP/hp3hlUTDS
8iau6EAUClgXVNROd6JusPDkxmxiXK6wqdNXROPTsMpO3sOdeCN6hM8sh4KX
+gY9Cv/FottKmYtmZyf6dOkZJ15TcJrzmlfUShzYEerVQk/8XZmfuTfyKJCN
qa+tTg1FW7bagw3GXXie3nF7yZqC8jei46fvEPsCqf1K4+MuzF4/TIqypeD6
TYNfwd8jwPe8YKPX/S5YuBZzCdlRoLaS5LUUEYVWn67Sm3e6cFl92792ewoY
ja4x30MM6I8waNKKdoG9NNxc03G9HkLahuyZWPyJ5qYp5u+CsGevz4ITBU2p
AuN/veOxf5U1QvdEF95VSomauFDg4rND4RxtGChJvvt6grpRK99Hc/42BRSB
3a+Zc8OxJ8SiydOtG2fn69N+3qHAYiS3c14tEldKqmkuW3fDov51VaEMBRxP
DARqGaMxk6FVP/OsGwYZy9L6shQEz0zeCi2JQSVJeZ/vo25IRzLK7Jen4ML5
V+6PdOIgORa9mVexGzbDilUfFCgQBW8eG2MCXLrPebdKdoN96XaKniLRD30R
Mb/vhUHBXDnJvagHun13WbCbgkUX6ZQyhgj89y+0iS+zB20t5v5ceym4SBMo
YfY+El/HfnIMxPTAIqlejXY/BUPbgyncptEwEfUPtA7ogfjHIIv+AxTwNrtu
HzoRi6+uLy9zuPQg5YzQWMYhCvRl41hch+OQJj+2K9eiB/JndwebHKHgWSYj
f4hkAh459HJf1+/BlvTgIAEuCnwGsi4JJYbhuSmPqmZ/L3zal2jOTC5gwWGT
wTW1CIhne1lvbemFMcfwV97pBYSdfrBNgiMKeR+UH+RW9uIfyxums58XELXw
zVGsMxq79T4wyhT2AoP1KkdJC3BUpBEQ9o3F777tLl/SeuF/Rb2DbW4Bblwt
vmcl43Hqi26rTVQvnmZ+fPFnfgFfV6RXfRwT8P0fO4XRrxfCElpiowsLaN82
IUzzOQzp1OfkgtU+XNAhZ27LXEB09JbQd2kRmKpruv2I0oew2xX6514t4BjX
f+fNn0ThbOuJ7YyTfZh+viJ6O2cBlaFRL06djEH2r64LOT19KGjqP/kwdwEm
3oHVvaRYYh/Z33CrifCTUZyG+QtI+sVg8zIzHkPn5BsnK/qQLWh3xqxwAXJm
s45MRQkgNTQLm+X14b5ls6RZ0QK25cRLG3KFI/GHgv6nfQMIk0v99sNgAUen
zbJkZiMwonCH2YN5ABT20gKB5wsw948+zp0bhVKRmULhjQPYaKRl8tx4AXAa
P0RjFgOXYCv1+aV+/PX+dC7JlGi/MsePtstx8LDTZQmZ60ds2LG5T2YLOL/X
2+EOTQJGX7B3CI72Q/R9XMJ3C+K9alXlz0wlQOQcKbmrox8j/MbyLNYLkGW0
CUlTCUf/21qL7VcGcWS/nTXt2QV05Alw7z0aiU3Ux7uGzg7iwI64ixq8RD8E
+b73oBD7cvOaYhLnICxGOaeL+BaQ/fdz1jdivYy8X72stWsQdPon7DcJLKD0
eKbkPec4XJmsajrAOIjvNc30MhcXEGsVv9J3PAF21OrNnX8HMMYm8NJfaAGB
E1vXaLclQkjYZMn+2wAWXvuONl0h5kNZTEyHRzg2X3C72qc8hJngo5Ank3Gw
W/nhbeVIGMX84n9/ewhF+YaNzRQygvtubK46Fo2aHG7DOAwhuPnFRZFvZAjN
fp06+yMGJ7ncvlrwD0Hlsrh35iIZP8+Oy4TXxKGn8GXlrRNDoA+i1mxfIoNJ
Tk7Gllgvkds9xnbtG8Jqkt+I3goZhkbarJnnEmHYdlhxmGkIW21EBqtWybCf
+7XrQH44Lqu5KEYYDyO569mRrRlkJIxJnGRzjoTb2u74OO1hMIzVH4zPIqNs
qXgjnWI05DiudsaqDEOlL/AvTw4ZnMbevynHY4l88MFiqPQwpFQ7K/JzyVDK
/Peoi4jbIhpfN7tfG0aosq8qbwEZZj8zxe9rJ2CBW5/VWGAY57e09qe/IePG
sdmJ6zKJOBt+h+PeqWF4/Erh311MhpxMjUd5ZzjWjJScG91HUKRuYajwiIwo
L6Ww9HSiP5t+5y/ajCDrnNZjmsdk/Pig9Z+fbTR+qaSachiNoLU6XThNh2jP
J/2jz+Vi4cD9roX/8QjyvgotiT8lozl4UUzqeDz6RwuqJe+PoPg7W8CwPhlf
t12n83uZAPH830pKd0ZgoSLA8MyQDLrknoeLTxIxZbAjUE10BKs7kh8uGZFx
a3b289RCOBrEdO7MRY5C8/F+VcXdZNx/3OMjVh+JlOw3TvAbhZj4Qu6efWSY
lM0MxMZEQzUj5ZeP0yhU7s2Rew+QUbvXbN9301iQKsKLOs1HsVzzl8X3MBmS
1PE43I5H1L2fZSz6o1A9wLFPmIuMyxr1/dcDE+BWws10U2MUdHI8jNPHiHF3
M2ifsE0E7dZXhWYKo2DLuTDicpKM/BIGzo4NEVCsOvPEO30Mln+7ba5+mkfA
zp84PhwJkSKGe8wxY5iv/2fL0T4PhoylX2ZF0fjTUs3vHTCGG6VtRnOd81Cp
bo+u9IuF3+ssxjWXMex3Oqn0tmcevxYljTfoxsPvxKERPasxPDxJ5bHpn0ex
3c6puIQEVB53yG19NoahHczfLg3N41/3IdNLvolweHvBjVtzDH5brFKoI/MY
ecOYVs0agS0Cxxw574+jkUJ35bLDPM7ee5gdRI7EwUZW6kv5cTjauXCedJ7H
vvHpmw8aojGUzMDXc2cc553stzK7zUNuQaaWKykWoa/O3jl5cxyLqq0/KB7z
oFG7/3TSNh5Ni6mwuDaOgFqZkQbveUjGa9S0vEqAZmU4U82VcfxqmKqN9JvH
yYdcvEcjE7H55bnyLYLjeN9ulv44cB6Hpbk6lvZGwCn7wPeRgXFoVIXK2pyf
h4W+IF3bUiSU/CjF97rH4brl1i2bC/M4sxjQlEjsO39+M59vaB2HXozC/RcX
58HCpK1v+DoWKZGRGgJN4zg27Gylc3ke6fwk/gte8aAopUnE146Dxig/W+7q
PO5vyRL8VZAAMYN7M3Tvx7EiVfJVQHQe0sWLvN0JiThyv15Up2QcgulW4mxi
87DJSNZ+czACo6GtfO33J/CkyeLq+Yk5mKoL7Dr6OxIlhiI/tRQmYP5cweDa
9Bwsjy6r+PVFI3bD1juL0hOoP7rtw60vc9iyZ7fN98JYlO8TFbKTnMDL4GdS
0nNzyEj6WHs3IB4Sn8nv1+sDnImW/Cm5MAfG15yV8m8T0LnANeZ2dQI35U0b
r36dg+TfR9ZWKYn4uPd3NN2lCeTRN1XzLM5hkTL1CwcicFP45tG+7glIlt37
5OM/B6XYzILhX5H4IHlV2rNtAnrecrKvguZw//uRjS96o3HjnyVF8OMEznPR
764NnUO89aLAJqKdT7+sMIzXTUC6RpirO2IO5gyNof7+8YjYWJnoUjmBcw3v
jUaj5/C4LU2QgWinbV178dGyCUTlPlibiJuDT1q08w2ineZbL8pUvSGev3fx
02jiHBQf6Twd3xWBq3xSl3qlJ7GV8jDhvfAcps+Zs0osRiKLSXYlXXISLbs5
w2cxh0/pe1RS2oj1rvmcw0xsEgdGjKjbxebAnzPh/fdVLC5LhodfFZnEif9Y
M3huzOGYpubPux7xmHtQbk0rNInfeS2V16XmcG5TlJE0Me73PnTWVPFPgmuz
sYDCnTk4L1t9MiTG/fyBfmObs5M45dxBr353Dl16c1IjWyOQS6OJt7WTcKrq
fr9EmsXHM2eFs74QcX480z/j/SS+lZOkT5NnsSd704BxbTSa+ptPhpVOImHg
r7oqdRZ+40rP+ONj8S0iY5v9m0k8UepdcP4+i20rjDco1vGQ0zh6VSt3EmZy
Qn9Sf87iSCR9vyyxjuqWjldcz5rE5Kfv7tUrszg5wW17nFhH199Eex9InYTA
my7/3t9ED3U269j9CUf5cREebcEpBAmcv/g4ZBY3BtvsVPoi8foue7vl+Sk4
C5G8k4ge7WsUv3uugFhHui+y3E9P4Va/ivNg1CyaZxqOr/kQcWmBpyLwxBT2
xd/cvy1uFu3RvxQanxDjTmGmD+ecQvOgheLFxFn85K7cIZGYAAXWFZ/wA1NQ
iSw6o5YyC+7Xaz8S/RJR41N5N3j3FFxetSdbp89io068+NbZcNA8ut/QkzoF
5g/MjRcwi8d/MBFfEwmB03QKWxOncC10bJ/19VnQ6jTeOEfE+a1OjRuFY6Yw
LsEmWCoxC+XMz/UlZrHoZdYeehI+Bat+A/bvkrNQG7ude+VuPLYeiB3yC5rC
wpeCkqN3iP5x7c1UDUnAPs+Lm/N9p7CUlXdQ7i7xvqsTjuyOiZBo+qfW6jGF
7J8CNyzkifbTB73+2BEO2bbjemus09jfNhYaMksCi9u5V02ZkciIoxdV3j4N
ybNy58fIJPgPOTrXOkYj8dPjM1lbpnFlzKCE6ysJ7k8jvIpVYrHYRuZf2TiN
Ip2lU5qLJJwJdGVLPR+PyUI5xWtrU3hQUeQStUTCwdrcknqXBAgdlgp2XZ2C
9B2LhpZfJLAFJvx+Y5QIQXkfat3PKXiubP228ocEnbwUmQ3F4QgJ6UkYsZ4G
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
wO7xzbJsMrIX9yL2ejjqd794rThMgtTVrEfpp8gwDR23OsAYhcggNofZPhJO
uXMmrlMg49QX6qegtmhcOVQrl9FFQuaHuu+W58iIPUNxIz2LRaa+9doLbSSg
J0ah5gIZrQsic8cfxCNijdvA5Hei/EXSP3apkkHZNOkbqp4ApkDfT/71JLic
c+y00SAjOMnFp0swCf1jnMW7a0iQydk3X3aJjO6d/93xyPdEvIpwebHwGPYG
+Nj3rSHjb9vxlS+yfjg4f+di+N4xaC64VwWwkJHL4KK+viIIbhKtPw0Ex5A2
4X7kACsZKvQKIZUL4eD4dzHjIP8YTtzMrPyyjozE3tHHpy2i8PjsnMHPnWPY
sW/LbV12MpLoQieuPo9BakmTZP6OMdypZ5AZX08GD7PfB/MfcVAeXthixjsG
zrR0XsuNZMgfXHv4vp48DEjzo6v37c6rpJxZzUtQJENhSPRRxPsIUWYhPhMY
GNWeW80/8GRtgKljlwp+XlzkKrppivh0QdHV+3mjW7/258RrolD7HofCYzPc
Wps9vXpO4MmOF668lZfRX5030zRmDu6462Gr5wRSzUPYA6avILgxt0pf9BYk
1OU5Vs8JFNb5e8/y6GJjgqczzdoSFUdUbFbzov+9+FRKWl8S904Xvm5Ossei
1JTKat7y2uWf/UVZCnCrchK+WHUXTb8asZqfPFogv7gxVRW/M+4aN007YCV8
V9co4QuxwmV3VS7jiHCylcYWRxzf1M29eg9vTUzVPQYlHSw+JMt9k78PfXeG
36v38F7aEr0UekYPRUraX1RNnWA1FXOvk/Dk7wsJobsN8dGjh6M+zBkeJjHJ
q3nLk9MdyxqmpODim9KLeE/IhagJruYhX59jy/2AWwk/RL5VKGh7QejSv1vF
q3kenEyWa3QuYlKVW+/cFm9kqrTxvSDcN//zlZZnV3F0p3De+VZvJMc1HH26
Wj9hJ+70zenh1Kf3T5WjfaB2g/w2hfDOVp4Nv/cY4d6dmPP/XfSFapNI9mp+
csevD6Lvq5iiV8coRJXTD14HQlaCCHd4+kPutqU0VHb95UvuDwKPlsxjHcJ3
J67/9dpUGXyNJz5s/hKM5JRwEVXCd5049p3vPy1MMGiUBLwMgYncv++nCJ9c
L8F0Y/Q6gs5+X/oTHwqToIBkidU8EqSM4cYPhtA/qO1r5xEG2zX7gwVX85Mv
jxtSg0wRZOB8Ycw8nOh/w8mbCffkjtXdcOUWpGLbTupoRuBaclHT6vmBjFd3
3IwGZCDxUkSDFBSNteU+B7NX6Mi57fqDLU0V9y7bcUhzxYB8SNAxhnAO2fgk
u31XUVkZts8niYhDG45HuxFuP27BNvBXH/V/ZiOa98Timn+zpxnhSpH9o08s
TXBv+96z/HmxOGk2fkZ99d7e/gsHdTssII5wOesjcUhLdGmXJjykwekRh8Jt
XM0psCh9F4cxm4gTOwivfJZDmVaSxXNz4W+ZWxIh56vxPvgvHZfPDFMYPmjA
QJ7ro3FBIp7PPfhjSTjXoRUjpelrMHwv479HNQk/rwiUrOYbj/okyrz2jyGM
LprwDU0k4VHQqfF9hBfbL1yxYDIHU5i9fYpPMhzzuiKYCI88lddYt84aLgdk
PK/yp+Dm5p+FfX/oiNvHuDYuwBYXtnod2/wuBSYXglVLCPfKye0KNryImE0C
tj+T0uFem/Ywf5mOAceSapakG9joFO5w9Fc6zj1ibvRYvW+XfETs9KQxrJ+O
ebgoZ8CWPZZXnfAARfdKV79biAjWDP6QngHmcU2XHYR3i3aKlAreQd25pZB/
8xmgmuIXaYkOHVZx2sJNe8jv5XA7rfEYzFtNPF+s5jfQEUqPmTuG9R+7mPbe
foLdO0pOuCzS8Tv705MrXZdwTXxCxbXxCeILeUnHCS++UXCG7Yg+3EwFBdsO
PQVTxNZjiwt0rNUdftX/xRR8VWseiIU/xbHS4uMlhHdWz/TKzFhh/je7ugft
KeaKF8k2hP8Urpb9wmmH77NFES3qWSCHU87uI/z6QqiBrYgDhPhcZYTys/C0
Ofa/3nliHnvz0Jn51AmETnzRaGPKgY7C/E65OTqOl45c2HBWC7fm3+6gWuXA
JVmnenSWjoP7g9VUew2QW8nwdU17DlZ6UnJDCW89q36AK84cyTXzGryncjH2
srFBivA728IHOtRtMM/J8EjsWS6CXGcPdMzQ8XZ2w2dVX3tUSrrkHOfMQ7QB
f60j4bZChk8ODt+DpGaN4QXnPCyIX83YQngY9xvP+gxtCAlzdanbv0RRnhvF
/ScdZzzdc+9xGYH8JP/lt9GXaN7TnMdBuN2fZjkWrVtg93H1+E87H3ddTx1J
/kH0q40aOXUqthB+onms+ks+Njm1ewsRXmISdydi+i44bnmP7dpZAKFvWUm5
dDq2ig4ZXQ69j+tGZVGdWgWQkPjscohwkaz9c0+fn0TkJzMvz8JCTDgnTlhQ
iPd8rlbPmrmCHwpbN/5HK4TWDn6DwdX7dht3POCCMfwGch9yH3gFm84KkUuE
H9TbYNi8xgr2sQlbe8xfQVYt9lTlFB3P1h44fd7EDns5tTzSnryCo37Bk4OE
J7KvP/1E6R6M8i/VGAy/wotjh3RjJ+nIe1iy5t9+Z1gFspMEdheBSUNIf4FM
x7dPApo/Wk+hMPmO9LPoYgxV7JvyHKPDctvTsOcndHBzrXiRWmsxJg+cYekk
0SFg35px2NAEJWbKYT+5S/Dlpcvv/YRvr3jzIPCJNZJ9OF5Ha5WA48vPYsdR
OtjdHybR79qDJFwvIBlXAoHoL8oVI3TwizhsS4xzRJbAt4qG9hJs7dzxioVw
4do6Et64wOOaeZDp1tfI+LOZpjRMrAuHt1i1OZmiU+fE3utipXifWXDNpJeO
8qnO8CNHbeDKwDH3zKYUCgWk/tAeOoKNXvLWOt/FbGnd2Z+vShE9FPKmoJuO
T5uDjzh03cdlstXfo/OliGVqG//eRdS/mNyeXbKu2Onxm9v5RBm2/qRYTXXS
0SYomiHvdRoPPa/8cu57i5qoNL2aFuK7ir0SZ7N0kXP/tZWK0DswtVTxNjcT
68vaM0mzfmYYqfyXtNX6He5wrsttbyLmvfGyH7Wld3Clp9hmoOgd9rc/3ty+
et9umml+wz0HKJ/Tbc9Yfof6A980vn8jxnth0WWpTc4wTXP8YHD2PS5lfjH5
3EiMO1qFUmy2G8hZ0Tx8Ie+J/V69ZnEDHX/a9P80MZ+B2wfJ7U9Pf8Svyfqv
CV+I9npNQm3ddfCEPOWsCPmIw/rVKY7VxPoy+685LtAcFa+2lLV3fETAS0q1
+mc6djhxGO6Nt4WLl+XKmGA5dnIGKwlW0TF6MEp8yfwe4tjiGn5Yl0P1E3k3
rZKOOdkZ1m/HXJAi7bdp7k05rNmuapRU0DHo8CQzdb0HEi0fdrswViDm8L4u
x3I6jL26OPI9LbBX/+bYdulKJGjZFT0uIcqvLfRJ84Id7rEoMhy8XglZn1eZ
isV0BD3M3n5B0xHBN3fUHfeuxNrjTDZDr4j1N8p8m7zOA2SK+0gr5VQCCVVc
joV0iOpZPOaR8MTMvj2y6k2ViNfUi2YpIOY3yh+O58tncGRWzLXhwydwqHn7
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
3y2Ii5+dWJ322ogfXTE8tli/W9Fmf5jHghjc8Pdbo6A2rq+5pbBY//J+cS49
Uvgx4SmuVOvmooXXnJJ+i31hJqq6dezHzIl8eWbAkwZN7PvoSyzW0cSXX+0x
vGpGYFnrad21mvgnb9E+tViveRxdxgh8SUiaKDksXeOI2s5H3RqL9aC5qGHX
dmfi3ZByCZfZM4TKC7fpkjy+5mCN4DpnwkQoM4mn1QGWuZLWi/Nt+9XVrAtV
nYhVa8fl10g5kN+LrLNa7DsTXvrrSsAL4qefvhtfoD3E12lWO5L8R+bRM9TW
54Soc7rThh92cM60NXEnuY/1N50Xa0neJH5ok7odRnO+fVysc90IpzHYv3gQ
j1NqakdeuePwJlh//McC74CUhtRfd0K2YO6bpLg7DmxpGG0l+dHu0Jv3+NwJ
jZNpeU7VbkBleeMoybt3uky/2utGGFaKb26/54YPyYKy0yS/oXdftEzelaiq
6tgmMu+K9ntfdy/2ZwkeS+akq7kQ2k1znx6HuSLUf2PIapILq+R6bX74kogz
+r6u4pArZgfeugqQvOtXADVz9SuiQ/aHj06VPxjTIdva58nz7f2SXfTXh4g9
nupV6+aPq41in6dI7pWLmiqaN3Fbn3f3fiV/xH80b11K7ufCMUOpzz1ehHTN
Vq1A0k4c/m60cyvJ3+w78Len2pP4aVd6dKbVD9E+G2olSa6pcXff2HsPojj+
6/s7wX7IqzUrOUfyikCimfbGnWjU8+4sv+mHwK92bHdJ7vNOQtyMK4DwDK2/
fkEyDHwnxG3/P0/WrGYlx0N/Iu6t0cMKWij2WhYYBP1dfG9z2/3QZj/iRtaa
z8cSQiFmf9g0n+S02k8nxKT8iPd6OS9z7obianGsXzfJpwSzD9uIvyLW5iq9
Et0YiuPJcw2/Sc7j08cR/Z8PkereMR3TEgJ688kdG0k5XDgpM0sUeROS4wpv
N3iGoK7F3O8Iya2sTs/lWwQRH0/Pz425xkBI96SS3RypPyfWTzypCiSc+PsO
f5KOwa4bj5+lkbxqxwL34Q2BhKWKtnLSl9fgrLR51UPy2w/VrKf1A4idh9oU
XENe4zLz2jPOPyw8sdU/kpXvT+TsfrxLX/E1HuDfRUmSG1U6Kxlx+RPrspxY
p39FI1jO6udtkrs3LanaddOPUH6omCKYFI2frkUOLiTnqk1f4toYQki0bZTL
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
QsgOim99sbQbc0GnUle0MaD14uUJY/9kol6jSmX8dxfWO7dWzXYwICYttJGV
k0TE/4uSPUnvgmDKIPt4NwMX9XuiRo9nEAKhRz7KXuvBar0slHoxoL+uLFPy
TjqhUKD26NO5Hqj/+2I95cuAk7Rli61dGqFfvVdL6XgPhH/7f+ILYOCd4Z9r
pRGpRJdUTnTDwR7s1HLfeSiYgdhnGm6zRSnEsyc/xRV39aBlZ0qQchgDy3eE
Fx3oTSYEVv1Z9WFzDz5s6FivFcnAvE2drPZMEhFp8/mc2Ooe/Bj+Hm/0mgHx
HXJNu93IfZaJWJ+x6MUmZoy972UGsvzWiBknpBNS+qv20gx6oeTq9mnwKgMH
Kv4YZnxMIwrvfaj0vNOL6fZj63erM3BaeH5wYiiVsNA8rLLrai9irzoZGNxk
gM2Hv5v/bwrB0nFuLlLoxakn4mVxtxkIYagknd6cQhQ2FyicP9aLl9nLN3Zq
MlAymBf1QDqZ8FCbLGzZ34trT6fN2HQY2OFcpu9Rm0EUbZ+wgX8f9istsQpe
zcA3gcIVPBPpxFOpLclcrn3o6cqfX8rHAPvCqQcuC2lEJvuz+3W2fRhQ4nV+
uIEBm8Y1HTNb0giZSxtLXpr2QS3tE0fjJgbS6vpi9KVTiXv2/6XL6vVBlyP4
xS4BBm5Z39veeDWF4H8jdIxysw91jqdmngoyMHbI4I2EcTLx+3GBkd+lPujf
CDSoFGbAddglWJ4tk7gowRoOzuiHhsJF/e8NdKw3lQqU35pBRAXK+7vE9SNr
zzEpx890VHhKicocSScs12x7ZhLSj3aLX7NL2+kYC0lJ36uSRtjZ+KZd8eqH
3HfRDy+66OCuLDFZZ5hKsOIjt0g878dx/5eWM710uMRHVf92SiGa1FTbljzp
R+mdDzsfDNIRUW/L1RWVTHSc/NTZbNiPeg/3+pYROgxWa717IZlJyKavflBY
NYA9t9ccanKlI35rDOepixmERrqweGfRACSObhG19KTjr4Vi94xOOtGh9baL
ljWAchFpgfW+dJyqf22bSuotZcU7k9n4Aejws/Fk+tORUfb77LWgVEJcfNfv
JeEDcD+0/Yd8MB0LT5K8fmWkEInP11uy+Q7gbsORrrowOqIPciYEfkom6PPu
1DmnARjf+fn2UhQdPAonPgZqZBIGDZbCIr2D0JYPmr0IOpISbQ9cNc8g6r/v
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
/uhV78SLzb/Dpm+Kd8zA/9Y6pmA=
      "]], {DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox["\"time\"", TraditionalForm], 
       FormBox["\"mass\"", TraditionalForm], 
       FormBox["\"distance\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
     PlotRange -> {{1., 50.}, {1., 3.}, {-1.7809589029496762`, 
      2.7609653453754004`}}, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.1`", "1", "2"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.12202865833333335`, 0.14283175833333334`, 
                    0.064190125], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1830429875, 0.21424763749999998, \
0.0962851875]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.699853404940195*^9, 3.6998534252442384`*^9}, 
   3.6998534654762683`*^9, 3.699853520540136*^9, 3.6998535703060555`*^9, 
   3.699853659525604*^9, {3.699853703509034*^9, 3.6998537401967545`*^9}, 
   3.699853779561277*^9, 3.6998550047578506`*^9, 3.6998679327631903`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"criticalRadius", "[", "mass_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"volume", "=", 
       RowBox[{
        FractionBox["4", "3"], "\[Pi]", " ", 
        SuperscriptBox["radius", "3"]}]}], ",", "\[Delta]v"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Delta]v", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"fluidDensity", "-", 
           FractionBox["mass", "volume"]}], ")"}], "*", "volume"}], ")"}], 
       "+", 
       RowBox[{"(", 
        RowBox[{"gravity", "*", "mass"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Quiet", "[", 
      RowBox[{
       RowBox[{"radius", "/.", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Delta]v", "\[Equal]", "0"}], ",", 
            RowBox[{"radius", "\[LessEqual]", "2"}], ",", 
            RowBox[{"radius", "\[GreaterEqual]", 
             RowBox[{"1", "/", "2"}]}]}], "}"}], ",", "radius"}], "]"}]}], "//",
        "First"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.699867972458806*^9, 3.6998679727636213`*^9}, {
  3.699868003532315*^9, 3.699868166437902*^9}, {3.6998682304998345`*^9, 
  3.699868475143755*^9}, {3.6998685150840344`*^9, 3.699868522643911*^9}, {
  3.699868650572789*^9, 3.6998686810333223`*^9}, {3.6998687301404347`*^9, 
  3.699868734820684*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"criticalRadius", "[", "mass", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mass", ",", "0", ",", "4"}], "}"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Cell mass\>\"", ",", "\"\<Cell radius\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{
    "{", "\"\<Radius where density equals fluid density\>\"", "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.699868177604746*^9, 3.699868185906849*^9}, {
  3.6998687420111303`*^9, 3.6998687670754404`*^9}, {3.6998688708355393`*^9, 
  3.6998689111166167`*^9}, {3.6998689434914618`*^9, 3.6998690075789423`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$16961#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.5000748947600158}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Cell mass\"", TraditionalForm], 
       FormBox["\"Cell radius\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0.5000748947600158}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 4}, {0.5000748947600158, 1.9999999471035896`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Radius where density equals fluid density\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6998681864283605`*^9, {3.6998682906936083`*^9, 3.6998683000813284`*^9}, 
   3.6998683316699824`*^9, 3.6998683857646356`*^9, {3.6998684385024424`*^9, 
   3.699868518700035*^9}, 3.6998686564169016`*^9, 3.699868737776512*^9, 
   3.6998687708600755`*^9, 3.6998689982543545`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.699868684597822*^9, 3.6998686902026987`*^9}}]
},
WindowSize->{3840, 2036},
WindowMargins->{{-11, Automatic}, {Automatic, -11}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2231, 52, 707, "Input",
 InitializationCell->True],
Cell[2792, 74, 993, 20, 45, "Input"],
Cell[CellGroupData[{
Cell[3810, 98, 154, 3, 45, "Input"],
Cell[3967, 103, 2539, 54, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6543, 162, 1590, 35, 104, "Input"],
Cell[8136, 199, 355401, 7097, 304, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363574, 7301, 1027, 25, 45, "Input"],
Cell[364604, 7328, 384609, 6549, 405, "Output"]
}, Open  ]],
Cell[749228, 13880, 1510, 40, 196, "Input"],
Cell[CellGroupData[{
Cell[750763, 13924, 755, 17, 133, "Input"],
Cell[751521, 13943, 10390, 207, 328, "Output"]
}, Open  ]],
Cell[761926, 14153, 94, 1, 45, "Input"]
}
]
*)

