(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    826224,      15514]
NotebookOptionsPosition[    825525,      15486]
NotebookOutlinePosition[    825906,      15502]
CellTagsIndexPosition[    825863,      15499]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"init", ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Delta]t", "=", "0.01"}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"v", "=", 
       RowBox[{"r", "=", "0"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fluidDensity", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"gravity", "=", 
      RowBox[{"-", "9.81"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"step", "[", 
    RowBox[{"radius_", ",", "density_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"(*", "Buoyancy", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"volume", "=", 
         RowBox[{
          FractionBox["4", "3"], "\[Pi]", " ", 
          SuperscriptBox["radius", "3"]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "+=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"fluidDensity", "-", "density"}], ")"}], "*", "volume"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"f", "+=", 
         RowBox[{"gravity", "*", "volume", "*", "density"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", "Integrate", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"v", " ", "+=", 
      RowBox[{"f", "*", "\[Delta]t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", " ", "+=", 
      RowBox[{"v", "*", "\[Delta]t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", "*=", "0.97"}], ";", "\[IndentingNewLine]", "r"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.699851549448615*^9, 3.699851644872716*^9}, {
  3.699851725089346*^9, 3.6998517291684384`*^9}, {3.6998519978156023`*^9, 
  3.699852010649661*^9}, {3.6998522517766542`*^9, 3.6998522529367723`*^9}, {
  3.6998523130818434`*^9, 3.699852319114607*^9}, {3.6998523564898853`*^9, 
  3.6998523586826534`*^9}, {3.699852611338642*^9, 3.6998527879219575`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trajectory", "[", 
    RowBox[{"radius_", ",", "density_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"init", ";", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"step", "[", 
        RowBox[{"radius", ",", "density"}], "]"}], ",", "50"}], "]"}]}], 
    ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.699851787508475*^9, 3.6998518212807307`*^9}, {
   3.699851894777446*^9, 3.6998519029381337`*^9}, {3.6998519639692307`*^9, 
   3.6998519803538694`*^9}, {3.6998520747616158`*^9, 
   3.6998520876488023`*^9}, {3.6998521467451982`*^9, 3.6998521517342196`*^9}, 
   3.6998521889627857`*^9, {3.6998522624568644`*^9, 3.699852263690553*^9}, {
   3.6998523642878947`*^9, 3.69985240050464*^9}, {3.699852565203643*^9, 
   3.699852565328765*^9}, {3.6998528070814734`*^9, 3.6998528092569413`*^9}, {
   3.699855094233311*^9, 3.6998550956237383`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trajectory", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6998551421508007`*^9, 3.699855145753661*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.004109203190895449`"}], ",", 
   RowBox[{"-", "0.012204333476959485`"}], ",", 
   RowBox[{"-", "0.024165813045337048`"}], ",", 
   RowBox[{"-", "0.03987765141755874`"}], ",", 
   RowBox[{"-", "0.05922733782950922`"}], ",", 
   RowBox[{"-", "0.08210573683999664`"}], ",", 
   RowBox[{"-", "0.10840698707106489`"}], ",", 
   RowBox[{"-", "0.13802840298609653`"}], ",", 
   RowBox[{"-", "0.1708703796145727`"}], ",", 
   RowBox[{"-", "0.20683630013509`"}], ",", 
   RowBox[{"-", "0.24583244623088724`"}], ",", 
   RowBox[{"-", "0.287767911134706`"}], ",", 
   RowBox[{"-", "0.3325545152823057`"}], ",", 
   RowBox[{"-", "0.3801067244963728`"}], ",", 
   RowBox[{"-", "0.43034157062491335`"}], ",", 
   RowBox[{"-", "0.4831785745604931`"}], ",", 
   RowBox[{"-", "0.5385396715689009`"}], ",", 
   RowBox[{"-", "0.5963491388579519`"}], ",", 
   RowBox[{"-", "0.6565335253192269`"}], ",", 
   RowBox[{"-", "0.7190215833775591`"}], ",", 
   RowBox[{"-", "0.7837442028850368`"}], ",", 
   RowBox[{"-", "0.8506343469981855`"}], ",", 
   RowBox[{"-", "0.9196269899788353`"}], ",", 
   RowBox[{"-", "0.990659056860961`"}], ",", 
   RowBox[{"-", "1.0636693649275184`"}], ",", 
   RowBox[{"-", "1.1385985669429746`"}], ",", 
   RowBox[{"-", "1.2153890960888625`"}], ",", 
   RowBox[{"-", "1.2939851125512691`"}], ",", 
   RowBox[{"-", "1.374332451710699`"}], ",", 
   RowBox[{"-", "1.4563785738862414`"}], ",", 
   RowBox[{"-", "1.540072515587413`"}], ",", 
   RowBox[{"-", "1.625364842228445`"}], ",", 
   RowBox[{"-", "1.7122076022611414`"}], ",", 
   RowBox[{"-", "1.8005542826837524`"}], ",", 
   RowBox[{"-", "1.8903597658845805`"}], ",", 
   RowBox[{"-", "1.9815802877802793`"}], ",", 
   RowBox[{"-", "2.0741733972100027`"}], ",", 
   RowBox[{"-", "2.1680979165477297`"}], ",", 
   RowBox[{"-", "2.26331390349622`"}], ",", 
   RowBox[{"-", "2.3597826140271514`"}], ",", 
   RowBox[{"-", "2.45746646643305`"}], ",", 
   RowBox[{"-", "2.5563290064576676`"}], ",", 
   RowBox[{"-", "2.6563348734724417`"}], ",", 
   RowBox[{"-", "2.7574497676676684`"}], ",", 
   RowBox[{"-", "2.8596404182279334`"}], ",", 
   RowBox[{"-", "2.962874552462286`"}], ",", 
   RowBox[{"-", "3.0671208658605034`"}], ",", 
   RowBox[{"-", "3.17234899304767`"}], ",", 
   RowBox[{"-", "3.2785294796101168`"}], ",", 
   RowBox[{"-", "3.3856337547665856`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.699855146163553*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rads", "=", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"trajectory", "[", 
          RowBox[{"#", ",", "density"}], "]"}], "&"}], "/@", "rads"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "rads"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<Density = ``\>\"", ",", "density"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"density", ",", "0", ",", 
     RowBox[{"2", " ", "fluidDensity"}], ",", "0.1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.699852411181653*^9, 3.699852535953086*^9}, {
  3.6998528155221815`*^9, 3.6998528642817216`*^9}, {3.699852932850046*^9, 
  3.6998529364784865`*^9}, {3.699853000851699*^9, 3.6998531472151814`*^9}, {
  3.6998538416973305`*^9, 3.6998539271300497`*^9}, {3.6998542012660694`*^9, 
  3.6998542103137894`*^9}, {3.6998543208176603`*^9, 3.6998544224173717`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/EtTVaY01w6bZj+001tuIs6K5v7bXO3QCrzQbpssJzJGqVG
l9EEDc1QC9J60RSKUVFSL7JRitgwiwpSU9BwLUG0iKFZGprMCs+Bw+FzvinW
c8W2TSwWS/5v/9+NWVDZuhi7SXC3gB4o6XkuLQj0kDnoC95r5T0eJEfDIUSv
L3KEzMOk23foUfEkmQ+GkdSX3ZgmC1A+EzryWjxHTkZhk3TeXxckM+DHi6va
tYvkVOjC3YaXO5fJQnSwh1ZH9avkdCzodX3FvhA5E0MiOL6/Yqs2LMZH9UxM
/eFwchYelnI8w+sRZCnKtJWXvKNbyDLEMZ5vwjeRZDmm7KVjOwJccjYkFr9T
3RxDzsFF/WbzC0UsORdF9Ws3XT94ZAUi0rsebO+NI+dhhWcb3NrGJ+/Fr+uW
6uXLieR9uG9ebLI7BOT9aBi27Vp3JJHz4ZpofyZSJpMPYFsnd2DNlEJW4q31
/NEPJxhyAb7+PF1RdWE3WYWig9NmT1sqGWCiWoLV3rQN1wJJrob4mi9C6moc
01iZ7qh06mrkL9W1TKgzqGugGO4Om3JmUtfgU+PK8VuePdS16AxbuTb2W0xd
i9bZtOaryizqhdB9vnPF2SihXgijZSnvvV1KXQflAPoDsTLqOljdZ8fn+sks
PW6XCJ3jZ+TU9Wh+eorfnphN3YDoCnar6B251oDumZOyypoc6kZ4RxKelMty
qRvh980nhGbJLBM4XPefjC6F6i/Als9U
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvGXZTQzwmLorCCVOWyY1Zub5co9OnXTdTNGScsiy6wPvTJW
6jDcWtoFEy03L1jNbW62Qtn6sEQjCY1kgmsKfmgF0YWKILpTCzHDc+Bw+J1/
SkX1/koewzDswv6/i/NFMTDl9tsNcQp6IOmQbYRXISLzIUllE4WZWeR4NLlf
SGo8IAvwV/C2fGhYTRZCuyxhg0BUSl6H5Z9We4YdB8jJiKmyjUw/O0xOxbWV
TdMxs8fIIkgyfo2u6awki9FW/o4v8Z4mp6OgPzI5HsuRJZj1BN6rdHpyBlQf
6v70zhrImbghHg+Hz9WQNyPkcEmeZhvJW6B+KWdq1p4nsygrO1IaWW8ib8W3
TN7XuZQL5CxMicPz+jELWQq22+maMTSSZRAYAjIfe4mcDWMgeLFr/jJ5Gx5q
/PeSn18lb0eVzxf36nEzOQf2M16RPtBCliPERS36B63kHShXtM7gdRt5J+oG
G2qdn6+Tc7Gp8eeoj2knK9DCuyOE0EoGgk+icrHUtmgzwOp+p+cc7KCeh4kf
7Unahk7qeaj9KDPuvttFPR/7xjoiTKSbej48g+HvxfE91JWwbAw1Ly25SV2J
tCVv6ldduUW9ALE6n3NX8Db1BdvdnIbfS70QQ/JJ06kBsrkQjSu4k5zWQb0I
Vm5v3Z45srkI1WXh+mi/k7oKPUdtfSe0LuoqaPzSNhOvj7oaE7JEZe59slkN
lUibZj3upl4Mr+zR/NkEj+IftAjVnA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtMEgAUhmFGtrBas8YUqy11yIyZFSWWlHyKCkb3scVi1GaW/QljlOLc
lExbW7aspHJtIRIYlQauoUlFDkyDAoHiR9TWuqxaW+u+ojmyec52dvacN7u6
bud+JoPBEEzv/zszX8T9QavTpBOJ6YHM3UY3s1pBZoGfI8jgFNSQ09BufcGv
tx0ms/GX/VY9PKInc6CYk76czT1GXoq5nxbZRswnyFlIqTW6I5Md5Bx0LGiP
pMTOkrng5//yLL5oJPPQqX7H4tu7yXko74sHfKlXyHzEbK73UpWZnA/pB/2f
npiFXIBzPF84fNRGXoWQ2cIfL7KTV0P2UsSoX3KTLIBSuWdHfNkt8hp8K2B+
ncp2ktciyAsntd5BciEE3b2WqO42WQi2ziV0CFzkIjS6/McvJYfI63BX7ryR
9fwOeT1qHY55r0bd5GKYDtm5Wtc9sgghTaJVO+Qhb4BafCaK1w/IG6EfaG7o
/TxKLsHKtp8eB8NLFuM08xoHHB8Z8I8lRLzCsRkbAIHqd17xrofUSzHx43ym
onmceikaPgobt1yfoF6G7d4LcUb8EfUy2AbC36vSAtQlaF0ROjV702PqEuTO
etO08OQT6uVIVTl6N/uD1KdtsmrkrEnqFRgWBVoO9pMNFWibrzmgUYSpV6JL
s02/dYpsqESdMtyU6ItQl+LyXuPVGkWUuhRyZ2FnC/MpdRkmhBmSkkGyQQYp
V5Hbte8Z9SrYhfeTR9Jj4n8iqd78
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7NeeW7pxfnG2PVTAQTJq6m6mpBYon8NBS8lI
XEJvCpQv4NC69I5W2bIFUL6Iw2+RJ7E7dq2A8iUcQtjFNEVUNkL5Mg5cr4WW
7Vq4DcpXcGBJn7r70oU9UL6SQw9f6yWWawehfBUHLZ1v+6WmH4Xy1RwmxD7l
0Fp5EsrXcHBZfvv0Ec5zUL6Ww7Vl2567R1+E8nUc3F9U/Fxw7TKUr+cwSe3I
xYul16B8A4fzCxdrHTe/CeUbOnjctWYok74D5Rs5RETEBd6Wvw/lGzt80mP6
+FfxIZRv4nBO7eL/wsOPoHxTB6OZixZfLn4C5Zs5iBRvM9tg9AzKN3eo3Haq
ecb/51C+hcMe742rFW69hPItHdI3bOB+cPA1lG/lMD93pUrhtrdQvrXD+bxf
TYXb39tLxZ/WT1C2doDFGwAii39S
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/E1uoym5YNNsxAXlpKpmy3n0txP5zYjCE0YDRJkYYmSi9Ju
E9pDF1NKCRFjGYKyP14S1IeVGwudImWOrJiF6DRtUmptbi51mRWeA4fD53z5
Gu2ZQjaLxUr6t//v5rilxtSZZ0KxxkoP7G3JGhgL0pE5EJmGezxDVeQQ+MVb
HL3h9eRQRPj9obaiJnI4DLW5Du0rI3k/WsL2PJzmdJKjUHCraWousod8ALHM
qq+u3USORiBs3rmTsZAPwebbdzGwvY8cC52t4mXNDxv5MJLXhvndnCHyEcTY
R89N5r0hJ6C+VzhisI+QBRAsrNVaze/IQsgaZzdqjO/JSTCrL6h4zEfyUVSy
bzrbLA6yCGXcQle76xP5GBq71LUV0ePkZFji40x3yifIYvRzEgcFn53kFDT/
4b2+ETNNliDiQVdUZMkX8nHcW5SGyE0z5FTwto7JOrhfyWmwq2T5oUUu8gk8
dwdmpW/nyOnIG6xM9Yq/kaU4L1FX+9q+kwFd6Q4z9+DCpvVA2e5tBWzjIvUM
dFzp7GqO/0k9A0J9Qfpkvpt6Jko8DdXBsR7qmTi9S9imXCazZPAYHGnlg0vU
Zbg0zzy53eClnoXEvtGBnFIf9SyE1KlKPiiWqcthcq1PLPH91OWQ3C8OMmyQ
WQqcqlLpXzh/UVcgbsp7NqV/hboSouLLCg6zSl0Jrf7pXd6jNerZYCa7x3Ov
B6hn49oKHrdqflM/Ca054Wpwzrr1L2CBBoI=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtMEgAUxnFqi9R0s0VNKxxhA1NwhIh5AT7AC1mZF0oNl2RhobamQ5qU
Ta3WzdI2XHbRcNh0gQ9tsVoPmclyPrSpmS9tzGZeauUsLCPJLuOc7ezsd/7b
yk7lG1YzGAzxv/1/A7OgkM/tqJ0ZHn1OD8iDHK6rFZ/IQZhZsAar+L/I4bCL
fpt41jX9AbNQIKhrymGGkyOQ2LMnySvdRN4K1u1XaqeWTeag8UlJdbyTS+ZC
9jr1dAubT96OyjZHJ2c5jswDc9+jplGbiByDmYlo3U9zAjkWxeJV3+vPSckC
5E9182ZdyeR4SFvLeO4tMrIIPSFtkUWFIO+EVTl9v1eqIovR5S0diYtLJyeg
TpDmkUsyyRKI+lY86jwNORGmW0vdXY3ZZCkexk7eGXTvJSfhxnyLLXLzfvIu
OE36xWsvcsnJ+FD6pfKuP4+cgh8nPdU+FJBT8cenSCm/riWnYejlhin7+wNk
GdYFdxrMskKyHK7W6Mt2WxFZgVDuxpFvIYfIwLTygUl4VhdwAxDx1Z0XtVhC
XQm/7sK7mzWHqSuht4yvP7hUSl2FQV1BCntAT10F32yC/9KVI9TVyLYa68e1
ZdTV+Lgcdu8z9yj1dPROSCafeckN6WhvHjPHDh2jnoEc77CA32GgnoGwIE5F
R2059UyEntcKLbnHqWdiLsbDdAhPUM/C46FhVlSYkXoWjG8tKwPzZIYGVX3N
CxfHKqhrYKt50178tJL6bqy1n+EKbVX9fwFAL+yd
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtIEwAUxvHZw5qmULRALcVmTJubmG6z1M1vTqcZSurIZIFiKEyTUubK
pbV5QVNzs7a822SG0uZD0Ch6MVMSHwIz8yUYhjkNSlazTFx2wXPgcPid//HS
q/ll+xgMRvy//X/3xpMqXT9Z657zm6QHpCy7s70ilMyC22P2T4vikQ/CFvdb
wzWLyGwU8Osac5kgB0M0di7RK1aQj4Hd91ruUOaQI2B4dqk61pFP5kDyJvm6
MayQfAKVFvtwxI6KzAUz50njW2sJORrupUjVL+1lMg9F8X4/Gm6Vk/nIXxnl
rjnV5FiITaXcmaNV5DiMBVhCLhZeI5+CWbb6cFxcQ47HiLd4PiZGQ05AHT/F
JRVqyULETey65Hk3yCJoerZGRww6shiPecv90zP15ER0bRitIaG3yafh0JRs
drzUk8/gU/HXygGfgZyEn1Wu6m00kZPxZzs1qfxuMzkFs68Or9g+tpAlOOA/
XKaVtJKlcJoi22zWNnIqAjlH5r8HtJOBVdkjjaC+Y896IPjbTF74Zid1GXyq
5g/dNV3UZSjRLR66sGWknoZpVUFS2JSJehq21xJ8rXe6qcuRbVY3LCrvUZfj
807Q4BfOferpGF8SLr/wkvXp6O1c0PJmzdQzkOud40cNWahnIIgVUTFU+4C6
AoFNSoHufA91BdajXUy7oJd6Jp7OzrHDg/qoZ0L9Xrc7tUFmZOHKRKenZaGf
ehasNe96i54PUD+L/babHIF1cPIvsT3zAA==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWlI0wEYx/HVC5vmoMhAK2XNmDY38Zzlsf3mvDKSPKhsgSIYqEUpc+HK
0FVYaWk0S6vZ37Zy6KQkh2LRnC7XOsDMfBMMwzyCEmuWDZcd+Dzw8PB5vtuL
TuQUr2WxWFH/9v9dnQWpZG5n5Ywj0kIPSNhd5sulmWQ2Zha03skhh8kboI/4
reRri8l+yBVWabK8TpL9EduxN84lVpG3wa91RG7KqyZzUdt3pDzcpCHzkPQm
4VRjYB15B8qau9q4y/VkPrz29WjeMk3kUMxMBCt+qa6TBciPWvOj+uwNshA5
Uwb+rLmVHA5xUxHftlVHjkCHT3PAoYMMORJa2fRdo/geOQrtroLRsDADORpV
wkSnJOYBOQYR3StOebaRHAvlzSVDe20nWYxOweStYZuJHIer841MwJaH5F0w
KQsX6wcfkXfjU8HXstueHnI8fh53lrvxmJyAP25p/NErveRE2Ic2Tek/mslJ
WO/dVqxK6iNLYG4Kvqhn+slS+PI2j373GSAD07L7StGZJ6uuAfy/2bKDFp9S
l8GjOP/hWsUz6jIUqsc3HliyUE/GsCI3PtA6SD0Z7tloT90lK3U5MrUl1eN5
Q9Tl+LzMufOFN0w9BcaJmMkBF7kmBS0NYyqB3UY9FVkuhzBE95x6Kjhsbqmu
coR6GnzP5YnU++3U0zAX6vTqEr2gno5eu8MviOOgno6S9+oV6zyZlYFj3Q0L
F8ZeUs8AU/GuJb//FfU9WKc/zRMxry1/AR/e/GA=
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.1`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.1], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUh/FXCzbHykvTbIqoecmZ5jad87L8O52uNFjzUn0IxtJMMES0
IEKTFlpkqYSwRoW66aCLGKxYBgn5QUNhSGu1xVZW027CrBRsNCs8Bw6H33kS
tM3q+mCGYUT/9v/dHF/R6OPlz5yawWf0gEMpT3PCSmZjuC7mRcSWGXIYGg8x
US7bSzIPx7VMpLPJTY6GuHq9Q13/iRyLo91Duo/LX8nxaKq+/3M2aYWciN8V
s6Hb8lbJSShuGDIOj6+TUzAT6LH3Xw6Q98BboK7xe4ImNy0Ax3xuPMi8lbwX
A+c73BsGFjkTa71j+0xPOOQsNAXGYsxB28lCPDS9bvNaw8giGJl1y+lLEWQx
2i/MvXJoeeRsfFiad/VWRZFz0DHBSuDWRpMleHpNJ5tq5JNzEbrGcWddjyVL
YVCOmOzP48h5aNX0htzUxZPz8cM7ITz1IIFcgD/WSOltTyK5EF6WtWIjKoks
g+d9hOpIbTJ5P/q4TlvzrRRyEc62VPp4X1LJwLL/ex2vMG3TnQA7ruuEbEBA
vRj3wvR6za906sWQR/JjVccyqMtxlXvj5LupTOpyWLxy48quLOolOFiz85ve
Tu4sgcU3LZ3vF1IvhSK13tF1WES9FNNCzcjoDjF1BcLbGX7cG3KnAmWrfsnb
O9nUy+BKFl6Za8ihXoYewcXdCyIJ9XKoz9gMbCaXejketYUHi21kRonujL5F
1aCUuhJLC7mVVa151A+gZTHkbroyf/IvUlXpcg==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvEVVpIOxdbFKFhvUcOJTDM1rXzmplvbtNQ5NVAstkpIZZul
mdXL1DIsnSbmzM3MNadDFBElbE0joaFGFygp8UNFhl8yI2MRdsFz4HD4nf+u
UyUZurUcDifq3/6/q7OY6JEvpoV+DvLQA8yoIkTdv4/sD9mYNodjjCUHw6Ks
9P3KkZB5CC4wrSgfqcjbEF/5p2FpIZO8A+GP6yKOq06Q+TAoloVf3QVkBtG1
58aHH2rJezBjm3x9ZUsheS9eDTQW5r8sIgvApmXox416chiYaY1jq7CUHI7B
6tS5PG4ZOQKWcrNGEVpBFuHiJ/9Ia+plciTetmznmdUsOQqdYaNM5mYTeT9M
Q96pmi9V5GiU/h641DZdQz4A/k3xzIan18kxKCwP6ZVP3iDHQjk0O/L+Qx05
DvNnvU7JxnryQYj8NMYqvpkcj/pq81i2pJGcgO6YiVpdURP5EIZHvh07b7tN
PgxLSZQ0/U0z+QiSl32iCV4LORHPHb0GW+4dMrC+uGHBZW9dNQuofaLv7h8W
6mLIWL8sh+oudTGelOsT4nraqScBbcIweYCNehK6nHNLLkMHdQkU3uYsa8k9
6hIEiY3ppwWd1KXIfZbfZ/1IZqVoX7zqFnXep54MpkKr457sop6Ma9zBTcxu
O/UU/FzxufPmyWwKbu3sm+3ve0BdhqbWiDP+FxzUZfAFrHuRjW7qcpRNCdY0
BDqpy2FtKs7peEfmHEWgi2uv6O3x/AU5DfEx
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/EVViMdia2LUWD/IsYmYy4z02q/OXVrXkrTTR+UCs2EUnRd
lkkNtZBuWyLRxC1GY9pkOJYpYtPNtBxT81K6SnyoyPAlMzIWYRc8Bw6Hz/nu
PFWeXbyaxWKJ/+3/uzILkj7FQmbkZ0kfPcD0KCNy2tVkNuSeojyWpoQcDmNa
dfBXnobMRfiJmuW0Z9XkrUio/qNfnK8lb0d07y3hsfSb5ChUKpcEX90GMoPY
+rPezu5G8m4EzP7Jq5uN5D2YcN4rLRw3kXnQZWZXeDUWMh/MiMq2RWAlR8NV
lzFbwGkhC2HUGlTKSDtZhMuf2DGmDAc5BtP3t3ENOU6yGBZ+D3N8k4u8FzUd
vuHrX56QY3H+t/NK08hT8j5E3ZYG1g10keNQqo2wK/zd5P1I65jpev+hhxyP
uTO+Vtn6XvIBiEJUmtooDzkBd+sMHrXMS05ES9xgffG5fvJBdHZ9O3rB/Jx8
CMZycXLW1AD5MFKWgqJB7guyBKM2e6U5/yUZWFumn2+zDq1YB+QERd/dP3zU
pZDrQnJt6X7qUvRrKxLjHw9TTwKaBHxF6Cj1JDxqnV1sq3xFXQalrzHXVD5G
XYYNUk3Wad449WTkDxU6TB/JumQ0L1xziywT1FPAVBUVc05OUk/BDY5rI7Pr
NfVU/FwOugvmyLpU3NnhmGl3vKEuR8MDYQn74hR1OYKha8bUmKauwKVh3ip9
WIC6AqaGsryH78isIwhr41ir7G/7/gKnn/qR
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7Pd7fPCTfJa/HyrgoLTbSyhkfTuUz+HgfiAl
gqF4OpQv4DDTu+bnr4jFUL6Ig0BC0z/vPWugfAkHq5r//Z9ebYbyZRx09nXr
BfjsgvIVHIq8vmm/33sAyldyMOnIObht5xEoX8XhxrzTl+vETkL5ag6XNkzM
jLt4FsrXcGjwCyo8WHwRytdyUDobtkxc+wqUr+OwqcX3XizvdShfz2FmxYQw
L8lbUL6BQ+UTDsO5vnehfEOH69OkRCaEPIDyjRwWau1WChZ9BOUbOzRtOXmm
9cVjKN/EoeTPhupZZ59C+aYOCj2ON9iPPIfyzRwyK4RWeZx+CeWbO3hvubP9
9qPXUL6Fw/OMkyucud7tZ/KcfWrBIwsHaDzsBwAlCH8T
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.2`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.2], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvG3UWbCTNlII8vpqmmaurnpdJf32X2S0TLKGEykqCwTzS8F
ayZdBuGsfQg1NC0hHCT6LqKFlEZkRmMmXVD7YCtDImdktqJRdMFz4HD4nX/G
gfqKQzyGYWT/9v9dni9se8lCoNc9OEwP3BOLahtrxsjxiMS5VC9zJ8lJ6DfY
WGH6LFkIZombLT8cIafCP2ZmKgeXyGnonlGe7Pr9kyxCl63vzqsWZmTZmRht
EtdwzpXkzXAn9pYfC8aTt+Isu2FT5ik+OQuhve5JN5tM3ga1pTb9/mcBORdZ
C+2fqp+uI+dBwjPtzg+uJxeA29Ujm4+mkaUInpn6xolFZBmmQyae4m0GuRB1
gYmmxX4xWY6WkW6n3bOFrMD3yHn1x9MSchEq5M9SUpqyycUYd73bd+RyDlmJ
u1OCVAe3nVwCu08gbQ7nk0txcU65ZmCtlKxCmPnxmi2SkdUoXAj5hg8WkjVw
rJi3RdvlZC1qn/xScC8UZBb+vsUdDwTFZKD5oXB1xK5cdjNwJXrBxveVUNdh
47UE51KslLoOFr5c2bhHTV0Pl2u6tcqvoa6HZ+h98JKQpW5A/fUCXZ0W1A1w
+GMqfpTMGIGrWptwQEfdiBzXqoSGo3rqJoRbk84lSgzUTUi+0VE1M0dmzPCc
yBsd9xmpm+FtGap+ftxE3YK4r537J2Rm6hYEvB92PoqRGSs62m5Xtj22ULci
+83NPxqvlXoZOhsatLccZSN/AXWm6AE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvHXIrKsUFoyyUxNaulIW+5Nt8zHzV3yQ0OFgct9mG6VWShY
mtFFsEQtkzWSCC8pXpjZLNM1KXBU2lyZjMw28oMVIcnEIEs2ylV4DhwOv/OP
KSjJMaxhGEbwb//f1fmeLu5tmbswHjVCD8wWtDwLfGTJwbBzucqxdjk5FJyC
qdG8vhwyB1kTmvC5p8fIXDA7Zb9EqYXkSBTWnXnTqysiR8OqL7Y18ErJsXCa
B2RO5iw5DnzJ9Nsu9jx5N4Kaj2dnv7pI5sGRWGnZ4K4ix+PmC4t1V0U1mY8m
LbfLkl5D3odwvVZ4OqmOnIQJU0n/HuUN8n6YPGzr0LVGsgBrE1Je+sqM5AOI
evfh/RfWRE5GyPrh/NCQ22QhDJMRr/2LTWQW2yrEDbFf75APwp3snt84f5ec
glZd9TfRSjM5FXrBQmJaTBtZhGhj0E+V+R5ZDA/7Q+13tJMPoSPCk3RysYOc
htwr64yGyE7yYTz32Dh2VRc5HfY/e2fkdd1kwC+dv+x09Ky6Cph0dTA7tpip
Z6BYyxsLy+ulnoGlqc/1l8z3qUtQq69Rs4E+6hLwTm0v26qxUJci15dTuDDc
T10KgeuW92jjQ+qZ6I7RTgekj6hnIjV/vGjZT2ZkqI9fSYgbHKAug3Kzjneu
5DF1OWY1jV4Pf5C6HAp++VWJl8wooM6qLW97MERdAZUwzP6p1EpdiU0nOl1+
4RPqSgQv91yf+U1mjmBpwieqHLWN/AX+K/fn
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvHXIrKsUDKZZKUmtXSkLbfclu1xc5f8oKgwcLgPzs0uFgaS
YtCFbnjBxAZBkFailWIWXURJ2Mpcc7nWSqdvSk3NVkMxyJKNchWeA4fD7/zj
9GV5xhUMw/D/7f+7PN+lko4m76nBbDM94NE39QXHS8ihsHA4auvtCnI4IvXD
AwWd58mRyHJoo7zP6sgcMNsUv8QiEzkGxTXHhzqKrpNj0W0o7ann3iLHw97+
SGFnWskJ4Mncb9qE98g7EHKjJDf3VSeZC1tyVdeasYfkRFzp7+reXvmYzMM1
HaetS9pN3o0og05wLKWXnAKHqezBTnUfeQ9MrLD56SUzmY+VSWkv/eXPyXux
9f3oyLSwn5yKsNW9heFhA2QBjM7o14F5K1mITZWS+vgZG3kfxlLHfGt9dnIa
mosufBMvDZFFMPDnktPjnGQxYhtDfua0vyVLwAp/aAI2F3k/WqLZlMPz78jp
yD+7qtEYM0w+gBdsT6QlZ4QsheXPrglljZsMBOS+M3bb6LLPAU5XC7NlA0s9
A6U6rjWi4AP1DCwMT9Webh+nLkO14bJGGJygLgP36ObyjdqP1OXI9+cVz/V+
oi4H33V1NrvBQz0Td+J07qB8knomRIWDRxYDZEaB2sSlpIQnU9QVUK8v4p4s
m6auhEfbMMvyPlNXQsWruCibJTMqaLKqK27en6GuQo4gwjJ54gt1NdYdanUF
BF7qaoQu3q2b+E1mDmLB4RdXDXw1/wVszAFW
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.007516365143468702}, {
           2., -0.022323604476102044`}, {3., -0.044202991772225086`}, {
           4., -0.07294236259293313}, {5., -0.10833591743248863`}, {
           6., -0.15018403077032616`}, {7., -0.19829306585149728`}, {
           8., -0.25247519502370197`}, {9., -0.31254822546420924`}, {
           10., -0.37833543013496995`}, {11., -0.44966538380907656`}, {
           12., -0.5263718040164287}, {13., -0.6082933967610289}, {
           14., -0.6952737068667598}, {15., -0.7871609728127875}, {
           16., -0.8838079859239031}, {17., -0.9850719537851539}, {
           17.14117368475472, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.30000000000000004`\\\", \
TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.30000000000000004`], Editable -> 
          False], TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyW1IUwEUxvFlYoYvEzFJ8mVLV2Kb825Tpy59du+u96qla0qZhZkxw6SM
IvWDxKxMZFgqZgU1FkVG1pcUJCWnUH0xiiKFlKJhRYizImxNuFnhOXA4/M5f
WdtoswfJZDLdv/1/1+Z7AaqbuISDI+P0gKPnlcJU+ZociglNVmek2kuOgrvG
fTpv7yI5BvbZk67YsGXyZlg+R00GqyVyPJ61WvuT2fWeNSsgNbU0cu2h5K3o
2HdYnK2KJKfg0fDj2+ZD0eRtmFr135OmN5FTcavrSHD35ThyGhZHr9f5OxPI
ahSUGn+6vQpyOlTV+/nn8cnkDER1DzW0nVGRGRg1vPbbwnayDge2yNP0rWlk
PWK1Y73NqRqyAUnOtxt9S1pyJsr/sAb7UYachY/WevHuvI6cDWHClTTXYCAb
4by4sDSwmknOQfzvkgdDrmxyLmKq+gIDYg45DybVvJyRcskmHJ/xDEpjJvJO
8L0vAuMX8sn54M6HsH07QC5AmfODvCXOTAYcbe98X8LYNTuAiBN3/E+COOpm
+K59qpiTyA4zfnRomETJQp1FxahhuE5WSJ3FoGBeubJBoM6B6Z8OvxQtUudQ
eaxnjlEWUbdgxlWcadcXU7egwVs1GV5UQp1HxntFIKJ2F3UezcKQsuzsbuqF
SLE+5UdullIvxJt1w9r0iTLqAh7GfGVenrJSF9Cur+laDtlDXQTjjEw8d4Ps
EHHfe1Vdr7dRL8LKL1+5e8rm+QteEuK4
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXlIEwAUx/EpMdOgrYPSaKEWYiPb4TQ7zJ9Tp1t/tGYkbSPCA0QWgcSs
3FilgpiU5WYZ0cQmlWhbpnObxrZCI48CqWWLGBKV9kdsMlYe2YHvwePxed+k
0rOKimgGgyH8t//v6gRz4m7PtIbfpLjpga39cQ5uEOS1eDy7ImCOyMlsqO99
X5/ZoyJvRmGGa8vb5nJyPL4YmizLOg15Oz60j3naXleTEyGyfPTvnK8hJ+Mi
y8p1WvTkXdAqPycwQ5fJKZjgRQ8uKBrIqTiaJbUII41kLq4mCu8MTTeT96Bq
uT6tRNdC3otggdOc0H2TzIdVmVbmCRvJAqRe2208o7pFFsLu2fhT+qmdnI7F
cdlI/YW7ZBH819tri3lmcgbUmth3v1Y6yJlYmLaXyqs7yfvwImZmuTh0n5yF
0phjfx7VdpH3Q8YXa5fYD8gHEAm4YsO2h+SDUE3VzeWqusmHUFHidJpYPeRs
+EZDhs7JXvJhnHKEWzgmKzkH644bcgJ9NjJQUympN5ufrPoScL7VV9fb0kc9
FyXZ3/izDU+p58KrZep4hn7qYkT0S0fKdQPUxfjtLtNW6u3U89BjbHTsuDJI
PQ/+KI2tqslBPR+cQJyP3+akno9kz9S5E10u6gVgxMu6vIND1AswtmlOcnJy
mLoEefakxTVfn1GX4OUr07beKDf1Qggsw2oO20O9EPJ51sR4B5lRhB/pyg3v
hV7qRTitaB4QjZIZUvDLIjf8yufuv7kf/78=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtymtI02EUx/EpMXNBSkVpZKhF2Eg3l5pdbL9tbuF6UWk4ctKLmSBiFBHr
4mSSC0KjBDdJiQYyicKlRc3Ngv2tTGZeYuVaK1nL1M2KthgrddmFnQcOh8/5
PhmqU6XV8SwWK+ff/N+xFxRybvjawhPldjpgw0OOlRs8TV6Je/7lXPZQIzkZ
lbfmVxf0tJDX4UD+wPo3V/XkFMxom01RzU3yJrzrGGHax7vI6cgzvfds+XGb
nImLSb1cm8lM3gp1xXQqO3SfvA2jvPj+hdJH5CwcKiwxCSJWMhct6YLOx+4n
5B2ojeqyFRqGnIOg1GZMvfuUzEdvRXYVE35OzkXWte36k8phsgAWZs3PkikH
eScWX8qHdBdGyXnwXO+oL+NNkPNRWZc4+Wv5FbkAC26L6vAZJ3kXniX4omWh
1+RCqBKO/LlTP0neDTlfrF5Kfkveg4h3IDHc5ybvhdLZFBApPeR9qFbYbIak
D+QiuF6EtF1jU+T9OG4Nt6YZvGQhVh3VCr0PPpKBczUyndHoi7kRON/majK3
fqIugqJoju+/PE1dhEE1W8PTfqYuRqRh6eAJzQx1MX7bq9Q1DbPUJejRX7Fu
vjRHXQJPXF1fbbOfejHSvBwXvz1AvRiZjPNsefc8dSlYKfLuwf4v1KUYWRuQ
HRv7Sl0GiSVjccXsN+oyDDsMG81x3+3jDoG2MyRD7F/Q/hf5ovSb
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.011138830912567971`}, {2., -0.03308232781032688}, {
           3., -0.06550635071372099}, {4., -0.10809648384258125`}, {
           5., -0.16054774389014367`}, {6., -0.2225642970488472}, {
           7., -0.2938591845253576}, {8., -0.37415405629014065`}, {
           9., -0.46317891281454815`}, {10., -0.5606718545557914}, {
           11., -0.6663788389573653}, {12., -0.7800534447394599}, {
           13., -0.9014566432606598}, {
           13.764495016252729`, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.4`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.4], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/FhGlup/f+w0oe13Fpz6Sydl83m9v9t/12cZnPTdinDEAok
xIICiyi7GVlEN2y9RdboQpKJSCROQXxoYwkjk16kTVYNzTKzoIgKz4HD4XO+
spZ294E0gUCg+bf/78p84YY2LRd8WhoZoQeU7LpM7vcUWYjM6adHB8aSZAav
jD8b+icWyWLs1IvCqxO/yLloOzMPf+Oq0IolMHSnf+24ICLn4VlUsd7PMWQ5
tgSc4rSNYrIC8ha5LOrLJSvxtjluTi1IyCoMt9wNRBbyyAWoz5n13LmxmazG
3APFEbZZSd4GnZ6JLzVsJRfD0ZFjzDqsJpcg+K6/tej5drIG7WVzDwNXSsil
2B9zx/64Ssll2FOYEQmpysnlUHfxNR5GS67A7Yvz6SZhJVmL4FjkZhqjJ+vw
Mi/skuUbyJVYK8lGfh1H3oHXyR9Lk6Mg6xG5/0HBxk3kKsRmfF7pGp5sQA/r
dY3rLGQjXL3ZrZNtVjKHCfP4cfaRjQyM3lNNe1P2FXcCzvcZ9mMlDuom1Cb4
uapTNdRNMIpMtnOTtdTNSA2elElVddTNYDXXr86e30Wdx/fLJ6b7kk7qPB6z
twxPgvXULahwF2btbXJRt+CN3DfcKHZTt4LrCQx1RcmdVnxePrg4091A3YZ9
OUUJp6ORug2iYc/pCdFu6nZ4is9qyyLkTjv6pNFvl655qFdjQ5hnXni81KuB
qSb/gNRH3YHgYK/w0Edf6C+h0N4R
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/E/CjpD0MRYoEFe0lZObM55Wbqfc27qZqA4s5kGVqxSGfhQ
9qANzEnZKJHRShAdkq1kXia6Odsqp+ZCfLHSEWlGRDeZsFQSo8Jz4HD4nG9M
jab0YgDDMLx/+//ujU+0pfJbjwuTXfSAc2ymQ9kgJbOw494QcTLLyeEoqWeS
QspryJH4EigzjQpryQdxwafmnFttIEeD0VRHVfxoJB/G8Cf5rt1xgxwLw8Sb
4LK+FnI83nZWKuwzbeQEGPeXTBeJ75CPoq4ndJ57+x75GNxOr5NzqJOcBJan
ifVuyUBOxuLyVPyuw0hOwbXvpvW66S7yCegG088w/m4yD/ynm5HFcb3kVNSu
VXsjPpjIfChDs4tfm/vIaQjaaJX4Wx+RBbi8udAc1vCYnI7oX8qbpvon5Axs
Va3eEjQOkDNxflZfVtFhIWdBzc4KU5wdIgvhE+xzuq8Ok0/C4FH0frw/Qs4G
N1gzrnFZyTlokht12T9HySIIzF/Do2LGyIDPwp5bVo3vWQuwnJVtioc26rnY
lk80y1bs1HMR3NLF6+E4qIvRP2et416fpC7GZ09m6uz8M+p5sAyoXdJEF/U8
5D6IzZoSP6cuQdGp999S/GStBEER6y5v/wvq+ZgMkN8drHpJPR+JettI94Ep
6lIssryBxgWyVoo+q2qpvd1NXYaMuLQ/Vwqnqcvwu5BtSwiZoV6A0/w1+5CH
rC1AjllyZEc/S70Ql1Y0uu3SV66/ZCX5mg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7L9HfdmsbR23HyrgsG/bsYmhRWVQPofD7yMf
7TUt26B8AYfAXAYdzrBJUL6Iw3Nm90VbrGdD+RIOKR/SNeMfLILyZRwY8uOk
I96sgPIVHDY+9v67c/d6KF/JYequq+whSzZD+SoO1yZH++w8th3KV3OYIRh4
1MtpD5Sv4ZCzgOesbtcBKF/L4ci+W/s0ZQ9D+ToOHKdqOa7fOArl6zlcuXlY
5e/uE1C+gUP560Xvco6ehvINHdrWm0cyfDkH5Rs5mKz+JuKrfBHKN3bIfhR3
S+jeJSjfxCGUx9b39MorUL6pA9vHVpcvrdegfDOHzG/n6/iLbkD55g4yX0Nb
FuXegvItHL7HPug0q7gD5Vs6JB/vDYmYeA/Kt3JIF7fi94l5AOVbO3ww49p3
pOwhlG/jMPWUz8KH0x9B+bYOuuz52/P3P4by7RxqvWe02b59AuXbO5itfCkg
rfgMyndw+LBO/OTNqOcQfoODA8e+6HafWS+g8o4OP7x31bnffwmVd3Rgb55t
tEDzNVTeyWH5yc05upVvoPJODk9PWRofP/sWKu/ssG5N+n439ff7D5Ueu2fs
7+wAEf+wHwBHIsce
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.014761296681667242`}, {2., -0.04384105114455171}, {
           3., -0.08680970965521688}, {4., -0.14325060509222934`}, {
           5., -0.21275957034779866`}, {6., -0.2949445633273682}, {
           7., -0.38942530319921786`}, {8., -0.49583291755657927`}, {
           9., -0.6138096001648871}, {10., -0.7430082789766128}, {
           11., -0.883092294105654}, {
           11.77605907884048, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.5`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.5], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtIEwAUxnGdc2gst8pyitjmnFrOli51rc19u2+2qZu3uTLnoCQIKyss
RmkxIhNjvWxSUL4qPawHpcBLpuAIFDUfbBd6ECLsJiQY0rJi58Dh8Dt/gfuy
/TwjKSmp/N/+v4nZVA1tyvvDhtkpemDBV7utHo6S0+C8J3I5Wr6SuTBY+d91
7m1yJnIWlzyetuTphHmQ+eyC4P40ci7GA69OL4Y4ZD7WOwa7uYpMcj4eeruY
AXY2uQB+zsAzpz2PXIif7Re6vjDzycUY+ZMhWc4SkY9CbPPsVLqKyWI8jXN/
3I2WkI+hljd/RzggIR+HNqh8YBkrI5eBreOsjE1IyeWQRpYmsiIVZCmqOKbY
DEdGPoHCffwD6U45uQKsDJ3L+FpBrkT91NWZiFhFroK3I55yMAyyDD2xJqe1
SEM+id3Dny8u3NaS5QgMi75ZYzryKfwej8306w1kBa6tLq8px41kJfaG50VH
JGZyNdyzh3zsYA1ZBfXOyPqozEIGUud63oZC1oT7gEBjp1/sqqOuxpp/WV3X
W09dDbN+tHTLZqOuwazDPb9RZKeuQfWjK4+zkxuoa/HxDWelM0bu06Kkq31w
cqKRug7Mppe9Kc+bqOvwa5XBE3qbqeuxMTnczbrUQl2PgpqthqFmB3UDXrBu
Cue0rdQNKO15/+mG1EndCKYlV/lEdIa6EdF0hTMv5yx1E3b33GJsctuom/Dh
neB+PP0cdTOar7dOVqS2T/8Ft97dBA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/E/9tAYq3URUTBJjQzJ0Za6MtOfuou6QptkkBC1sT1MV610
wR7UVpFMagayadllTknBmbZlNtPltHvTB7EHjZJK2N+MxFwptajwHDgcPucb
rzql1EQwDCP6t//v6ixkf7+6RiecEPnoAe0jc3ntkoLMQaHj88EDrjLyBhjr
64t/TmrJkZCyrK0wdJocjbd3LAzM58ixSJIsVsVwa8hbYd/4nt/hv0BOgP5r
iUlhrCNvgzgwUV3RcoW8He6VcTbQdI28A71tS/Lc5kZyMiT6lp5QwE7eiQ67
8VNp2g2yAAP6sc6ZwC3yLsRn8QZ5CgdZiLPBBGuBzEkWgf9DLQgdaSfvxvSx
aKW65i45Fb5i17v5gU5yGu5XRXi+8brI6ZjezF4fM3STxcg0zF5aruwh74F8
Smw54e0l7wXuVTRPcdzkDEwO2WLijnvI++C5qLwc9D0gZ8LEPtYsJz0k78di
8qxgfVM/OQvjGX2Seb6XnA3Nn5KPpdYBMnAyFFwXGTW46lrgZnDG8sU5RD0H
RS6ZtiT2CfUcdMqbKjlzZCYX3dw+2S/vMPVcsHNrlzdZ/dTzcFSVqBZrR6jn
wS7kxx7CKHUJOCluXcGWp9QlCI+ckXLDZEYK08qCovrDM+pSlDf8Hm4YfU5d
hrp0pyWl6wV1GbRmXWKO7SV1OdDqut1vfkVdjnZHXNt5w2vq+fCn6lQW1Rvq
+Yhjwo3DhwPUC9BaxpqiFGO+v0IL/sM=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtylkowwEcB/DFizRXjqYklpC0DHOzb47JVZriQcn9wJbIVigkUlvxNkd7
mCg8yDHJvUh50CbNkSXNsfz/zDlzvAjt96tv3z7ffuG1LdIGNw6Hw//Lf7vu
RewYcm8SmmsNNKBxra+5972L7IHCiduS4jk12RdKtbr080RDDkAey2oKnToy
D6c6FQd90+QQROa+KYI958lh0Phd+szs6sl8yB7LOouUq+QIiIzmbpl2ixyJ
pe9D1ji6Q47GwtR7fvbYHjkGOXLtgtO4T47F9Ijyplx0QBZgXW6atRpN5DiE
ZXG3uEVHZCHaGP5wgcRMjof3R53AWXFCToCliiet6zkjJ2K7dO7CvnFOFmFR
4bb8zL0gJ8Hiz46bWi/JyUhvtQ18tVvJKZBYklU161fkVIjnZWMWjxtyGo63
NcGh1bfkdOj7pYOMwUbOQAe72fAVdUfOxGuMTeA9ypCzYEpbybX73JPFqP8p
uy4ffiADcifjFRD06HIvoGWsqofJJ4OfQ18Z+AS4/l4Mv3NYsyY=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.018383762450766516`}, {2., -0.05459977447877655}, {
           3., -0.1081130685967128}, {4., -0.17840472634187748`}, {
           5., -0.26497139680545373`}, {6., -0.3673248296058892}, {
           7., -0.4849914218730781}, {8., -0.6175117788230178}, {
           9., -0.7644402875152259}, {10., -0.9253447033974341}, {
           10.42791957503206, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.6000000000000001`\\\", \
TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.6000000000000001], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyV1MkgEUxnFiJVq6ZXrhhbZ8F05Qm4AIAsLjB0LUzAClUNRwXhvRWmvF
IJ21OZbaonJ9rbTZhxddONto4prJcCsjrWnNNkrXRRcCho23bNU8Zzs7+51/
vr3L2MnlcDjif/v/bk1UYwyz55EVnKQH5Kk6B8NEyKkw+t6MuDai5N2YatZf
Xtz8Rc6G90/uoDO0PbDlHHDvTmzjhdPJufAZy+czU7LI+5CdSMwF5TlkBt9P
en8U/c4j70f356R3nc+QC5C80uyPDPDJhbg2dOHVe42ALERK3547CyUl5GIM
P3aVJ5+Wkg/gGTuZIYiIyaVoH+5yDIqlZBGmh7Rr5nsyshgJz/hbn0BBliD9
UOW3ntcqchliGwqrsU9DliJqYJS5oipyOXpYVu0frSbLILVnTxYW15Ll6BfO
7Nrp15Ir8FMUkvAadWQFbFbT6mxST1aiKDTfyn1kIKuQGTJYbfbD5EpcvC9n
vfx6shqOr3sn9PEjZA2WF4MFzEoDGRg+1fHh1vzRLbuBtY6VuCNopF6FNJUn
wx0wUa9CbEfZ84d+M/Vq9DeluGb8jdSrcbr7xqepQBP1Gkwrv8jOBi3UazA2
K1yee3eMei0WLLL4k8hx6rXIuzTmjK1bqWtxfXW0pDethboWLbc94w2MjXod
NhMvO+TqVup1MIkb6vm2Nuo6fJQ057s17dR16GXN7UthMkePM3zLuaudJ6jr
8aLNufSAJXMOovcmr4IzYA/8Bcaj7yM=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyQlI0wEUx3GZJButtBFmh7SZjBwZc5qble63qTvAYgoOtNLMEtGRkhlk
ZSZYEl1OJrUOZZhzpLEclWm1dB79N+fcCAyUAqEDLVuFSYdQ4XvweHzeV3Co
IucIKyQkRPJv/9/lCcrLgtxfY43JTnqAXdBqye3XkdnwPp/rfnztIDkCZltk
9bvccvJatOjs031Zx8lR0GR3T/JjT5M3wcpNL/3cXE/mQ58QKaiyXiDHQMUP
fFJqLpNjkRXa8Tr8SRNZiBtli5UnIkzkrVjonB7Ud14ni+DaWGAZqL1F3ob2
HmnhnKaNvB0TdYZ1MxUWshgNYaOsYkc7OQExP21fjTwrWYKP8KtvX7KRE6Gd
8jMOfhc5CUJTtGH1+H3yDsSfcTYtMHZyMtqjzk2NyHrIUrz/0MpsdjjIMlxt
OOuzyh6SU+CuMbI5zCPyTqSVfN8SLO4l70JVwKzjcvrIu5HHjheF9/aTU2Hf
u6+jq/IZOQ3rRa9YNyVOshwjcW/zmNoXZOBb9IE4a+nAsusAEydRPawfpK7A
nSTxqlCti7oCHu+MD/Ih6kqcF/MmC1OGqSuxP3hMr5SOUE9H/ryxxCMbpZ6O
Web30pvUl9QzMLjy4myRiqGegS/Vi+6UHDf1TEiCLew9RR7qmbA1w19fNUZd
heTDhjWuRi91FWKya47+aBunroZSIFSEPfVRV+PuH55m3jBBXYPmDSdXSJbI
dRqcupfPGrrip67FbPkDqVkQcP4FiUX3Zg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEf7DM/8Pw605G2HyrgwBY3f1Ho7gYon8PhzL7X
a7dPmADlCzjMXClW+jR0NpQv4jA1YMOdXT5LoHwJB/fAtdcVVNZA+TIOy3ic
M95O3gTlKziEGoopFi/fDuUrObgoXHrj5LEXyldx8GZedoN/50EoX81hRtb3
gjKBo1C+hsOXFXcOha04AeVrORySjlt0sO4MlK/jsHiTefxrjwtQvp7D+YYc
8Uf5l6B8A4cWtuNMyZuvQPmGDoo/V36cJHQdyjdyeO5w0X1uz00o39jB4/bF
k5sV7kD5Jg6qU2Vz+M7dg/JNHXRr90/8evIBlG/msESi8fYxi0dQvrnDs+fz
T8pvfgzlWzj0t9afX27xFMq3dDhVNYmD8+QzKN/KwS7ts/KH5BdQvrVD8aVZ
ATycr6B8G4dIDl0t/h2voXxbhw1+0cvWFLyF8u0cJLWuMM02er//DZuF14Qi
OwdoPO8HABskmzI=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.022006228219865785`}, {2., -0.06535849781300138}, {
           3., -0.1294164275382087}, {4., -0.21355884759152557`}, {
           5., -0.3171832232631087}, {6., -0.43970509588441015`}, {
           7., -0.5805575405469383}, {8., -0.7391906400894565}, {
           9., -0.9150709748655648}, {
           9.440937426363478, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.7000000000000001`\\\", \
TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.7000000000000001], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvGXbgy0MFKJ0tLlcpWXpW5NN/Vx021ips41tmmrpsNsiCuy
XlbZVpCSFMEqaiZRRukCy7KBlroE7UJRHzK8lKnV6IPYTOlCSRd2DhwOv/OP
NlWrzQsYhkn6t/9vYPyZS+92WW+8f9ZDDwQ98fnWzX0gc8BaTq0uejRLDkGk
ULzcs5XpDTgUTGJli0XIIa+ET7tspu1xCDkCav1Z+8PYcHIUFPXG+GPCCDIX
NxO0+8droskxkArbnndyeeT1YLyFnKE1G8h8OERTJSMV8eSNsE6+juqcF5Dj
YHtzoKbdkkxOQFrlqlLvbyFZgCMXrxqGbovJm2GbORw8d0JCToKH7/oYxmaQ
k2GVX/rR3A9yCnZMu1/lG2VkId6e4Q6cW5xNFmE8LL2J8yCHvAWfTJtYaa2S
LEbrIVH3wLZccir8cvc84vLIaeCFOt4pw/PJEpSOPv1lCy4gSzE8NlGVUVdI
TsfR+5qKn6eLyBnoc6yolrnU5Ew0dnSNTt8qJgPKhQ15g32agO2AM/K868XY
dupZkEwIhu/80VLPQuNAt0zP01GXwahxp1wr0FOXwc16eXtqDdTlaPV0NNW3
l1CXIzH2W9zk51Lq2bhu6C7XxBipZ0OeqnvZW7aTeg6aT+rmjhfvop6DPLau
YdF3MqNAy9clau3l3dQV6DnoM+yVm6grcS+LH5M8RbYrsdbf4Gy+UEZdhar+
fbNtsnLqKgSNDH5R+clMLsZZk9N8xdz7F/OD7Gw=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXlIEwAUx/HlX0WNRSxrmmuT0aGmc95T58+5yxSbR/2xQlMJr8hU0jSN
+UdQeYA0qKAiTdushI7lUaZNd2llmq0SXVoyU4nlCDGIoML34PH4vC8/rzTj
hBeDwRD92/93fVYS5tK9LxdKxIP0gCanjlVSm0neiJ9BrvCRg/nkrei3tV6f
dJSS2VjoqfQPbK8i74STUfiRka8l74J4rXH7WNsFMg/s9DSRpLGB7I/m/YYQ
P2YLWYDfu7+WLd3Rkffg/DT3F/fiNfI+RHeZ40t6bpADwHOxRq1Xb5ODUM4x
pgautZGDMTTqmZo820EWYmmsXtXnayCHYmJTaNbM53tkEUwNkly5qYschun7
Fp5X7kNyOKzfrX92rDwiR6B+sC65oukJORIafVPR3ein5Ci0ZGuYSk83ORqf
hDa2u7uXHIPDit6qqEvPyGIYmOrgoYJ+cizCePMcYcYAOQ43r6StbRO8JMcj
pm+xuUNgIktg3FI91x4wRE7AsSyd9FvEMBkIMVlSZArzurWA89aqXXfUQj0R
P55zjI/PWKknwp15ILBaZ6MuRfaRUwXmHjt1KcZXncay2RHqSdDUeBXnbH5F
PQlxeYuzJ2NfU5fh3PLx4prSN9Rl+LK3Vl2kH6Mux/JCnMV3/i11OSpSpKfF
LePUFfDYfVIfiCaoK+BmWWYcDjJDCb76kKez5h11JSoN3gO+/EnqKgz7vJji
jpC1Krg+RIr15e+pJ2NDgDu0088x+Bds/Pux
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7B8EinVl2GXthwo4RMXX8mfXNEP5HA6fdZ6a
nPSaDOULOOw5vnDm5avzoXwRh2fby5S0lyyH8iUc7jJkXGdI3gDlyzhYfe8R
PbdoK5Sv4CAS6Gdk17Mbyldy6NNcoS/LexDKV3H4Lf+o8OXiI1C+mkPdbbkf
ch0noHwNB4u1R2yzt5+B8rUcFJ7ynzo2/QKUr+NQJLnFR/v7JShfz+HQqY83
L1dchfINHF6ea/TYKX0Dyjd0uMhpGHLn3i0o38jhYLddouvBu1C+scPt1UcV
mBIfQPkmDsfeHPsr/uEhlG/q0Li/1rO49zGUb+YQtbw3c5nFUyjf3GFiXBSv
+8dnUL6Fww2D4yLvtr2A8i0dQt12lJt3voLyrRxW8AboHUp/A+VbOxgrPJY0
CHq3v0PQOtjktrUDNN72AwBTAIul
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.025628693988965057`}, {2., -0.07611722114722622}, {
           3., -0.1507197864797046}, {4., -0.24871296884117366`}, {
           5., -0.36939504972076376`}, {6., -0.5120853621629312}, {
           7., -0.6761236592207986}, {8., -0.8608695013558951}, {
           8.679241472920811, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.8`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.8], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/ExQYqlBRU4irw2NpvitrSZl/323+ammLdcs5w5N+fSZUJp
0MhmRRvkpNkeTAPJkB4sg0axh7x0kQ0lJStSJIdWWi0skRpELxk7Bw6Hz/km
GlsqzGwWiyXe3P83MuuyyZu2+m0PZsbogaDTod/vXyVvQT8KupNdYfIOVOcW
B+197PGId6G19smYaYBDjkNxEHULvJ3kvYg1hNIshVxyAka6TKo93ARyEuYH
zaGhtWRyCn51Gjkd8XwyD9HrKu3MfSGZj6zGtAs/AxnkVNTY72w46yVkIcrZ
1seNqVnkdEzMtQ3p4rLJGehzvVXsS8sliyDReAUei4wsxqhFdrHIJCdLoF/2
tF9LUZAPQlknbd0IK8mZmHqTVB6zUEDOQp7I/lc7rSEfQo+JEZe9LiJL8XLi
3pmrH4vJ2QhpOwO2qFLyYYQb5pqMvWXkHPjDta/++MrJueAf708vWawg58HH
7Zo9sLWSnI/J7p4rhhwtWQade9j99NwxMvDF430W49VF3AFkzqkYQbiKuhxW
x9LgsuwEdTkYp3qac6OaOgNBRcn39k966gwWm7+2bM87SV2B6yJnVO/tWuoK
vH9uyLfZDdSV8D0csF6S1FFX4lHb5d2Bb2SWCuf7Pswyd43UVficWDKypDdR
L8CRJuFZN7ee+qbfDcYy82SWGo7S37zVW2bqanhXXvibqxuoa1Bjdp2eirdQ
1+BopTT6xwqZVQhJ1eja1PCp8X8VIOoN
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyQ9IkwEQhvFPsygEtZxpa2iZxTCxZXOZbu1107nJRiY1miscphFpqwY2
CnVLakmBBiFCC7GJYA1GthojTWs2rKVSlhpiljBqFcWG0mgK/cE7OI7fPVur
zpTXRDMMk/Nv/9+VCYrVzjR2zKJoiB5w6LQNZpGavBZs61z/TMwJcgKCho0f
P2UayCwI0kQnrUsXySlI0vyWhJzNZA7G5qc8jr4W8hZMnLVI151rI6cjIvkS
SDl/k5wBuzA1dri1g7wD1UqZaeSPlczF4BH1rPh4FzkTuoGgJytoI2dBYubl
1/b0kLPxiGW87b3US+ZB1SFsjb9sJ++Gme12bbc7yDlQfT/85FfkPnkPNpyy
Hb3X94DMRyTO5OVeeEjOxXSUMCpU5iILwBLcCl/Jc5P3QjzJOqjf9Zich4zZ
uAp+7gB5H/zr5z7XKAbJ+bheoeb4cp+SC7Dsag/dVT0jC5HQbdGk1nnIInBe
dfsWbwyT9+NYTIt4uf85WYyFJsXO1T+8ZEBfna2f3zayYjPA5btLq3UvqBdC
Kl2lrbK9pF6IpBmjpe+rj7oEBQ2+MFcwSl0C+ZI88c7VMepSVK4xnF74ME5d
itLGb7pGzmvqRej0b65XjJLNRfhZx9Qqm95QL8aUPoT6nAnqxUhW+Y3OAJmR
YbzSFB/uektdhvKwspmnfUe9BL1tsZ6y5EnqJThwiM1XTJIZOZbZUY7Y9inq
cmiiEw3X1NPUFUgPZGa5N70f+gtqSvPG
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQEf7MM2y0uxfMndDxVwWJcQXdNg2wblczhIzb63
+xbLNChfwOFDkdj9B1qLoHwRBzN524zZv1dB+RIOopE/nT5u3gTlyzicfXjt
0LqNO6B8BYdLBW3OnIX7oXwlh19Oz19IlB2G8lUcVtvIcR/uOw7lqzmk+LjV
H/9/GsrXcNgXEXbHPvkClK/lkLDnwyGdD5egfB0HpwYDq+ylV6F8PYetIuVz
jjbegPINHHyn2/Txt9yG8g0dGqR2bFNdfQ/KN3LwfR2699uvB1C+sYNQ1qKY
VRsfQfkmDr/46o9qVD6B8k0drjPaMH4MeAblmzmImM363mrxAso3d7C/KhKY
p/8KyrdwULnDF2Vi+gbKt3R4InjvWarnu/2XI8qXTj5r6QCNl/0A0lKBzQ==

           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.029251159758064325`}, {2., -0.08687594448145106}, {
           3., -0.1720231454212005}, {4., -0.2838670900908218}, {
           5., -0.42160687617841874`}, {6., -0.5844656284414521}, {
           7., -0.7716897778946589}, {8., -0.9825483626223337}, {
           8.074648557438852, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"0.9`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 0.9], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyV1IkwEUxvE1mhkhWem03GJTWaYmbmvNtdWe+W7vpkU2y4nLie7LSiWh
tKtsoIVJpBSY2o1SIZSYRGiQKI5500CaWZKzoshwUatliKOiD3YOHA6/8xfb
z5S6uBwOR/Zv/9/YfNN6VcJclSYwQQ+MGCWzkp4QOR6+ZO6GVUuUnIgepvp+
0fL6yZiTsNy57sWJhM3kVDx0nQ3wLieTBfC79cEtdQKyCGXzKT+aU9LJ6diY
1mRvcknImRh6zy9mBTlkCeK6hGa7IJ+chdwxpy8SlJGzUSyo91n8CnIusvJq
VsShAnIeStjAWliuIefjsYe3x3lPS5aiueRcRu9dHVmGnU+kcR0dDFkO48Vr
3NpWA3kvsuemU252GskKjPEzFi8NF5H3oe/wVMXtt4fISpicFZ8d6UfIBQi3
b0oUqY+SVYjIR03WBjN5P14x4Y/9g6VkNV7/WdgxGjpG1uD8c+tXm7yMfADf
L0yrq9os5IMIDKR1tyyWk7XYVt9vaFdXkIH2zAUFO2CN2QPMd62G2hIqqetw
K6ercavHRl2HT8ZA+cRaFfVC/NwVfTakrqZeiCvSeFvwN5nDQPly6NGct4Y6
A34j627tsFPXQzjy4c7scQd1PaZmLMyw2EndgOLh6gfcCNljQIs/6cu410Wd
xco78/Wn3W7qLN5IHd7tDbXUjai0eXf3Gk5SN8IUjEaVolPUTTDzBpeWfpE9
JvTP9AluBE9TL8JVZaopf7xu8i9mqudi
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIEwAUhuFtihYFlU0ojFCLaWuaumqbmn7TqdNIyEGYjSnCLAbTUVLk
D7XIS5pkq2VENBBdOmOwpmwydLW0tTla6rxkWZMCs0aXPxm1pMJz4HB4zhtX
WVOiZDEYjLR/+/+uz7fsqjb2jM8PBz3ArBSt6NZKyRuAjfM5wdEz5K1gseTf
51S1ZDZamsNMm2T15B0oNreZlsKbyLtQ4Y3VXH/cTo6FVFrO/WS8QY5HlZzT
zX6nI+/FqZNlPfcu3iVzUDSijtBc0JMTESjz7PSouslc6G9O2rXSXjIP25Yf
JgzI+sjJeKAIKaxtA+QUmMtXp5VBEzkVXTr9NWuGmZyG4c7NnqJoC5mPwsSG
OyWsIfJBJKcKOkQsK/kQeJJftmr2MPkwJsYMTUqhnSzA56O+Wzr1CFmI6pYT
+jqLgyyC7Qtzvyf8CTkdYtOVOIvASc7A4qJoNuPsU3ImLj0ate8bHCMfQeiN
IkLyZ5ychbDQ7fuyYy5yNlr717bv6XlOBoyRXZ31TM+6G4Ead52Xr5ygLobW
E2RG+bzUxRBUOJdWsl5Qz0FUN6e1Y9BHPQcKxoLwY9dL6rlIcWtsuaWT1HNR
6w4cl8RMUZfgtyxyaCZAbpRgedyZ9KFvmnoe+CqJXn7OTz0P1uLmBh5mqOfD
8OP9lHjLLPV8mN/6E9oDZEYBuD6XdtUyR70A8YzdxvNX56lLcSAm7/LPilfU
pXiW9LVfnb5AvRCZhtMcV/Rrx18FTfs1
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7NO6RK6ev1KwHyrgwJhk+XLqvw4on8PBgfOG
05t9M6B8AQcmppiP17OWQPkiDu1tzOu4g9dB+RIOfhu71j1k2QrlyzgknFEo
6D+wG8pXcPDwiNd6teoglK/kkBajtkjk/lEoX8UhOjJqyZzKU1C+moPX3ly2
gvLzUL6Gw4OoU5Knsi5B+VoO8ydf3D3J4yqUr+Mg+HyN+urgG1C+nsPyuD9x
27tuQ/kGDhvjv19OfXMPyjd0mD51fs9264dQvpHDzgk8p7xEH0P5xg6eGvUz
gpieQvkmDnqG5r2WTM+hfFMHHZdfO/JEXkL5Zg6njyxrTbV4DeWbO7z2Pj9l
au5bKN/CIa89bH7V5vf7L7oxrTugYOEAjYf9AHnJe7Q=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.032873625527163594`}, {2., -0.09763466781567588}, {
           3., -0.19332650436269638`}, {4., -0.3190212113404699}, {
           5., -0.4738187026360738}, {6., -0.6568458947199731}, {
           7., -0.8672558965685191}, {
           7.56016947253743, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyQlI0wEUx/FNHRpFGlpWajqdc8l/5v55TGftN6f+57IDFS86zGtzukIr
jWElYqYwUpHZwTCQpkhBTZLKLMlAuqDMCrEslayQTA0riGYHew8ej8/7CgsO
pxe78Hg89t/+v85ZUAaGO0LLg0fv0QN17sOcxPCF7IHZ2bs1D4W/yV54rT16
3DvGfdBpH0RMdn3vSVhDXg/fOZtKNuNL9keDsaNxwBxIDsLXoKedL9aKyMGI
b60fV05IyCIUxT1pXLUhgizGCsn56olpGVmCYIHVc2k+ihyO2Nux7aGsnMxg
OTebHe9WkCMwdoPhGnYryZEw9PutfNWmIsswYvLs1Z9Tk1mcWi1qeWRPJm8F
G9B0RjPNkaPgxWXcUUi05GhczgvRLdelkWPwQ+d6a2FxFzkWNax8VNG/hyyH
6doD/bJbOjkOcwNd0p85GeR4DAQJCt/3ZZIVWPLIKq30yyInYHin73VjUzZ5
G5hph63lTw55O8bsl3qsJ/LISjzj2n5luu4lA5v7+FdOtuxzuhYwabtbJ0UH
qKtQ8jmwQ5ifT12F1HpphVx2kHoipsQ7rl4UFFBPRAjj77JlgsxTo8e7/dPb
m4XU1cjexJw1W4qoJ+G0PeyduKqYehJehjEVltwS6skQDn0wDyl11JOx8dib
gAsSPfUUWHOre918SqmnoLJZWLXIN1DnEF3WzKR9I9dymHoeKXWZKaOugcZ2
fz9/vJy6BvMaBysfMVJPxcd1Rzotjw8N/gVlk+NW
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIEwAUhuGZ/igUU3KVTmWrGFOGmaVpNv22eVlFuZzOYmWk7oczSIy0
KGHdFEmTWEwjJwlKtkHRtm4WrWVJarbUuWXa2mpG0EXJC5UOKzwHDofnvJyi
o7nKZQwGI+Hf/r9LM5W+PjVcp7ststAD8uI1coNFQV6O0qrBXt+JMnIImJfb
/G36SnIYvs95fwtG1OS1qFsRGTGUX0uOxNw9VVS57RKZjZh988YcnYa8Dvbj
SkWIpJm8AcGVWkFliY7MRURTX1Z9VRuZh4CDaQV5Fe3kWLhVRvOv6zfIfHzc
HcP86mcgx+Fa5xnOTc0tcjwCw0aDCmPvkDdhMuqTYJxjIieAm9TtaN14l7wZ
6s8K+5/c++QtKJJN5u28+JCcCHXNg/JvzkfkJJyVmVZlJj8hb8UuT8YRV/5T
cjIU4TkV7mYrOQXV9itFHu8z8jbM+pm4LSnPyal4HODqGtC+IG/HlHUuKnGh
hyzA2I9wkab0JTkNndMdPr2rl5wOlt20AEU/GfDqF42sD6+WrAbMhYI9/qrX
1IVw73V0Wudt1IXgH6uJDu17Q12EmWJh0Mmrg9RFWH1u5ZfFsiHqYsQ18roa
hMPUxWhhOkWBEXbqGSjo/jlzeJaszoA7+sLUqeER6ploVDb5xGYH9UzIpbza
jiYn9SycbpBo66vfUs9CcM+BgQnlKPVs6IPPF7dK31HPxrSBw24XjFGX4BCr
Tj7BH6cuQfz+fo80+j31HZCVtLMdoS7LX1zl/kE=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQDQEf7JWsJefOXV+0HyrgEJosHrZ6fzeUz+GQUX7x
5N+K2VC+gIPIxIXM51ctg/JFHN58e/LT9uoGKF/CoYNTRupS6HYoX8bh67Ys
2YLz+6B8BQeNiN+b/OcehvKVHC6XpkYLeJyA8lUceMum2ZalnIXy1Rwkp59y
6ym/COVrODDH2oWHFF2B8rUc7mdt2vJjwXUoX8fhoa+m6GvG21C+nsOsFY2K
Kyffg/INHLhFbvLEaT2E8g0d3ss+tr2j+BjKN3JQMzt8bZ7+Uyjf2KHhWfSV
X0HPoXwTh6Tg9yFe3S+hfFOHhrYdBW+uv4byzRyagjcLu1q823/9ifnldzvN
HKDhvB8A9RFzUA==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.03649609129626287}, {2., -0.10839339114990072`}, {
           3., -0.21462986330419231`}, {4., -0.354175332590118}, {
           5., -0.5260305290937288}, {6., -0.7292261609984942}, {
           7., -0.9628220152423795}, {
           7.141315986064602, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.1`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.1], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXtIkwEUhvE1/1C7ujFWzDnz0kqLuVzels13bt9mkcUmXjITdTrXKl1h
hZk5lMokJMU0RKdIGIZgmShZy0mSVqMws4yUWWRQGcUoCyqt2DlwOPzOE5RX
rC9gs1isyH/7/3rma0KFYCawzWfyHj2QOVpgD4v/QvYBz1Hqbp5fJPuBr69m
Zqp8hzzmwfzTyep0c8nrYC2ZupmlFpCFCJX/bpalB5HXo8Zs1Ul4YnIwLN4N
+uWpm8mh4IwNGT7USMlirHFwbRldMvIm+KdMZC54xZDDsTHNy/Ttipy8BVNn
k4/WGxVkCW5xRh7VRinJUpT19S2d1KvIWxHReR2xFxhyJN7m8gW+r7RkGUR3
qlaGK3eRt2Hh9mz2rGM3OQp1thD3ifS95Gh0DQevCGTryDF43qu6wRj05Fh4
vygbnn6SQo7DR6aJ26BOJcvR/sffFTCSRt6OVdzxAUlyBjke/LEJS7lrH3kH
CjXRfvdP7ScrMDscYh8UHSAn4GLIuZ6gx9lkYK6Dd+l1Qo7HVmA1u1soEuVS
V2Jx8IeXnJVHXYnW/GP9nPdkViJGN7Ser35qoJ4Iu1h6rfJuPnUVBLoKwVx3
AXUVGp2c/svtRupqfOo1ry1rKqSuxjvrsrbTdSbqDL5PmsyVtQepM+gTdew5
XmumrkHieMszRd0h6hqwP7vCHjYepq6Fb2lWxJLtCHUtSh4U5ji7iqgnIY6Z
fikcKKaehJY3PVeLDBbqOxHwy3imfN4y9BfVkecz
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvHXSWQgJbZIapmJl7GFpbName5x7qJQtiTLMqZWkhY0kTL3
IRiCgVKtaGasqFDbkHrB+zJF1xqmIy1na5Y2zZLAlcuRsfpgFzwHDoff+W85
ockp5jAMk/Rv/9/l+S7xeDcVn62V9dMDzacWbVadmhwC/axDtUZ0jhyGuKgv
6wbmKslcGASDvJ+6KnIErEVstc1UQ+bBrjpWzPddJ0dhZUl9Sqe+jhyNNH0T
N7TVSI6BOqvUa45/QI7DlQPq2kJRI5mP2II2g0drIguwWXqTVf9qJm9Fa8dD
jrCFJSdAoQ0u3z/SQt6O1MqubTWeNnIilKY4HxPSSU6CYUL7yZ9lIYvQ3SQO
a2zsJifj9gUzL5/bS96B8cEK/pk7feSdiFyYUoXftZJ3oYEXvdr/4xlZjCCf
3xCc95y8G7Kn8caA3U7eg8e5H4XVKQPkFNwTVt0v6HlB3ouTowk6yIbIqehj
XJdmXA5yGnK8Hcc5ZS/JErQvlcyqw0fIQEx2ietJ76tl6wDm95/TpZbX1NNh
/DplFhtGqadD0iXcx553UpdipkJz6FHeGHUpnCvk9evxhnoGEnOne9wCF/UM
DBYNi5wRb6nLYEnyJM+vclOXYfKisn3tEpmRY75wLl+4OE5djsBBx7VI3zvq
ChyOYY+6ve+pK6BhP5fDO0FdiYRsJMu/TVJXYuhI7K3RhQ/UM1G3cVjgDHio
Z0JlGwvdEDRNPQviG2VX/Zen+/8CdiD+rQ==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQEf7O+9lk3N7irZDxVwWJny9dCBhj4on8Oh/+mp
AH7jeVC+gIOawnPRY69WQPkiDlO0Tsh8a9gE5Us4HEhc23po2U4oX8bhSEBU
qsb7A1C+ggN7xnTrrf1HoXwlB7v+JSI8G09B+SoOcZ6Zr5erX4Dy1Rx6/OO6
EowvQ/kaDqrxm6bcq7wG5Ws5yDtNXhv38yaUr+OwcctSJu0Nd6F8PQe3SuYi
33MPoHwDB9uKbfqd9x5B+YYO7svU3jNwPIXyjRym3K58/MnzOZRv7LBziYXA
4sUvoXwThxmly2WiRd5A+aYON06UaWTNfrd/wZv2DY0dpg7QcN0PAFpxbk0=

           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.040118557065362145`}, {
           2., -0.11915211448412556`}, {3., -0.23593322224568822`}, {
           4., -0.38932945383976614`}, {5., -0.5782423555513838}, {
           6., -0.8016064272770151}, {
           6.772615679362726, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.2000000000000002`\\\", \
TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.2000000000000002`], Editable -> False],
          TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUh/EXiVybmIlSM6k2LKRZ6eYqa9P/bm6uyXQkbmZWmqUzXBpk
KM1uVlSLFBE1kdkqtTD6sDKKFJofdBOXJkuTdYGIyi4uNQODLuwcOBx+5+EV
WgzFIQzDCP/t/xucmbQp9lPu2DdfHz3Q6DrTEh0aILPQ6o5xPpxi+oOOgN7U
Ftk5yiFHwR4xy7nRFUVehbeLbP5FRyw5FlZpd4D1kU9eh7XOZOZSZDyZj7aT
Dvf48CZyHMyz3LO6ZULyBoQbbQMvLGJyPMI62Ld/rUwhb8Ty2ZEU1x8JOQHj
EzzjrQaQN2NuMFCR55KTE1F3L3MuZoWKnITzoypvaI2aLETqA9ZNDaMli7DE
ZK3n2HXkZLxMKA+pM+nJYkgD9X0L0dnkrcjxKh6rLhvI2yAQ6W36sN3k7Wj4
LYp50pxDTsH7kQsLiYm55B04/Uq4J3/MSN4J/mrd0mlrHlmCIvm1JJs4nyyF
/U559fz8XnIqPox2Pp/o30dOg6NWIqwa2k8GxGVd7qreA0GfAt4UnJvxdBdS
l6HJ5i012IuoyxBQ9i5+bj1IXY6euO+Fx1uKqcuRy1PqfNcPUVfgytWSzK8d
h6kr4Kte8LffLaGuhMHZk+V9VEpdiZ+TvuGiITN1FTyfvqjl/jLqKmQNltRm
zx2hno5pzbMfJ8LLqaejSdvutwss1NWocEVxJ9cfpa5GaIE3Y1cvmdGgubIm
PlZbQV2DgTXvtshek5kMeMyNgvvHKvv/AnEW8FQ=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyQtI0wEQx3EVZWXIUhYzM0uxsdbSzcfScu7nnP9NLKgZSBGaohUpJSjL
FErDQjFjmE0jZxZLVmYbQ6w5fNRMEh2p62GmqSukKGpG0HrQKryD4/jcN7Lg
pLrIz8fHJ+7f/r8r45a1tkVtTy5iBumBP5YP3I8dh8mrMLPVVazVlJLXQmIS
8vsFVWQOUnK7ZPeEteRQeKypy5bvDeRwBDFeW6umibwZS6fih8POtZCjcMf4
1sEK05Oj0ZvDesDR3yDz4GV9dSR8MZD5UObzpo7VGMkC5K4v7xzed5csxFBQ
cEVirJkcA0Qw2SNqC1mE0tnL6p6mHrIY12OOd2z53EuOg2+NyM0UWsnxcBes
2531zUZOwHhL3rti/QA5EbrzYe4y0xBZgsqkJa5f+CPyDnhyvKaAZjs5CZ3D
uvs87mNyMgI7+ibZt0bIO5F/my0+IX1C3oUzal7t8vwoOQXOhSOurItjZCna
Q7RWsdxBToXHZbcd8H1KlsHAYR8dKJwgA+aK978EeyZXXA0YFIv8yeQp6mmQ
m/dXaQVO6mnY+2PidOamZ9TlcNTr2+a4z6nL0VBXycRyXlBPh2hDa38k5yX1
dLi77dFXudPUFQi5OVpeGfGKugLOidWaLv4M9QyoDkn7QiSvqWfgSnaJroWZ
pc5gmy14Y9TBOeoMxppLQq+VvqGuRHfjb/9P9fPUlRiv4Vzwqheoq+BqrDub
5yJXqxAw/dC4pmyReiYU7kuBP/1dg38BSPD3+w==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7GfMUdK1TC3bDxVw+LfppfjrBROgfA6HW5qP
sieULYDyBRzM1uto7NVaDeWLONjErbZfp7MFypdw+LHT7uOm77uhfBkHXrf/
u2eUHYLyFRyelRsfkWo6DuUrOaxa8fgsu9RZKF/FYVs4+w6RuRehfDWH/+yf
zpq8vwLlazi4J6pdymi8AeVrOcRJliw7EngHytdxOMArWGGq/wDK13NwkHML
Phb0CMo3cCi4Mzloy6QnUL6hw3y9rAWq755B+UYOjI0GH9xSXkL5xg4fkkR9
vL+8hvJNHM5Mj3+SPffd/ifWJdNXNZg4QMNxPwBmUmj1
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.04374102283446141}, {2., -0.1299108378183504}, {
           3., -0.25723658118718407`}, {4., -0.42448357508941414`}, {
           5., -0.6304541820090388}, {6., -0.873986693555536}, {
           6.450099671829859, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.3`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.3], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyX1I0wEQxvE5Wg6CMJ2rYbSaL6lpW5tv6eaen25zE9FcK9tSWTpNl+V0
QYpBA/9YUpAoBI4hWJAGYQtZRlZSCQURgyA0URuSNShtGySmLip2B8fxue+h
hnZ9E5vFYkn/7f8bnaCycMudwPk494IeuHZXb+DbwmQuJN6NNSHDno46Dv1m
z2ebcDeZh4V0wd7hej55H7S9ioEJtpC8H0s4rV3qSiEfxNNIYHwlLpMsQqDb
OFIlkpBT8PbA5TsPnTJyGnjB2O+VefnkdOz8yYQ2jxSRMxHT79o10KwkZ+H1
mvtKTJghH0WxQyhIq1aRJRga+xp47tOQjyGw7a+bbdORpbjH3cq+friCLMP6
ehd/9U8lOQfLvsgH3u8T5FzkJ8TvyHHoyXmIXbS0tvEM5Hw4J0xWo/cUuQCi
5B+dQw015OP4UtO18D7JSC5Ey6Ru1uU3kYugSHljGPXUkuXwPqsIu2/UkxVo
d54MDxaYycXYCCZ29kjOkZXoXfXerMtuIANOmZzDEzdG7QAeTdXOdOdaqDMQ
m0d9VjRRZ6BO3cZMVTP1EgwmM8WWxvPUSxBKOhPK6GmhXorIu2rHr9ut1EuR
mLHIGXtspa7CpDfYlzx/gboKHNmDzfKYi9TVGI7YUtlZl6irEegQe7JN7dQ1
KPPb+z6pbdQ12GMY18r9ZFYZjOU9LunVDupl8M1ZGz2CTupa3HrFXbn/hOzQ
4tvZ+KkEo526Dvb5l3PLm/bpv2gi6i4=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/FZIg1B3Sqz8CGHuZLospktL9tvOudf2xRXa0YRsWh56YKV
A4NqsdZ8cRV7cskMLMPFLNGkMPTPLPFWM28TW15KSaFwaT44shueA4fD53zj
9Jc0Z9dxOBzRv/1/1yYg06qFy2FgOuiBhubC9+UhevIGLEyd2ls9VEaOQq70
ckpLyXXyJszet+kNYxZyDET8gZN1jI0cC13qIz73t528HV1Wr8p0tZoswBaP
wLreXEuOR4Th8e1b/DpyAspYC4/7tJ68E0VnHJFLlS5yImoCR2sTXY3k3RDK
vRe1d5rIeyDprEyS+ZrJ+/AQZeWTylbyfvxsdRfkDr8ki1Ca8PWX40YbWYwd
cYvWJUU7OQl//OHHpHaWfABs/UqfiOchJ2Pk5reJHw86yQeRZ/cXbBW/JUug
cqSM54x2kQ9h0KLmCi3d5BRsW01P1sl6yanQV/QWmUP7yWlgAk6FbvgdOR3m
+MPLpkYvWQrNheKqwp4BsgyLDcUn1OwHMqDpja1aaRtcswlQ3fXMS14PUZdj
4UpP3hw7TF2Oc2nGJ7M9I9QzwNb0zUT6RqlnQBX+fFk556OeCcl0fkfp6hj1
TAiCrzafjh6nrkAF70VLmPgjdQXGdvVLMo/4qWehSXcvJmj8RD0LGdoIZ5Rz
groSPI1x6nz3JHUlYqXBieC1KerZqDX4S3I2TlPPRrsuWh7tJnMYhNpc81rm
M3UGb74/U6zOkDk5OJ7vtoaYv3T8BaeV/Ts=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7EN91b+yOVTshwo4rNwcca6UcRKUz+Hw/kGc
/szLC6F8AQcvuyKrLVlroXwRh6cT+5LSbmyF8iUcjIQuxCz22AflyziEWy8R
4vx3GMpXcDjWft6noeQklK/kIH5IqZ25+TyUr+LAl7a0pVHoMpSv5lB4oFWQ
c/U1KF/DISN5Fv/njltQvpbDnA8h87VW3YPydRzUHc/nhbY9hPL1HCwOd5jY
X38M5Rs4LHAoLL3v9gzKN3T4sm1toNeVF1C+kUO22vM/s+peQ/nGDqqKn9o/
u7zb3ynEVXJiprEDNNz2AwCYymG/
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.04736348860356069}, {2., -0.14066956115257526`}, {
           3., -0.27853994012868005`}, {4., -0.4596376963390624}, {
           5., -0.6826660084666939}, {6., -0.9463669598340572}, {
           6.1769171585863685`, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.4000000000000001`\\\", \
TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.4000000000000001`], Editable -> False],
          TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtIEwAUxvGVzjIQTZwukrAhbslWuTk329a+be6mKLWhYepwLi+ZuXWb
mBPdvKC4glJWVkO6MHoxFgvEgmwWCAZFBQ4jbfWgYBeNXoIpVOwcOBx+57+/
wW5q3M5gMIT/9v+Nz4bS982VIn328Tk90NzHSc1a/E3eifDEwoHhQMJM3GlY
ETVU+YvSyBlgqZScWxlsMhtVTKl7PZhDzoasJGEilJxHzoFJ769TpfLJHDDE
1qVCSwE5F7mlb8LpSWJyHrKGPLvnN6VkHmLyTvmWUkHOhzMz1B5cAZmPyUT2
jbrjGvJBuCXlL34ta8mHEbjXs1R/1UAugJrn+h6wlJGFYNb+mJqrqCCLYJ+f
Ll99dIxcCPPwq9xmrYksBl983ehYM5OL8GRtgD3qryRLsCxq0tssJ8hSTBof
vO7gV5OL8TnaEm7dUUM+grKxevPiz1qyDJUC9X3bVwtZDs/t/uoFRz1ZAe+0
nStwWslHsfkn0rXL3UBWwlpzaFVzzUYGIrG3ymDgVNy9gIctvskNN1JXYU7Y
I+6LNlFXYZypGvQntlBXo5MzusckOE1djZHMNl/3yVbqGrQny0JbI2eoa1AZ
mRU8DrdRL8G+KdHLjthZ6iXI8rp5wmI7dS2eDl3eZlU4qGsxm9K1kRglM3TI
vjM47uw/R12HT54rnIf556nroX/3Za/3PblXD785qZvlukDdAG+6766Ee5G6
AWnjGt3KBzLDCE7p+gDLc2nmLx9v33A=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/G1RmaRSCSs/UNKuuqKbZWWru3n1F1kWirVgxVkzQylka2y
QJyl+RAtCbRBF2ZpygqVSJaSmaVOm650W05Tc80lEc7N6iGUbngOHA6f892Q
o83UsFkslujf/r+LE5CG/45pd/JSO+iBzGfWMlbOCfJysI0f52oE58jhODJg
UT82l5DXwNB9tjyyrILMRWyLYKpPXUlehwcC1elL5VXk9Xh0O9/ly71DjsLr
GYHpz08TeSNO6ZIy/BW15M3wFa09OJ7bQN6K65qwtOLKJ+Ro+L08tbK0mczH
Td0Nzfnxp+QdEOXZIp5nt5AFcNamG1fMW8hCpEuDbG1bG1mEUdu90FljO3kn
mrTTnoHUV+Rd4PmnW3uGO8m78c3qrg8WviHHQmSdq/Mw3eQ41Nlbv/OHesh7
ENROLBRU9ZL3wpg/CYnmLTke7w4UJCCxn5wAmelMWsQ2O1mMsZL8LGHYe/I+
iJir3LxVg2QJNn0NiDmrh8hSiKVd+8cYBxkIMBmRvdHOReuB2ZGHZpPERT0R
1XGSKBz+QD0RF0sYV6lumLoM5qZffFm1m7oMHIOv9tiLEepJiK0P6Wz5Mko9
CSp587ItEWPUk+HQm37cUoxTT4b9imF+tHiCegpWZnkveCyfqKdAG+Me6ro8
SV2OQt3MYDbjoS5Hn/ClsKGdzFLg6LV4x93jn6krULedu8AP8VJXgjH0Z6kb
yXolipben/QfmqKuwslGGyd0ia/jL7CiAVI=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEf7Hn/ae+9IlW1HyrgELDleAtD0mQon8OBYcbt
TwsNFkP5Ag4RZ7f7rF61HsoXceg+Wtgq17IdypdwMNlq8OSkzwEoX8ZhvoFn
ZmXrUShfwWHR9OyrT9NOQ/lKDvvfGiz4//UClK/ikFLiHPiu/QqUr+bwqEIy
9G7aDShfw6Ejlc+3dsIdKF/L4e1jKR+PxgdQvo5DX0lvaundR1C+noNBxmnR
HdFPoXwDh4tL/GZw/X4O5Rs6eNt/ZMrf9QrKN3K4fnou5/sZb/fbhrA8fXnW
yAEaTvsBXm9iFQ==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.05098595437265994}, {2., -0.1514282844868}, {
           3., -0.2998432990701758}, {4., -0.49479181758871027`}, {
           5., -0.7348778349243487}, {5.933958268504734, -1.}}]}}}, {}, {}, {{
        }, {}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.5`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.5], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtIEwAUxvGRiIuyvATbRExt2DCz2tI1Z+7b3NwMHa5pc7Ekd0mtWc7c
BHtwhaOYhV1IdEvMh4ZRDxtJuKAMVokVxYJUKEZF80HDxLUSym54DhwOv/PP
MZ46aFnHYDD4//b/XZslSeydIenEyPtH9ECNaXmKJYuTmah1j5mXNyROrDkF
PcIvpeeOpJK3QK237Ox/ziGzwazUiFwfcsiZGFD64xc828nZmL+s2TiUXEjO
BXupmZPh4ZO56LbzPtp7isl5YGevChWhEjIPi27/+T9aCTkfC58HZlgZMnIB
+jOu3Q/65eRChBa7mh5aleTdCNxgv0moPkDeA4+WdcZRU03mIzDz9WaCuIYs
gJEjTKmPaMh7EZL1OoJXtOQibNWl9d2trSMXo2HFNxnM05GF4I/ZuK1JevI+
FLUZuIe+HyaLMN2i9yXFDOQS8Gydr1mrDWQxBN7Iymb3UXIpfLOfRBFvI3k/
bi30Gp7dM5LL8JPhcQ2GTWQJSqZGpflxMxnIfWLqqso6tmYnoLYnW99WNVGX
Qp+o83qdzdSlmIu6XjiCLdRlqM+JfpP8OE5dhqxUpzgsslIvx2wFdy7xbCv1
clxyjdY9eHmSuhxlBvFvy6Y26nL0te+4c3GczFBg+Grp0mOzjboCbmOEGUtr
p16Bed3g7fQQ2VmB4YD1V7r9NHUlCupVQ1FeB3UlGl+N9HdFyAwVuo3bGp5e
t1NXYdd0R3hc7aBeiclgpkC1vnPiL0tj6Uc=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyWtIkwEUxvFhkQ5ShGRkqcvhLRs65+uWWfq4OV34YShbWIllLYJMytS0
stqWy2p5yZiXJAqxWcK2rDGJsjdnlFiY5jS6YLMsUFL8IiYaq/AcOBx+5x9+
6ETuER8OhyP+t//v6synDdpExvaFbJYeWHFIUkwuLdkPPFWes6u2jBwIqe1C
fM6CjhwEyZL6/nj8VfJG5BYuBcvKb5BDMBM5x06vbyZvQXWnb0H23ttkASrO
Dledj20nR+C5YTJ0/5975CjkJVhbugVd5BhYjxqu+bbYyLGoU5mU56zdZCEW
O7PzzYyDHIdt/gGLIo+TLMI6rvBpkv0JOQGW14zj5t1nZDGUJWqe/DFLTsSb
oTFveGkfmQHj7Q9VhfSTk8Cb7rn00P2SLEFdwNLxkbZXZCmWuc1mlAyQt6NJ
YeA3qAfJySjIKa3UKN6Sd8DYcQtb5UPkFDQe5raORg2Td8JcU7NWKh4h74Kg
46CzXv6enIrf2spf9n2j5DRcdodlFFW4yUBtsdHe1Dq2ah3QGGEs8usbp56O
1OVHC82zH6in44rrhU8Y/yN1GZpc0eVlmk/UZegN3Kw+3fCZuhxJxazL++4L
dTlONVoWZzdMUM+AaN7E8PO/Us/AVHHMgWS1h7oCTHTbMe0KWadAmvDBHr1l
knomJtg7ifrcb9QzcSbSUK3hfKeeBb6lJWXeTtZloX7Nph554RR1JZi6uV5Z
0A/qSsQFX6/yDJA5u3HSf0YfePEn+xebBvfK
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQEf7E+tM2hd9LV6P1TA4c8WM+vuQ1OgfA4HMf+I
bat6l0D5Ag7m6+r0A79ugPJFHMx+hqy4pr8TypdwCEr8KelUehDKl3F4pfpu
/0ue41C+gkPLcvY478izUL6SQ3nVhZparUtQvorDvqaHstF/r0L5ag4Rhmtn
bFS6BeVrOKxNb+pin3EPytdy6PPv9qhe+xDK13H4vtw7ZqrJEyhfz0Gbl++7
wYNnUL6BAxunzm7T9S+hfEOHZcdNtkxe8AbKN3LwKAwRc978fj/D2h+Nf8SN
HKDhtB8AgcxeLw==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.05460842014175922}, {2., -0.1621870078210249}, {
           3., -0.32114665801167186`}, {4., -0.5299459388383586}, {
           5., -0.787089661382004}, {
           5.700275810781017, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.6`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.6], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtI0wEUx/H/xCQT7U9qzDXn1GXaRbystry03zadm9nFS5HlVimmaExt
tmWhG2rE2Egb5ZNUVIiwqGWDCmLaiM2ihxhmBjLnQ6FgkT00DOnGzoHD4XO+
6Y0dNc1RDMMU/Nv/NzLfZTXvSji3rwU99ECR0jvIdf4kb8RSt+POqa6YyYhZ
iIqNmS2DW8hJsHbZpA7LNjIXL+1tqzw2k8xHuFJbpduVQxZC8bVfu74hj5yB
fGfnsT8fCskizN/tZz5FSclZ4D836aasJeRsGFYMy4wb5J1oetoH8yEleTcG
8hJmk1kVORebxsYTrL/U5Dx4R574xuKqyPlY65uIVSmOkAvQxFluvn+4mlyI
+lZ3YDq+liyGdL16Oi5YR94Lbo9jZslznLwPm2OmjaHHJ8gSXBf3ckyuk2Qp
fCNJveKpBvJ+zP3Q2B4EdeQixO7wb3dePUMuhjeNL/x27yy5BIFkOe+Lr5Fc
Cn/q+I3Tq03kA4iObRjKzmgmyyCQZIyy9efIQI897F661RKxBcgKfJYNzLVS
l2PtYy7HLWyjLofS95Y9qm+nroBaKHm/59V56gp4426GRCl66krUDcanJBg7
qCuxkuL3LLZ3Ui9DeH6ex6Z1US+DIG2rwjJDZsoxPPo7KLRfoF4O3TN5+mK5
gboKrxMfvnBxuqmroA8dnDVPkpkKpC48EsjMF6lXoFBT6lqAkboalgkXrzba
RF0NbeJYg+0NmdHgSk5l6PLwpcm/m5LiDA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyVtIEwAUxvGxyFwRjFJTNqHUzMyJedncvH26i4ptDnOBE9TyAoI1EW1N
opZhsQYLsyiUyFgtIihRhnMjZ7Lysoi1GpuXhqVu6Ev10kNWVngOHA6/8z90
RlPVzGQwGJn/9v/dnm9F1+tz5O0euZMesFgff49ObCFHIjXCpxvd6CKzMdn1
0HYiuocchWBartu0eIMci3N7pyrt92+Rucjm9Meob98jH0TjmDk0XPGAnADe
rvaazTozOQkxfZc3pjuekJMxt46l3uAzcgrC2ZsrM5XD5FTwHJuS5/Mj5DTU
LbJOWo1WcjqSRpSBp002cgYEZ1nBhkYH+Th+VV5otl2bIGeixtjb5w5NkrMQ
4rnizw9OkbOhYA9d8Te4yDnA7rv1Gv4bMh/rqq2sV5wZsgBKaaegmj1HzoWI
k1wyuv8tWYhEQcRw2+F3ZBHiL64mGBI85DwwtbVGrvA9OR/ym2Zr/ikvuQD7
eIXVY7oP5EK4l7cGa80fyUXwtOpyf3p9ZOCYcxzNkf5t6wG+piWtXRygXozQ
xJHZr1fnqRdjYGdLhn12gXoJenyql5aoJeol0PYrd5iaPlEXg5+ldZWPB6mL
odAoOtWsZeoSTL/Is6tsZL0EpwcM6G39TF2KlUeuuAD3C3Up2LzuhQIvmSFD
xZ6qOxbDCnUZjsbJ/EzxKvVSLL/+YRb/IetLoZvndKgda9TLoDCxU4TdIepl
WEvvjvWKwtTLcaktcuvA77DzL3qR9k0=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.007278860738857313}, {2., -0.02161821639440622}, {
           3., -0.042806252119145974`}, {4., -0.07063750751100084}, {
           5., -0.10491268597995737`}, {6., -0.1454384698337025}, {
           7., -0.19202734091069262`}, {8., -0.24449740659423033`}, {
           9., -0.30267223104611923`}, {10., -0.3663806715033088}, {
           11., -0.4354567194856399}, {12., -0.5097393467673584}, {
           13., -0.5890723559694827}, {14., -0.6733042356344006}, {
           15., -0.7622880196482282}, {16., -0.8558811508804983}, {
           17., -0.9539453489146577}, {17.44974747653333, -1.}}]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[{{1., -0.0582308859108585}, {2., -0.17294573115524975`}, {
           3., -0.3424500169531678}, {4., -0.5651000600880067}, {
           5., -0.839301487839659}, {
           5.495667501276136, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.7000000000000002`\\\", \
TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.7000000000000002`], Editable -> False],
          TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyW1I0wEQx/E/gppiLTcjs0ybztqM1ZxPS7f9dHNz4myMoRltmbpJxZzO
0ilUkwxcppQiZL4omFkmgVHDSptiImgLI/ChqBCRSiLSIjN7U7E7OI7PffeU
2vTmAIZhkv7t/+ufFXmRqe3c59QFLz3AjWuX74hYJ29Cw/Gqt+OzwSN+b8WY
jAnN7+eQIzDmeqBoS40mR6Ly1cW+AXk8eRcMBaFu8bCAHIst7PfJgkARmQuN
xXFtKTyFHI9037uYzEYJOQExuu9NGToZeR+sHSxWgDeLLMB8Y3nfR6eSvB9W
letntU1NFqLAOOsxNOeRD2L6at6QZkpLFoE/k+ALvaEjJ4GduChQlOrJYmgH
RZ0SqYGcjD5PZJRJUEhOQVg3O4rHP0JOxRBnmRcsOUpOw9Kj5g/O4mPkdOie
+WbYl01kCZal0Y9jzSXkQ6jvfF02deUEOQP5PcVq31ApORO/9Dc3vq6WkaVY
PDw+sS40k2UIDN/dNWi3kOX43dO9tjZcQQYmDC3fmjaf9NsJ/BB6OaLyU9Sz
0HovqMI3epp6Ftp7WYX8OCv1bPBjXP07WyqpZ6Mo6O4lx7qNugILJX94LZ4q
6gqErD7RW6qrqStxx3g+7ekBO3Ul3C+YNzUrZCYHdb2jL50Pa6jnYG/Ybcm0
4wx1FTqmvZNanKWugpiVOPAlpJa6GoGWbbeuz5Cdamw8n59Uuuuo56I2QDa3
YHdQz8UF3dwno7KeugbcrrrW+9sbRv4CAzHkXA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXlIEwAUx/GxWklK7Q/NaIlthcTS1abOpZv+Nuc2WSBWGERZlKZSGlEo
5cFoqOQxqBGGs2bSQDCZiU0GjWnL5ZHQnGazmm6mzTCRJLqIDnwPHo/P+3LP
XjpSyGQwGKJ/+/+uz2qGnJ0ald6V46QHcmyRne36InIYpI5c2VN1BZkNjey5
XJOsJ0ei7gxnRVXfRN6BRntDrchtJO9CDVtSOsppJe/Gg3lzSri5ncxD0LhN
fM34kLwXpeaY/qRQJzkO0o7J2BOt3eR9+J78hGk4+pjMx3jcRXmA1UeOh3vr
cPZU0EYWIOa40c5bspMPosSzyGiKdpCF4C+faiwTD5BFYPvnWr6uDZITwWzu
TRt1uchJKOZWLZy2DJGTcWF/eZrg7guyGKp7rF89phFyCjp1ub4i6xhZgsDq
SMHriXHyIZQbXq4NMl+RU/HDUmmp3uMhp+FKQ3d1oXaCLMWmFud5xXUvWYYN
Ns4Xv3WSnA7zyXrt5uUpcgY4f7zxNwXTZGCUveJJrHizbh0wY1d/nh7yUZfD
cKOtTb3zLXU5ujTh+XlX31FXoCykZ/m876krINxe12uRzFLPhKkqej47d456
Js7dGVl2hAWoK1FeJJwxPSPrlPC7P3E9NUHqWbjFWxnWyuapZ2E2QZv/8zeZ
oUJ/3sZvYwMfqKvgi9jC76ldoK5Gx8KxiJbDi9TVKLDGJFyO+khdgxKD6PaB
ObJOg/vK4j7XoxD1bDSPxVXFVi45/wIbgf2d
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.007731668959994721}, {2., -0.02296305681118432}, {
           3., -0.04546917198683295}, {4., -0.07503177266720684}, {
           5., -0.11143916428716424`}, {6., -0.15448600311851765`}, {
           7., -0.20397310574492516`}, {8., -0.25970726425253515`}, {
           9., -0.32150106696491154`}, {10., -0.3891727245559114}, {
           11., -0.46254590137917595`}, {12., -0.5414495518577374}, {
           13., -0.6257177617819366}, {14., -0.7151895943684046}, {
           15., -0.8097089409372732}, {16., -0.9091243760690705}, {
           16.87242295490577, -1.}}]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.061853351679957765`}, {
           2., -0.18370445448947456`}, {3., -0.3637533758946636}, {
           4., -0.6002541813376547}, {5., -0.891513314297314}, {
           5.315025123353742, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.8`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.8], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyW1IEwAQxvHpNKYOKtkiwXSLijVtrKWzlm6Pc5smOduamZm2Lc2Xqcuc
yxRljN6YROksP0iFQVAaKBH1oWyQQUYlGEXOaM0MQx1MBmEqZcXu4Dh+9+eb
rfrKSAaDIfm3/294FhWXjnSsRAinn9MDbKZ5JaF9mcwCO1/LFWXGeMLeAKPS
tSh+zyFzsNr/SesKJJE3g8e5adJYt5MT8VD3ZJlVkErmYUqawT4aJSFvhZnv
ePe6QErehp4lqeL2moy8Axttj4tK40AWoFo2mMYcU5KFKDyUH699pCanouR4
FHd8PI8sgpsTVcbbdJAshs81MxS4XEjejclamzvUrSNL8NLwOfit+TB5D1Tr
hooH6orIaUiyfrUM24vJ6Yge6T5hcpeQpbDwYz/uelFKzoA8veepK7KcvBfB
RmXvr51G8j5UO68Lg8dMZBkCTF//nNtM3g+voLdh4MNJciZ4135P/UysJGch
wulf7ao7RZYjLsF/RzNaRVbAG8/VfeHVkIGELclC/oXasB3Aq84bP3xBC/Vs
CNp9b78b66lnY+6ioS9ysoG6EjFX60fPC09TV6KVUc6dXSAzctC3ZlWsH26k
noOUsQez8/Yz1FUo8yUbKtBEXQVRy4K1im2jrkbFsPOZf4rsUGPJyNKPDDZT
16Cmc8I732GnrsGfrFhXseEs9VyEAm38UEoL9VyMyW0z96PPUc9Dk/6Nu2Ga
7MjDvSusJrGnlfoBTLDuyvy32jx/AXeQ59E=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXtIkwEUhvFpGpIQJsIG6XRm5izWWppp6l53c3bDMm0OZqKM/McWYiRY
ODInJCjZklDUmQUhNJfhCj5w1Gxa3kKTDLXS2dSlUkrI1FqF58Dh8DsPr0B3
XuvLYrFE//b/3Z4f4or81hV/e6aNHtiwVuYdnCsiB+Bc6TDrzaMychBG/ebf
SbNvk0MgNP4J8opqyRw80WYxHStGcije+k/bk9qbyBGo/768mfKgjRyJxojO
4PW+x+Qo9D1lKts0HeRodKmLCgU5neQY7ErQ8bIudpFjcaV+KiVE1E0+hMMS
A34lviQLwNkab2wqZshCNMf37nsx0EM+ghyL16nnvyKL4BAmt4T72MlHEbZk
yuUu9ZLjcEukylhYdJDjcf90NnvZ008+hra5wNemvQPkBPxmBOXlZ4fIx1Hl
KK723B0hJ0Ll01A3tPqenISxkeCYkqhR8gk4m706s2aMnIyelkm2suUDOQVr
qZ66na5xcipKJnZvdsV9JIuhNQp4nDsTZOByQWShr+vTtvXATT++WaycpJ6G
eMWeq62WKeppYGosNavcz9QlyN18dibw3hfqElwbnLbkGb5Sl6Lp0ppzRT5D
XYrrjEzLC5ilLkNU+IGNmUGyXgb12qkdYUYndTnEJnaZTTNHXQ6zIHTWyv9G
XQHeQ6vq5zpZr4CBNXxD0++ino58/+el7sZ56uk4WRW+UK1boK5ERe2Frf2K
RepKZKpzMru5buoZaIiVe6I9bttfzEP/jg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.008184477181132131}, {2., -0.02430789722796243}, {
           3., -0.04813209185451995}, {4., -0.07942603782341287}, {
           5., -0.11796564259437115`}, {6., -0.1635335364033328}, {
           7., -0.21591887057915773`}, {8., -0.27491712191084006`}, {
           9., -0.340329902883704}, {10., -0.4119647776085142}, {
           11., -0.4896350832727122}, {12., -0.5731597569481164}, {
           13., -0.6623631675943906}, {14., -0.7570749531024087}, {
           15., -0.8571298622263184}, {16., -0.9623676012576429}, {
           16.34129025583645, -1.}}]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.06547581744905705}, {2., -0.19446317782369943`}, {
           3., -0.3850567348361596}, {4., -0.635408302587303}, {
           5., -0.9437251407549692}, {
           5.154370913764845, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"1.9000000000000001`\\\", \
TraditionalForm]\\)\"", 
          StringForm["Density = ``", 1.9000000000000001`], Editable -> False],
          TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyXlI0wEYxvEfS8KCNjEN0xIVEdFlU2c2s/m4uc1atSmzhsMknR2aztS8
5oU4TApLSjTKrSb5hyuicnbIMhuWFEEMSyidtMw56BCCINnswPeFl5fP+40s
0uWWsBiGSfq3/+/aLGdYD1XUhW13PaUHfrkSraGLK2R/3OBzlX03N46vOQB/
JEEzwb+DyUEInVvlinMiyCFwHBndOmuMIW8DJ0+rdM7tIEdgSNPz2bAumRyF
htnODXe7UsnR+BHVc5TVkk6OQeCzn0v930GORdEnab6fQ0yOw2Q4T291S8lc
iKta+XEJ+8kJmHmd6Pd18CCZh1qR0PFyUElOhIF5nv/hfC45CTUt0yPtXSpy
MgR53NCw64fJfFyKHbKx7GpyClacgbcGfPnkXQjZGd+hkheQU9FrNfVfsRSS
dyPFYLS72cfIAiy+2DRgUxaR01BQ5Zn3v1ZM3oOSO9O9575pyenIfqMZ88mO
k/cifMTLix8+QRaCE2m+/W7zKXIGHrV1W+wdpWSg9Mt9rc1btuY24OpSxdgF
fTn1TEwoRpN8jI56JkwPDiyXSyupi9DcveWennOGughTPrf74kcyI4bKuKC+
PFxFXQy5ydSoa6qmnoWAwolKdk4N9Sw8jH6/XhN7lroEiidZFrBqqUswaS0r
tTjJjBRC2YKn01ZHXYqp055iu7Geugzz1S6zvL2Bugy9jzk+9slG6tnQmdVK
r0JPPRtvXwlWWWlN1Pehtd7hDoxpHv8Lm2LxOA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwtyQlIEwAUxvEZgc6Fac0aY5ZnedQstaZT27dDp1g2awtKMFAUkcKRU6PD
Fh00KOeQDNKCZcx0LYxCM4yJSerwapZLUnOmluXKC0YHUeF78Hj83j8ot/hQ
/hoGgxHzb//f1VkQjT0z2k80Z1npgfrWJXaLrIjshbyojK5+jzNkXxzrYypF
pVfIbIx0O2NbJ/RkDl768RaDN9eQefD9dZFrjrxDDoR2ObFDbbhHDkamJfO7
5reJHIqA9qMKn2EzeRsMzIrDHrpmcji48RHgZD8hR2Ldn/1CeU4LeQdulsoE
/oY2Mh/rjZxz7KV28i7M9ilCFkUd5N3QaoxJ1bxOcgzOXrp1P92nixwLQYa+
/BT7FTkOt6VxFjW/h7wHL07GLZuzbeS9+Bm1QVdV20cWQOFmBehdA+R4bBzw
UlU+GCInIEFzPGp06jVZCPOPxqaCsGFyIhSPs3LdxW/ISSgxuXsOdL4lJ2Oy
e2Qnn+cg74NUWdOUc/4dWYRHETr/hplRMrD26ZGVIeX7VWuBwIPexQ22Mepi
jDOvSt2pE9TF6B9QtVX2fqAuQYjngm1L4yR1Cew3Tl8rUjupS1ErGZyuFk5R
l+K60zp+2fMjdRnsIzxuuIOslcGx1TJd2DhNPQXfAsTbYytmqKfgQrQrv0Q1
Sz0Velfh803Rn6inIn7FMOjN+kxdjtAwv/HkObJWDkF2UP3d3jnqaairLCvg
PfxCPQ0stWzeVPWVejoadHll/PJ561+TmPhu
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.008637285402269539}, {2., -0.02565273764474053}, {
           3., -0.05079501172220693}, {4., -0.08382030297961887}, {
           5., -0.12449212090157799`}, {6., -0.17258106968814788`}, {
           7., -0.2278646354133902}, {8., -0.2901269795691448}, {
           9., -0.35915873880249627`}, {10., -0.43475683066111676`}, {
           11., -0.5167242651662481}, {12., -0.6048699620384952}, {
           13., -0.6990085734068443}, {14., -0.7989603118364125}, {
           15., -0.9045507835153631}, {15.859437957754668`, -1.}}]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., -0.06909828321815631}, {2., -0.20522190115792424`}, {
           3., -0.4063600937776554}, {4., -0.670562423836951}, {
           5., -0.9959369672126239}, {
           5.0105612435130595`, -1.}}]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 50.}, {-1, 1}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         InterpretationBox[
         "\"Density = \\!\\(\\*FormBox[\\\"2.`\\\", TraditionalForm]\\)\"", 
          StringForm["Density = ``", 2.], Editable -> False], 
         TraditionalForm], PlotRange -> {{0., 50.}, {-1, 1}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"0.1`", "0.5`", "1", "2"}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6998524287626157`*^9, {3.6998524756230936`*^9, 3.699852499941514*^9}, 
   3.6998525365592165`*^9, 3.699852569231128*^9, {3.699852615945698*^9, 
   3.699852757188875*^9}, {3.699852869191221*^9, 3.6998528772737093`*^9}, 
   3.6998529370160027`*^9, {3.6998530203347883`*^9, 3.6998530648809834`*^9}, {
   3.6998531012108536`*^9, 3.6998531481110816`*^9}, 3.6998538510692186`*^9, {
   3.6998538855198145`*^9, 3.699853928931923*^9}, 3.699854068860321*^9, {
   3.6998543743106585`*^9, 3.6998544246963296`*^9}, {3.6998551004477015`*^9, 
   3.6998551505575533`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"trajectory", "[", 
        RowBox[{"#", ",", "density"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"density", ",", "0", ",", 
         RowBox[{"2", "*", "fluidDensity"}]}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "1", ",", 
      RowBox[{"2", "*", "fluidDensity"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<time\>\"", ",", "\"\<density\>\"", ",", "\"\<distance\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "1", ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.699853366444603*^9, 3.6998534646900325`*^9}, {
   3.699853519274678*^9, 3.6998535782177773`*^9}, {3.699853618113221*^9, 
   3.6998536582912455`*^9}, {3.69985369645772*^9, 3.699853739370453*^9}, 
   3.699853778049788*^9}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJyMvXlczN/7/9/sg5AkCUmFUkilUnROpaRCpSilkp1SRFGWQfYk+062kH3L
nmQvS0J2iuxbMkbGNL59Xs55nlzznt/t9/6nl/v73Kar8zzP6zqPc67rmrYx
8UEj+Do6Onub6egIdOj/KhH9OWKz2dg+rTa6kf8DUx587JSt24tjhEs5fvbz
1uUGOZcI1+N4bHt8pkD3DuEGHH+0o6D/7qBHhBtx3MysS9rwJeWEt+L4yAp1
4FWbt4SbcrzXItuvz2Z9JtyM40bNbSas96wi3ILjXsIdvS+0VBDenuMbeFeU
Jd5Kwi05XuntdTaoQE14R45f6YBjP17mkfmy4fhd94omaQFCwjtzfFeoNLf4
j5hwW44P90xIPlFSj/CuHDc0y33f/pou4XYcfzo29F6zF40Jt+d4l6hnU90X
NyHcgeNJ3qLI045NCe/G8b5pqoxp3wwId+S42HJztv4ZQ8KdOP7LYMSl+iuM
CHfmuHxB1ETFFGPCu3N8W2TVorGxrQh34fjc4hFt/sSaEO7K8WkP1x/s0NOU
8B4cb7ipcb6qT1vCe3K8MCZxwO0IM8LdOP7u+6jREyabE47Y3+tbHpm7woJw
zHGzRumfJ55o95fLGDeZNrf59LL2ZLw7xwd7xJjta2RJxjPu+mNW+kN3KzLe
g+OOxfsET6d2JOMZfzz/V/iyXGsy3pPjmwS/5t37aUPGM778TbvFs3t2JuN7
cdzr+arUqfO7kPGM+0T9cLox1paM9+J4z3yc96JpVzKe8Zgd4++/zSNcx5vj
K4PbT70/zo6MZ3zxgWFG643tyfjeHNcbzVveoYhwGeP7KoZ0TZjuQMb7cPzE
nRZ7R3btRsYz/qzgawv1G8J1+nBc2njHb6vNjpyf+vtTBxd0b23TvcedPPpv
+vNQ7/Yl7de+J1zK8UvN+BLFwF+E63F8rWf03j7vhOf//tOA4++W8u6HN2xM
uBHHj4xIvCOa14zwVhwvGtnrSZNxrQg35XjIg+bypOZmhJtxvF7LyTGTR7Qn
3ILj+14a+nq3sia8PcfFma0DY1rZEm7JcZsTwy99e2JHeEeO+7aKvTSwqBvh
Nhy37Dz0e9v3zoR35nh/7zvVX+x7EG7L8ZMyUafhOYjwrhxP6j/JfN1Od8Lt
OG5ypqt40SJPwu053ntmBn/UHC/CHTje8d7l5muW9ia8G8dPGJo/nXugD+GO
HF/vfyFs+ws/wp047jM87NMws36EO3P8y4IGeqauAYR35/g3+1yfwXGBhLtw
/JHnlzdZu4IId+X4sz+PjXPfDyC8B8eT7w7+OsQ+hPCeHK+aftk1Mm0g4W4c
v7O15eoZTwcRjjjeNDbLa4FrGOGY4wssHnfz3jr4L5cx/iBT8T6tYQQZ787x
DdaZCfqyIWQ84x963xmUVx1Jxntw/HeHX8X7XKPJeMYXdpUOeVJDOOevdLBT
6b5j9wqGkvGMGyZ4j5yzKIaM78Xx1ocqdpQEDyPjGb9wa6DngbbDyXgvjvse
iD7I/0a4jPEZRQafzxaMIOO9Of69PHB54eqRZDzjz7sOK2gRN4qM783xiCEF
Vuu8RpPxjPs8+fXLyXQMGe/D8UDRrtevVYTLGM+6tb7Viidjyfg+HE93MvKx
PTuOcOqvpPh4v/HJLVu/BP5KihUvux43fqME/kqKsxxsAtZsrU8+R4/jf7wM
HjT7Rf2PAceNn6ltPANNgb+S4pJBuS2ebqZ+phXHG4cMD3j+rBPwV1KcHb7s
1VyBPfBXUjz16fx6Bxc6AX8lxV/NlkXyZ1C/0Z7j+vnf3639goG/kuKYcu/B
whLqHzpy/LKJberxt97AX0mx58SZDh07+wJ/JcUPiroKP23vC/yVFCd5uJVc
3U7f964cn6tTMPjxYvpe23F80ox7x2YvDAb+Soq7h9gYt9xI318HjmdaZp/j
XwwF/kqKlc/1d26qGQz8lRQbdbFOC/YbAvyVFK86vmXtyr1RwF9Jcbe5my++
bTQU+CspfnOl4aZzAfT9cuH4kInvX0g3DAP+SopH7L+3asFn+n714LjPzfAz
Nb1HAn8lxSbHVLbWOfR9ceN447bb9t1vSt8LxPGTsoy9F9Po+sccH/v6yPBz
qnHAX0nxunfjz6SnxgF/JcUX+ufa1ejEA38lxVuO+lfGeScAfyXF0zMMD6c2
ngD8lRRfq3n7dumTCcBfSXHw5orQFTkTgb+SYr8tW1LipyUCfyXFelEXEhoF
TgL+SopPWJSKwy0nA38lxf1P99qL+UnAX9Wu5+Pjxu59ngT8lRS79a54P/9c
MvBXtfbHvh92cfMU4K+k+EXiy21+s6cCf1W7fk41rmk0OgX4KymO3xYaoOqf
CvyVFBcXdlfzXaYBfyXFM6eUvNVvPx34q0q0/9bOw1sSXbn9FuUtBq86w48J
5vwa5R3N7JobdR5OONODc3c+7ZiUnUA404O/DSqGnDw9hXCmB4MlhlYGFrMI
Z3qw/kf97NNb5xHO9KBw1KozJcXphJtxPL3R3BJh6TLCmR7saKM4b7xmFeFM
D2YOeS3tuGcd4UwP9tr1pOhSvc2EMz1Ymp37tnf4VsKZHuz9bsqvrNLthDM9
uLz9pTt3JmcTzvTg7a3bO1512kM404M+z1x1klruI5zpwdDQyMAnbQ4SzvRg
VWf+t5q2hwlnevBW+zt/Jlw8QjjTg3brtm2/m3iMcKYHDRJzHQ/Z5RLO9ODU
3MI5a/+cIJzpwbN+h/eaPj5FONODow4dalB24QzhTA9uidtjMSH3HOFMD94e
r5w94cR5wpkeHIKW3sUv8wnvyfEpB2Ykb/tygXCmB7uk/Th/SOci4UwPLuHv
NsJGlwhnuq/wstK1fbfLf3kdPWgXXm3pMugKGc903zX5ihbBM66S8Ywnv3ec
2jfnGhnvwfGAi6uf6Dy5TsYznn3gzvc+ekVkPNN9szvdXizyvUHGM95O8Cq1
yYKbZDzTffXCD23zL7xFxtfhW3aO95MWk/FM9510LZo5ej/hdfRgmu74keOD
75DxdfTg+P5T+tUQXkcPxofeSVXuKiHjme7bELVqx/Dgu2Q8436Hu2XO5N8j
45nuu+bY3NPtCOF19GBvi+B2K4fdJ+OZHtzjmPdnkmEp56f+/tTBIxcZ3L99
j8YLpgd5Md3fr1IvIJzpQVzvocenvLVgf6WD+fyIbw/G7gD7Kx08f57gQIMB
B8D+Sgf3O7zoQLnwONhf6eDoG6YJS/PPgP1V7T7TJ6rjh5wLYH9Va39E+20G
Ly6D/ZUODg8bvGPj1EKwv6rdJ5+LEyck3wb7Kx1cNriwReHYErC/0sFbVtw5
s9znPthf6eAmb/d12DvgIdhf6eBdkarIE4uegP2VDj4c9fPuiE/Pwf5KB69Z
tSX9hGs52F/p4FOZuoW+zV6B/ZUO7mM5c20Q/zXYX+ngzl2dlnTnvwX7q1qd
20t5crzBe7C/qtXdl7LnjnD+CPZXOvij3+2Vq+I+g/2VDh4/f+CWlKNfwf6q
Vud+4VkXCr+B/ZUOdj+Q1vaoUxXYX9XqwWfdS10nfgf7Kx0860jeGatjcrC/
0sGqp5HiXjU/wP5KBwtUqzcP6PsT7K9qdd8edVPzHdVgf6WDcyRrMmfwlGB/
pYPjr6fcsB/xG+yvdPDywk88/dsqsL+q1XHRBeXv3dRgf6WD9be1X7Dk2B+w
v9LBkTqPnd+t0cn/+0+m+2yvJ5z0DOX95XX04KTrZYG9WvLJeKb7fg+QHL9f
RngdPfj2ckGnit0CMp7pPvuxvbZEJArJeMZP9Js30waLyHim+7IVr0rcG4vJ
eMYPP7/XYXEZ4XX0YMfbV5f/PCoh4xk30zHJSVooJeOZ7uvS0mt2dXQ9Mp7x
K52+7olzqU/GMz3YI3tU+6vNGhDO9ODTk1tLYg/NAv5KirefqDLI7bUe+Csp
Hmbtd+kmLwf4KykefKNeMJpM/Q/Tg6VXy+1PPD8P/JUUX2zS6ptZ8yvAX9Xu
e3/PMt7b8SbwV1Is++6an7CM+hMzjvfb3+/rJFUp8FdS3PpsWECju9RvMD24
rN6MAbyFZcBf1epWZytsFE79A9ODump/l96Rb4C/qt33Tu7l1GwZ9QNMDzbe
ajTNoOoT8Fe1uulGgPk3VAn8Ve3fNWlrjxWt6HvN9GDqnDU7+jSi7y/Tg05+
S5MnGiiAv5Li9Z4O+xM60/eU6cFzcQ7f94Yrgb+q1YnW+gszN6iAv5LigJ8N
Wi/9TN9Hpgeb3pKGZOym7x3Tg90nRVk/ekneuzp6cO+vPTkj29H3iOnBgMOB
MT/jyXtURw8mZv+81reAvkc9OV52tbRT51bkvaijBz2DV+dETqfvBdODB6wW
Ntv1mrwXdfSg8NhAeXEwWf919KBp//rxuwp1yXim+57Vm+f507sRGc/4zVsh
pzKuNybjPThuLqksNNmjR8YzXrJkyoKxCU3IeKb7Nnjcrljhok/GM55efv5Z
mqQpGc90X0lpK2PLB4TX0YMP2uyvGL3HgIxnuu9La/cO9jOakfGMz+zyeURi
iCEZz3Tf0s+jTxt2aU7GM+4sX3a7fgMjMp7pPot2TZ71fE94HT3oFN52++br
Lch4pvs2ZiSNbLXPmIxnvEFCr0/ZmS3JeKYHdy0cltQ5uRXhUA+O06IH07To
wZVa9GCWFj24W4sepLoG6kGqU6AePKtFD1K9APXgZS168LoWPXhLix6k+2eo
B+9q0YN0Hwv14CMtevCpFj34QoseLNeiB19q0YMVWvTgGy168K0WPfheix78
qEUPftaiB79q0YN0XUI9+E2LHvyuRQ/KtejBH1r0oEKLHvypRQ9Wa9GDv7To
wd9a9KBKix6s0aIH1Vr0IH1voR4kXEMP8si/oR4kXEMP8sm/oR4UkPFQDwrJ
v6EeJFxDD4rIv6EeFHP//vuT6sEsLXrwpBY9eE2LHrynRQ9SHQT1INU1UA9S
nQL1INUdZhz/qwepXoB6kO4roB78o0UP0n041IM07kM9SOM71IN0Hwv1IInX
GnqQxl+oB2mchXqQxE0NPUjio4YepPEO6kEa16AebE041INtCId6sC3hUA+a
EQ71oDnhUA9aEA71YDvCoR7sQDjUg5aEQz3Y8S/X0IPWZDzUgzZkPOP7z9+Q
VJQQXkcP/sNlWngdPfjveC28jh78d7wWXkcP/jteC6+jB/8dr4XX0YP/jtfC
6+jBf8dr4XX04L8c6sHDWvRgIfBXVA8+1qIHXwN/RfXgV+CvqB5UAH9F9WCN
Fj1I/YkZx//qQTHhUA9SvwH1INm3a+hB6h+gHqT7Z6gHqR+AepDuY6EeNCUc
6kH6XkM9SN9fqAfbEw71IH1PoR4k76mGHqTrgenBf9eJsxbeXQt30cJdtfAe
WnhPLdxNC0daOP7fXKaF19GD/47Xwuvowf/tr+B4Ty3jtfA6evB/+ys43kvL
eC28jh783/4Kju+tZbwWXkcP/m9/Bcf30TLeHV9u/fGrW+AfRPno4fsGBPO0
xxGvsNzgTgfUCD6X03lD84OaA177XJ72UX5OWlyD4HNZmKFUz68HeO1zQcvm
fVqZqULwuTifff3qWhvAa59L946nY0bl/kbwuRRf7F95bQDgtc+lTMczNPSn
EsHnMr5z+4DMLMBrn8uhRo2SfvWD43vjhin91lny4XgfvOVjlPu5U7+QxnMx
ajQmejLgtc/lgXfRiIsOkDvhRV6PHZwVYm7+X/IX2z5szvwM9CczWsbNs/4m
0vAnTzt2zulSD3IXvKbXmWb1XYQa/iQsQxyPZAINf3Ks5JnPp4d8DX/Sxspf
le0OuRu+VN+l9+iTPA1/Ujr0hs5UV8gx/q7Xf8+w6zD+YhxeNPjLu2i4Dt2x
OMg6WVFnffrnHy6ak+KOp9dzTpoawNZz5PuLT0b8cMenrKdPObOPrc+z8s9R
OQkeeNaavBq/Zow75zac1vuTBxZdzZ31dQFbnxZj7Bc7jPbEKRZxI5eJGS98
nlo1psIT+zxK7e+2hK3P9aoRv8uie+H+K87HtmnF+M6V+NiKZ73w7pX6C5KO
sPV5SXf1/WmDvfDUtReOrO/P+JBtR/eueeCFD/hNSvpRxdbbFOfVgrJgbyxt
fHWizkbGW0XtMQ4q8cYLX1mHePoy/qGwLPND/97Ye0iLVkE1bL3tiS6MyL7Z
G7dr5r+u6FgdPtfnwmw/H9zkuJ5VaALjTmlHek2/7oM/zgtYvbsL4/1/bOvw
uswRT8pp3tNKIuGey6wDLYZbFzhh0aSbpuFN2Hr2T99783i2M46IiYg70I2t
T1Gpc4/GGd2xzaEr5VMT2Pq8PeH8ktJkF5yc8TvuWB5bn55nPXefHuaKjV+2
9rjfmvHPm9bFJAf2wMO/3jA4s5itT//xXYzv4p44amLqnbVixgcNvl+0satb
7TrPiXyTztZn84U7M3PMET7jYzM3uDXjJ3s0dYhtgPHsInv3i7lsHX7SRVvm
zMW44Fbl9+6hjPcb9EyvUe26fT7pfsPy/7GfhH5A2zxr8yfanpc2v6TtuWvz
b9rWjzY/qW0davO32tazNr+t7b34+/ma/l/b+/X38zXjiLb39O/na8Yjbe/7
38/XjGva/Mbfz9eMj9r8z9/P14yz2vzY38/XjNfa/OHfz9eM+9r86t/P19xX
aPPP2vYb/9/vi6b/1/beaYsj2t5fbfFImx/QFte0+RNt8VGbX/o7XjPOavNv
f8drxmttfvLveM24r83f/h2vuX/Q5rf/jtfch2jz/3/Ha+5ntMWRv+P//++X
tMWpv4+d3WsM6LfAoO0yUveE2fnhkFDlzfWLROQ+nd1fmLXY2W7sT1LfJGPn
hFdvl0csGdb67/hodk9xeZjLunuvSB1TNDsP7Hxgk3JTExvy+ew+ok/nPauW
jeajf7kOLoi2yry+3PHv+AB276Ayau839nx99C/XwQY9M3yDRpI83mh2v/Ah
JPZ2hrU++pfr4FZoTv1fvUkebwK7RzjUZaf90oXN0b9cBytKX6178NSf2M/u
C1Y2t7l/LLY1+pfr4NeuJWum1yd5vJnsXqD32Z92KypI3VAmO3+LuDvQ+Esl
yc/PYuf/R4S6zrq+pA4oi52zRcy89NukJcnjDWXn+SENQ/c+Lid1QKHM/zT5
mr5FOofk1Zd5cOP3WXQ/O2cXqevhuA7W3X8xcvUykt87mp3Pu49tGDjVj9Tv
jGbnYPwxW5t5/Sb5vZXsfD4j8uAlp4GkTqeSnYNZoJxnPtNIfu8Udt7+stXo
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
tfbGV1PAlWjHzpzgkrbtAVehRe+O6T0cAO1Ro5Orot588aD94uj+tgrJX982
3F79Lu9fXrs+jXf/7OHRCIxXIB2TWystzVsCXo0Cm1cMXLfcHHAl2tZm6LDN
K6wAV6GqDs/jt6/sArgama3t5HavkPavo3ndVahHyeuMU4s+5f3L5WjKqr2x
lb5NwHgF2pOQsmuhsA3g1ejLTosJTaLaA65E85qmN3ru2glwFVqa/yskRBfa
o0YRyft3nEmh/fRonnkVSvnW9KitZWXev7x2v9Qu45jOyqZgvAKVZ1tvVma0
BbxWT7nqvZQPsAJciQpHKZcnp9sCrkKKw5+Oycc7AF47n6rnpRMCaX8/qvuq
kGyxuI/EgsZlymvfo1Gu0VG/m4HxCsRfbZz8PNcc8GrkP6W5W8MEG8CVyLfT
Iv7mlXaAq9D4zdKR3b45Aq5GKxrPv36jryvhNA+/CtnOLplk6izP+5fLkXlQ
r4PmXFygXIGe8XKy2vxqB3g12vP48JhOR7oArkSnH0Ws23TcAXAVMr1SNt1i
eXfA1WjekeExe8e7EU7rAqrQlK42ry8MU+T9y+XIql/B03FtW4LxCqS82irr
e7Al4NUoweHT7rXpXQFXolfCwlknvjgCrkID7+8aXBrQA3A1qigpWJfyiPZb
o/q0ClV3OfrCMZvuuyiXo44/c99HPG8Nxtful5blN1x9vSPg1Wjo3aC76kB7
wJXIJvLyFjvUHXAV+vnOKXakDQJcjcq7h7S6me5BOK2bqEK6j4WGxWq6/6G8
1n8+muPQJNwUjFcgF6PeI30GdgK8GkVYi26ct+wGuBKtL3wzPDzbFXAV+uRQ
MeN3E3fAa/efwhC/6wG9CKd1HFWoeLHRtFexNXn/cjkyHpHW/ufdtmC8Ap0+
OfdZoLIL4NWo0zxP34F6ToArUU2XSzvnmLsBrkJvY7fJQjd4AK5Gty/EdP5q
Qfvm0XObKhSc/aTNja90v0G5HK2t8QqfFmYOxiuQnafPupmDuwJejdbN/yx0
l3YHXIl0RvZx5oVjwFXIXtrqS3nXXoCr0cicL9sLpD6E0zqXKvT8FY832ZMH
uByNnXb0JfpoAbgCfUUrPO4U2AFejXZfuLGCr+cKuBIdbjunat0Bd8Br90sv
22ywu+8FuBqN237Ws+g37TtK625q16dcXF28lg+4HMnc7I+/WtAecAVSR9mt
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
zqAlZB4w5UoU0PLpgLMbqT2Uq5CJfsvlegNJXkc+5Wq00tBHWTCE5IdgM87O
LxtN+7l5EL8ko1yO+IOzoz55CMnnUK5AI7xfrtqRQvNwzDk7r0d9+11ylzwX
TLkSre6hc1hmSOyRUa5CPtclFc0vEnvyKVcjZUjj5gfjSV6HjPVbmLh5SIeI
L+Q55rN+C5EnUrx75tJ8oXacPWlbvKf6TyZ5jJhyJbrnWa+0kzH5vTLKVeiN
U3z88ank9+ZTrka/rO9Lez4ieSmY9Vt4GXby8f1Eki8nY/0W8jqdHxv8jNRD
5bN+C7PNRh981Jmu2w6cnfqDTq5McyL1sJhyJarYeDZw4yCSVyOjXIWOv8xv
dCyZ2JNPee06XPny9Ws/kq+CWb+F2etbWuzcR/0J67dQY9LG/a2YrP981m9h
8CCn7jtf0jwlK87OJ1d3re36gq4fypWoXsXRlXo3Sd6LjHIVctLJz/x6muS3
5FOuRvaNRnqPukfyOvJZ/4RbJ3uGP7pN8yStud/bxerR3OGHyDxgypXo5+Sm
kU+nkHo9GeUqFF3evmWOKf18ytXokqSX5E0aydPArH9CbIsBJYrHxP/LWP+E
rP0tJ55bRdZVPuufMNH3zppIJa1f7sTZaZC3Mun5HjIPmHIlemK0r+PBfeS5
yChXoX0lDY3j00geSz7lajQjPb5elwiSp4FZ/wTfkdNatmxG8iRlrH/ClKiC
d5Prk/z8fNY/4WBJ0NySDjRvqgtn57bJvQzHFpJ8JEy5EvnpbrgryyXzJqNc
hS49a7rxhoTUy+RTrkZuB9OHG4WRvJFo1g9hz6e0+lPj6bpl/RCwX83eOCmZ
hyzWD8Ha9GSJySM6D6wfguGPib9u7yF1JWWsHwKvsJPprBSSl2LK+iEU2177
86qI+H/M+iFMsjo/SeRL8veiWT+EweZX5AuKSZ2vjPVDqAldvUaSR/Kgslg/
hL5Z148VNqXzwPohbHyrurNkDMlXKWP9EJKar03e/YLkh5iyfgitPLaUdutN
9jOY9UNILU29364pWf/RrB+C85ddxsiXvO8y1g9hXbXPzslzSV5WFuuHYKjs
ea5oBJm3fNYPYcVvu/ttvUn+TBnrh7BAvULhuoLmS7M+Br0sF73rHEnelyzW
x8Bnge/p8bfIc89nfQzaTxJ5D2pD8l7KWB8Dyx2vOycPInkdpqyPgWnV2RVe
50i+K2Z9DHxblVf/mUryD6NZHwPxjDHeg2ifFhnrY/AuLibzQG/yXLJYH4PC
IeGPRX3JOslnfQxK23dc3nkP+XvLWB+DK5vbOz22JnkdpqyPwYHDPqf2GZH9
FWZ9DGrWm+0wEJH3K5r1MbiW9kv3z1baD5/1MWhytvxqojt5Llmsj8H+X8Pd
JyWQdZLP+hgENnu0uTMm81bG+hgobPuq3jUmeR0y1n+g95a5a3h+5Llksf4D
Nya9W3HqEnku+az/wI8WjSKqXpG8ozLWf8DkvL2FtYDkY5iy/gNiNH10p48k
3xiz/gNqqwmGrRCJm9Gs/4DJ7KFjcmeR91rG+g/0jF909fkwkueWxfoPdD7w
aLnAnORH5bP+A+csvlxovpLkQZWx/gP+G/jfrEUkv8iU9R8wyjr8+NRQsk/A
rP/AvJUL2od+Ju97NOs/MCfa7qMpj+QNylj/gYtJphdXLSbvSxbrPzDbe35f
0WLyXPJZ/4FtgTNOoQCSl1XG+g8URExul9KM5LFksf4A0VPam01SkfnPZ/0B
iksaihvRuqQy1h8ga7VSfrcFyTMxZf0BFpVMlbcYTfbVmPUHWHDn68L0scTP
R7P+AI5rov0Wtqb1eqw/wL1tFZZv+OS9yGL9ARopjfZJksn857P+AL0D+3ax
+kjmv4z1B8D3cNjOLiSvw5T1B7AMvVka+5PsizDrD5CZxmv53Jl+TwrrD7D4
UQdZ5SmSJylj/QFGTRn166Q1WSdZrD9APeGZI1OV5L3IZ/0BcpY2inW5Tua/
jPUHyG54eHmNH8nryGL1+8dHHjeaN4+s/3xWv79k690rilAy/2Wsfj9/qf+s
nPEk78K0J/f3yvYPPmbRiegsTLkcXY4oLj30i/ixaMoV6PGwZs3PNaR1apRX
oynd9u+tyCTrJItyJeKful30wZjMfz7lKuRt8mvylCAy/2WUq5FudP15qWtI
voopq98P+LzIYNEYsg/ErH5/Y8LUvOlfiR+LZvX7Fe2Kf669RN4LGavfXx23
wujxDeI/s1j9vss1t+OjTpC8qXxWvx/f5MduZQCZ/zJWv38hzzfZ/QrJD8ln
dfQGy2J/DAwm81zG6uhvDd6+6paS5Gnosfr0KqnzMR1jomdNWX36ogYvi0+9
I3HTltWnx9YPPz11J/GTmNWnN23slb56IHmvA1h9+rOFzQ8+mkPWQzSrT7dN
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
Up2awX0P5zkrDi85bcMgeA4jec7C0QkPXsyB8YzhOZWVgiqU2YXjxnN+XNZi
zqjLMG7pPOfDz9mPTyRD/UJ/Xj+YXGBezb2uwEfz+kHHBiuWNOoM5/ODeJ1j
oWpHqh6Nwe89XudY8/LkOhqs8w3ndY7dOzVmPSZD/khe5zgpya7FgTuQP4bX
OW4IfNAuuySMZxLPeSZ7c5dOE6CuIZ3nfLxskF/ILTifb9nnysNGKeN8ih7A
71XkSpb09FDQIje475Z9LhXrfGpR+rdFcN8t+1xqdn3loI5DvsN9t+xz5fxe
GiGFx/njeCLXsgPN3RybJMC4Wfa5dGxFkOlUwi6ov0jnfOeyDbuKD4Y6Ass+
Vx7WxCvCvHYYjKdln0vJOoy+37S7I+S07HOpmN+FV0uLnIKcln0uNRtqZ4hL
7AM5LftcGvZfd5tim9UwbpZ9Li2TfJdVPRQPOS37XDp2bdK6h/nLQf1FEM/5
6PvBtRPawXgG85wb5rhcG+YI9zec5+yZb3pW7wfwfEbynG7rX3t1XAf3N4bn
HOW4Z9+OipAniefsEN+zUdHlMG7pPKfPpnyJa9Ig52heH+d5oFXMltNQlxHE
6/ime13YbVMcxjOY1/HVnuRlM9ANcobzOr6s6EUBFwpBzkhex5fgOOntElvI
GcPr+GrWO1D4zALImcTr+NYMft7yrQbypPOcX1Y4TSk4F+pZHHl93Jd5DtWX
2cF4evD6uE19Lp4uXAr+Xnx4fVzjGiMb7GwAzyHj9XHjtfkHrDsAOTvy+rhW
Ywfv8qsN49af18cVe37+jQfWFY7m9XEZrZzLvu0E9SyOvO7snULpuvMDPIce
vO7scYmj2yczGDcfXnc2tESV1aGtIQ/jdWfJlRd1c/4K49aR1535NUx21W+H
PP153Vl8uzrPPrSCPKN53Vn7PiuDu2dBHVAQz7nJ/95Y2yS4v8E8Z7ft9by+
+8K4hfOcth8eDMt6CTkjec6hWrvGI7bAuMXwnNdKMrfXXeE+JvGcXg0mfPFz
gDzpPOesHmG3HkRBHVAQrzubGhWT3ycG/n6Ded3Zo8cPnJwZ5AnndWejO0nu
jkUgTySvO7ON2u9tnw7jFsPrznY2LFTFJgrGLYnXndU/MaueOhjypPO6s4cV
PjVTTIK6JEdez+W3Xp9y8zbcXw9ez3XU+eDXbncgpw+v5zr1zPVb1HHIyXg9
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
SyZ69Ntw20y4WVoR66zS3MC/F56zx7CNDxuU1UB+XmeqqNSkuI0zrnfxOtOQ
Ie7lSm5LJtwghQ4d3f7SxjTCjVK36i/PhN8yEG6SEqovjdZH/STcLB102xxY
diD+vfA6089u6ZMcX0JOwbfrUbtQaZ98sI4t+HYrBKcVLVTjJeEGaV/9ba5N
uqQTbpQa7Gta+seyb4SbpPsuH3yO3cgm3CxVvdRy2wkF/r3wnNO+FQ1ZuVUL
+blvNzhxrtscG1yX477d8530zf3uvCTcIHmqE5wfPE0n3CgNeRE43+hrJNwk
7T+rMxa7+Ytws/Tt1r3jO7bj3wv37W46vXnk8V464Ny3u/9V+yPpgUsj/uRK
5jt40OQ2ySsIV7Hpmec9Ou9bSbiadTp+Y67i39WEa5j3+NiUg25rCdcyU41n
bf0erCNcx+4a3oXbLMX1WO7b7TjUzaGT93+EK1ndph6tYieOJ1zFSpX0ntP5
5kTC1Sx/doULcW5TCNcw4+Mq37qOmEa4lr06VavKowszCNexobe21QhboAfO
fbsZsSsqzC6zhXAl27mlhXORoO2Eq1i5YzOzu03bQbia5dnw5MsOn12Ea9jj
abXefXwdQriWHR2w+kmtjXsI17HFzdPuzW6H+868bjchq2pUdN29hCvZoXe2
2y/Z7SdcxeY+Thp/8nEY4WrW686ptgf2HyZcw4r0v+HUscERwrVsTmLV6a13
HyVcxz77bktpmg/3l3nd7sMrW5UV2RHClcz/ap3Ksd2OEa5ipqvxPSeNPEG4
mi29NmZe8bmnCNew4tfzHbm66QzhWnbk+r6nAUfOEa5jTW80s3GKwu9JXre7
tp+iRv7UU4Qr2dN8E87VvXeWcBXzOv+h0dDj9DpqVuOEz+ubbSMJ17AeS4eX
6R9xiXAtmzZwT4ChyhXCdSy4bvLBpSG4Psx9uxuqXGhZdnUE4TnjeTssKOno
JcJVTJ1tMlfccoVwNQv2aTVs8rxrhGtY/YHr46+NukG4liWsfdOoQI+bhOvY
uKhqh/o2wv0yXs9boreny3vXq4QrmSHwza93C68TrmJ35oSmvv0WRbiahawf
Hv9mCL2+hk09UDnydfwdwrVs34tJ8WM8YwjXsTXDHrfO6InrRZ6WnJXqn2jV
4WUU4UqWVbRpxqI3twlXsXM/YjdcTblLuJpd+uQT/OtrDOEaFtLHmLllYizh
WrbgTkSLut8fEK5jAQ0WbH40BderuW+31vQ3uyqWuEu4ki3qeLpT35cxhKvY
xJfTO3mfiCVczQaPa9Lp84I4wjWss9a208leDwnXskYb7nacUSmBcB37p/ya
js0VOC/jdb415h3uPuvtfcKV7GqFsmGtneIIV7EuscEK5/oPCVez15Ncuz4b
kkC4ho0rsWrfnpX0fbVMdd0uO/D8U8J1bNWIOb513uHvc17nu7jP5rc1s+II
V7Lq/Ucc2zX9EeEq9uLfBnpH3WPC1Wzx4Pztpgc9JVzDqvu/cE11fUG4lgXW
6PHfgftJhOvY1ZORiQMK4e8K7ts9FJxatUCtBMKV7MJB1f6VpZ8QrmLRZ91L
Ojk/J1zNPr9ya9tyVhLhGjYhYK9uoTGZcC37mV7tyo3AV4Tr2NyJkTN073C9
l9cFrxm60HHqwSeEK1nhlIHfW+teEK5i7Y6XGLPMJ5lwNVsxbtng8c9eEq5h
MdV/9OyzmL6vlhX46t++Wa23hOtYlxMPG1d6jesDvC640A/PVW+6viBcyS7f
Dnm5KCiZ8Jz/j1xrmz0mvCJczar433Y57feGcA3zP9n3nw6N6PtqWbD6S8u3
3u8J17EE33n/TrfHeSL37RYeGRTvvz6ZcCXrWr70pW2W/UdeR7zm3ZmwuMQ3
hKtZbEj7DXY/3hGuYY7/vprD3FMJ17IOJSYFTmjwkXAdW/7U3i+sL64/8zpi
taJ6wODNrwhXsjEBUS0K/nhDuIo9j+td+lKvFMLVrI2UoQw8m0q4hp3eNy/J
3e0T4VpW2tnt4q3JaYTrWCvpUbvzH/F3OK8jnvUiPbHayTeEK1nLyvHv3bun
EK5ijtPPfNcYUwlXs4TbW23TNnwiXMM65rtk/9Gdvq+WHa9+bE3/kRmE61iR
3rvd4y/gugr37eYv1PlVqXfvCFeyWFWZyt9upxKuYuszTJNuhn8iXM0OBb5L
vtM6nXANCxrSSVfrQgbhWja2z7mKwf9kEp7zd9SltK/tTlyH5PXIaX7P5i+v
lEq4koXPn6N/1eMT4Sp2OsG5gTuuHwq+3SKf3525/iiDcA2bpDpXc8zITMK1
LLHI8mNFVV8J17G6lQf4XN+A81Zej1yocOjz2ws/Eq5kitSu6nI/0whXsfHP
87hcOZ1BuJql3kjYmzE2k3AN63fkcF2PSl8J17K4TfPvtH9H8+hYy7l9+k/f
gfNB7tv1mVjzW33jZ8KV7LbzwOp2vTMIV7HsT+U/fa2XSbia+dz4sju56FfC
Nezf4LN97/wwEK5layfPLnzmCc2jY1G+rWNCzuE+Aq9rLulzvsuuC+mEK1nb
s44vpl79QnjO75Cmg4d1uZ1FuJrtvHsms2KsgXANu9sj/wxNopFwLfv+8l+b
5y9oHh0rNfLUqpNvcX2e1zVfy2+su8/mC+FK9iCxqffaWlmEq1hyyEqnWUMM
hKtZWuBz84i1RsI17GfdCik9rpoI17K82kkPmmbSPDl/7/evXvTxxPk+9+2m
LZvs8653JuFK5l0po4b6xFfCVaxPtH+9kvmMhKvZmuFJrOFgE+EaFm3Xo7nf
BTPhOb+X9t9rM8mF5tGxrSG7Qm+dxPVkXjf9el320EJncdx43fT8mZMOTa7/
jfCcebH/l6ynF78TrmbRHUfUY43MhGvYqDpvZ+26kk24ltk4+QxS7aJ5dKyX
ZqSuxmtcx+N10+Pz66p/KYH3kddN55PiVobeMRKuYnsCd6T1nfqDcDVrGDyq
nUu5bMI1bHjK1vjBwzEPr5s+pZ+rbnSZ5tExtevwau6uuJ7Dfbt3r8011FqO
48Z9u26Jras09zcRrmJDPzqO6NL4J+Fq9njm8M5V8mMeXpetX3R3dO2peQjX
Mu/VVZZLKUrCdSx6y5oDzbvC+qfg2+1yzMZprxrvI3IlC1t0tKidvZlwFdP0
7+09suAvwtXsn6JzivjnwzzINcxPm7DVdaWS8Jz5UUZFr9vONI+OHX86K3Ta
Blz/5HXZq48Mi1fMwXHjddleQ+vbHzr9k3AV67V8wY5KExXkOmrm+T69vrqA
knANS23SK+FxmIpwLTu67cp/R1rQPDo25XtFh4UvtcC5b/dy8eQJNrY4bty3
a159JfHTyF+Eq9hmdedtw4blIddRs9rS1Q5Pi6oI17CHk2vk6XBXTbiW/Xd8
z9FLeppHxxzTCg+qXs0GOK+zPvlg44/Z63DceJ11cof2x66sVZDXq9i7E/dS
mvVXEq5mn4p2Kh5VXk24hmXOiu3c+quG8Jzv+XedF0VH6AjXsex28RfbL7b9
zQXfrq36UOVaFWDcBN+u7/bRLbdOykNer2Lb6y/+vs1PRbiafUzctT+4oYZw
Dasz8YLfzpI6wrVsvvMj+xA1zaNjD46kX9j9zg7y8/rupz1b3pwwUEG4ko1q
v2nloH5KwlVM0eRjT18/NeFqtrpWQ0/WXUu4hnlXDEqt1NmGcC077fHyaNEO
NI+OtXapPtW2jT3k5zm/XEkrd7p6HsKVLKp79r8/WqkIV7FtH+y3NOynIVzN
xs0sGj9rnI5wDWtdsHz+a4tsCdcyj721W9hsz0u4jhnqttC3OZ4P8je25DyS
0nZbM1sl4UrWQz9/UtPaasJzxrNIpG+ToVrC1Sz08PeKjdfZEJ7ze75FNV2j
a3aEa9m35yOSpSx7wnVs24Q95xp6OUB+nvPGq6cPNMlKwpU5v9NejPIqryFc
xTbuf2nb6D8d4WqmXP4mpO95W8I1LGBMijRNY0+4lj3o8uHxxvb5Cdex4u7f
zj5p4wj5eb35Ef26uknnVIQrWdXa589PK6ElXMWOpSU3dJ1jQ7iaVd+ru3Ti
rR3hGna8b6Umvq3zEa5lNQp1vvb5oAPhOvZkyPld12ycID/PGRrq/Ov8RjXh
SvZ0QcuwGkV0hKuY09BpPQ+tsyVczZo3D9eWcbEnXMOmlH59bPvq/IRrWXfl
Uh/7RY6E69iXjNILWkZBTsG367P9k3reFA3hSjY49UGX6s42hKvYphpnQ14d
tCNcze7pg7NWtchHuIapo+c3bZzsQLiWbV1S89akBjSPjtU+Um5sx8UFID/P
6XGiRnLJvlrClaxnSOiafgVtCVexVauLttwalZdwNbs9e/mPx9PzE65hyjP6
7ks3OhKuZdt86lapkOVEeM48LjTT7lb7gpCf1+n7l6oYP72pjnAl2/q8YN7t
LnaEq1jshh8s8q094Wqm6/xqQvIpB8I1bNv8wd1mNXUiXMvODOyZ4XSwAOE6
FsfaLd3p4gz5ec7IGMebcyrZEK5kN303F3jilpfwnJxxpXtXtclPuJqNrJAQ
e3WKI+EaNnbE1omjM5wI17IJB/91d/cvSHjO75DPZS7deA45Bd9ujWMlW5Rw
tSVcya4G9jtn9rQnXMU6V9z6z+OKDoSr2Zhxn+77FXUiXMNO+9ovbR1cgHAt
U1Sp0LxOaZonZ17s0FpRdr8L5Oc530dcnFBfZ0e4kpXcEXrtU6V8hKtYxUat
Fnco70i4mkVVuVgl9IIT4Ro2yLNaoqJTQcJzchYM1fd87Uz4//sgFSt7dGIh
yM/7CSwvfqxw1Dc7wpXsy8htWzbUy0+4ih14fjXoeIQj4WrWZ37dB1sGFCBc
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
3UFhs+xfJcL3pODbXVJ017nauyGn4Nt93V+TMbMPnlvgvt0PXT68DnqK/cm5
b/e0wwBT2bFzIjDf739VzDSu7WxbA/Y15b7d+o9r2aVOXh6B+X7/q2ER251a
vcnGOl/u2+3vq1sWH4n7Jty3q9T8jLk2G/tXc9/umTdFdfGBeB0lw3/Hum12
7dcf63+5b7d8B7eK7zvifgf37X651Hb7GQ/sg8d9u+17Lw3N3oD7Dty3u99w
+0gTJ+x/y3272pV5zy1chHWv3Lfr+Y1VfeSD1+e+3ZD3Lk1qK7Helvt2yzxN
7bzxAV6H+3b3340YZArBfsXct1vx0prxfhOwTpb7dh8lVm/yfBeuq3PfbpHO
228vX4p9bHjd7unMspHl43F/h/t2R775uny6hH2ZuG935fDkyildsN6W+3ZH
vG6xzskOfv8Ivt3mfQ79rBuB69Xct1vyofPgQeOwLwT37ZrbT41eVg6+JwXf
btsV/gnFbuH7ct9uF797iScCsP8J9+32LlPzSbu8WCfLfbuDMrc8fXMAr899
uydf5ElruAfrZLlv92yzE2mLsV+x4Nu9eMA//WFzqCcVfLspiT2l9ENY/8t9
u7OV5WKycV1O8O0ud5kWPn8WrgNz3+6Tfa+Myx7CupDg2y3bsE2jtRWwXpX7
dsfHHl20RY/rkNy3e3mIW+yueOybV8ySZ1Dz8uU/h+P1kavYjJq1BjbaiNfn
vt0N3k23rJmF6/Pct3u0UKf4d8Ow3x337UZr++av54vrbNy3+9/UE14tisF8
UPDtrrJ757G/Oq738vrcp9GjCgdchM8l+HbLrDDkK98S35f7dsd2mqFOvY/7
F9y3+9x2zs+4g7iexn27qg/XjcfHwjxO8O2WjbbLWlML1/k9LTmTfn3b8bUw
rqMiV7Jeu27ueNgR9ymQq1jArjsxT5pi/Sn37ZYZf7Jj2wHwvoJv93Xz7THn
LetI3Le7s8jCjpU2wTxC8O32Tx0ds/Uk9k3idbit3/YfWrQq7o/wOlzXK6aM
S2FYZ8p9uynb10zzL4P7Bdy3e3JaZZ3DTrw+9+3O6xm18oQ7/F4VfLtdav7r
3ns9rHcJvt1HHR8X0G3GfQFeh2t7ZbpnN6wvFny79WqUrLq7J9aZct/uyL1X
G2XVhnVjwbe73dW/U5Mi8L6Cbzfl2jyfm1NxXZT7dvPM7H569Aecp/M6XF2H
UruVJ3D8eR1u5SYzfOr9wvVwXofbtVbCuf9aYb0t9+1Oq1C1RdhqWN8QfLux
Ds2HfRmFfVq4b/eNbeah/M44b+W+XaMqOKv8GVwn5HW1dcsPv+fSAOtnuW/3
2PZ1rQ+7we8fwbdb0eXytZbYR1Tw7YYs/sRexuP6Ifftuitcz0/FeZPg2x07
9kLy2XnweQXfbmr223Zv/HCceV3t5qZp5T+Nw/pZ7tttu/ib7usynP9y3+7P
e79em/dgvy/u2z3kYnNZHYnrcty329fPcbt9Is47eF3tzi3/zg5zhzyCbzfD
tkXXn//hugevq2UTK5Rtfxvreblvd8Vrhx/bPHEcuG/3eaesO2mTYV4m+HYr
RSQEs/u4nsZ9u9MqXvhvZVlYPxR8uy0Gn5TaS7gOz+tkR7TdfiTsEVxf8O2u
rLbQK+9omL8Ivt2TbmPWDrPBdUVeJ/tZcVA1KAbXUXmd7JU5VdQPCuP48zrZ
tDFXpn7OhPEXfLtF+3fNtI3Bz8vrZFu0fxdQOgzyCL7d/+pPfskW4ryA18l2
WKupVLkqrtfxOtnBS++m1AvG9U9eJzv6/qH8F7GeWvDtehfo1LlKL8gj+nZ9
M9eHWPpH8TrZNavXPi28HfIIvt3SqZuDrvWHPIJvV2/3qeqvDFwX4nWyT8s3
jK89B/tQ8frWFx/OmKO74zowr2+9OyshZXw+mP8Kvt0Lhb/FFb8C1xF8u2EH
XS7dmATzJsG3O2lInx7PTuNzzutbL22e4zUrEJ8rXt86L6XLxAIFsZ8br28t
r0rpPegzfC7Bt3uv2NTGJ29CHsG3O652/rI2u3E9hNe3Fum8I18vPcxHBN/u
7vkl1NeKwLxV8O2uGLRz77LluM7J61ujNTXunA6CPIJv12bvjS+vVkEewbfb
tGWvIg5rIY/g2531/mODuutx3YPXt15cPHPg4I3YH4zXpT4JS0tLagrXEXy7
kyJqTrUPhOsIvl2X2Ona2ngdwbd79PXVlQOvwDqb4Ns9/7q31sUOxl/w7c72
8m3crw+u4/G61Jb/tpixLxz7FvK61Pw76p/NVEEewbcb96KKoUF3yCP4djcV
L1N14X7II/h2+/dxHxX7E+azgm+3/ell6fW6w/gLvt03FUevPBsH4y/4dqft
8K1axxf7XPG6VOdCNR6cugd1eYJvN2xx4XE120Eewbfb5Nd35xPY707w7X6q
8/mxawisqwi+3c1Vxpde2hFeL/h2C5/p12zPNHi94NsdkKiepL0P6x6Cb/fO
3JS1Z+1hnAXfbk+/tnaXk+FzCb7dN1XCZ9w8ic8PrxsdY+OcGbME1jEE3+6M
tHPVRvhAHsG3e/Xxp09pmyCP4Nu1u14i9D/smyf4di8uCb+zYBw8n4Jvd3ud
MtceTIBxFny7+ndbz5eYjH3beN3ogLXOx4dPhfUBwbe7Y8e1+CcNIY/g211l
1OeMGqzDCL7d2R3q3ynTCNaLBN/uoOzEw4M6w+sF327tjwmJez/A5xJ8u/aP
H6k+zIH1HMG3O3JdbZ/M3vC5BN/u8w4Feu08D59L8O2Gqg2XymKdqeDbHZD8
spviInwuwbfrdvHeh0cjIY/g243ddF5/uBjkEXy7iyfuc1lwRws5eV3n5yHe
6QWewfMg+HYT759oFDsC14t4Xee/23bebJmNOXldZ0LngLFlr8O4Cb7d9rZV
i9osh3EWfLtXLn6/8q4r5BF8u7XHXRpxoxjUdwi+3epPI11LroF1HsG36x6V
Vzd5HNRZCL7d6WebbzJmwvMs+HZDa/7oVAf7eQq+XSfHB90mfIT8gm93yvv9
fsfeQH7Bt/v68uz+6c8hv+Dbbbel1+BKCZBf8O2eHF81IOA+1C8Ivt3TX6K9
2izG55nnzLN8RYMjj+C+C77dPTtrv6+fived52xzKnlNlBnuu+DbTb+9mHVx
gDyCb3dNUrWPL0pCHsG3W/vr0/XDq0NdgODbHZHVoE2+MVDXIPh2tyS3Urbf
CufzBd9uct5ZmruD8bnldY573nm4lcE6X8G3O/xKZGX9F8gv+HZ9tvdvklgb
8gu+XcMURY+qMyG/4Ns91y14xJJrkF/w7eb8dJr1Oi/UXwi+3d52h5cVqQf3
3bLPpWSHr7TunroZ7rvg21VOf+tx3qz9zS37XGrWrebs1GV94DkUfLv704od
73cRxs2yz6VlP0PPTK9SAuoFBN9u2SP7d+VhUNcg+Hbbmy5/iDADF3y7I0Nj
J7mn4fctr9fbv6B6na/zIKfg2303ZN33O+6QU/DtlmpuPLPnGOQUfLsDSvea
MrM15BR8ux2UfYuFjYY8gm/3c8by6UXOQ72D4Ns1valwd/cd/L7lOfXKia11
evi7Fny72hKXr/tXhfsr+HaX1svX5NZruL+Cb7dAjx4RFdbD/RV8u23P3t96
vRTkEXy7K1p+8/s2HepEBN+ue8ZQr1aNoS5D8O3uOf54TJfVMJ6Cb3fQri8n
rk6H8RR8u16r7EzV/SGn4Nt9qfdsuNsXcgq+3ZhaxS4tLg45Bd/uP/+Ue3V5
NeQUfLvLvWtofthAPYvg240u++h1uykwnoJvd/C7YeWlWTCegm83e7c50Gch
/P0Kvt22R288DmoB91fw7W50Wjnd9jbkFHy7b0f38piNdYWCb7dqjNcV033M
yevOXmQNb+veEcZN8O0Wycy8ZgiCcRN8u50ypkr378O4Cb7da99mPe26CPII
vt2XhmauV8pBHsG3++urbTefW5BH8O26f72zamsA1NcIvt1SS4vXvdkQxk3w
7a6v499Wh997gm93XmaPwzunw7gJvt2Gt6afvlQR7qPg2zUG77yU9ARyCr7d
IxNv3Pq1GOqABN9uQPuPD4rXhbokwbd77dXEz+29YNwE367/jftVy1yAcRN8
u/Pi156beQDGTfDtdrtx+dnwSZBH8O2WPZP2q3szyCP4dr/vd/dsWgDyCL7d
W1taNfV5AXVJgm83enW+SipXGDfBt1td++HDfH8YN8G3O7txh0ZLm8K4Cb7d
+zOOrVvpAfdR8O16nCv8cZ0Zcgq+3VHfpjbakgA5Bd/u+WpJ63Ycd4Xx5Dkn
lm+96oMjfO8Jvt01q30vHM+EnIJv96OT/kjmc8gp+HabBR3cXRWfN8G3uy3/
k41jTsDzJvh2DUttlocHw7gJvt32eWvOTluC9VzYDxZ9u+BZtvLt0j606Nvd
Tjj6dvcQjr7dg4Sjb/co4ejbxToR6tvtTDj6dmkfWvTtziUcfbvLCUff7mrC
0bdL++Wibxfrp6hvdxrh6NulfWjRt3uIcPTtniQcfbsXCEff7iXC0beLfUSp
b3cB4ejbpX1o0bd7hnD07V4mHH27NwhH3+4dwtG3i/sC1Le7knD07dI+tOjb
vUw4+nZvE46+Xfq+6NuNJxx9u9hnkvp2NxCOvl3ahxZ9u7cIR99uLOHo200g
HH27zwlH3y6uM1Pf7nbC0bdL+9Cib/c+4ejbTSAcfbtJhKNv9zXh6NvFfnq8
zuu3bzeEcPTt0j606NuNJxx9uy8IR9/ua8LRt/uecPTtYv83T0vO377dfYSj
b5f2oUXf7hPC0bf7inD07b4nHH27aYSjbxf7qlHf7iHC0bdL+9CibzeJcPTt
viMcfbtphKNvN5Nw9O1iHzDq2z1KOPp24wlH3+4rwtG3+5Fw9O1+IRx9uzQP
+nax/xj17Z4gHH27iYSjb/ct4ejbTSccfbtfCUffrolw9O1ifyrq2z1NOPp2
nxGOvt1UwtG3m0k4+naNhKNvN5tw9O1iXyDq28X6OOrbTSIcfbufCUff7lfC
0bdrJhx9u9i/i/p2sU8R9e1iPR317dI+tOjbzSAcfbtGwtG3i32oqG9XRTj6
dvH8EvXt4u8B6tulfWjRt5tJOPp2fxCOvl28j9S3qyUcfbvYf4P6dvH/Herb
fUc4+na/Eo6+3WzC0beL95H6dm0IR98u9vOhvl38HUV9u7QPLfp2vxGOvl18
3qhvV0s4+nbzEo6+XeyzQX27+P8j9e3SPrTo2zURjr5dvL/Ut2tDOPp28xOO
vl3sl0J9u/j7h/p20whH366ZcPTt4v2lvt28hKNv15Fw9O1iPw3q28VzNdS3
S/vQom/3F+Ho29WS66NvNx/h6NstQDj6drG/B/XtoueX+na/EI6+XQW5Dvp2
bQhH364D4ejbLUg4+naxTwv17WI/fOrbpX1o0berJNdB364d4ejbdSIcfbsu
hKNv1xU49e3i7yLq26V9aNG3qyLXQd+uPeHo2y1AOPp2CxGOvt2iwKlvFz0F
1Lf7jXD07WrIddC3m59w9O0WJBx9u0UIR99uMeDUt4vnrKhvl/ahRd+ullwH
fbuOhKNv14Vw9O26EY6+3RLAqW8XfQfUt2siHH27NuQ66Nt1Ihx9u4UIR9+u
O+Ho2/UATn276EGgvl0z4ejbtSXXQd9uAcLRt1uEcPTtFiccfbslgTew5Pzt
28Xfw8jRt5tNOPp285LroG+3IOHo23UlHH27JQhH364ncOrbxXk99e3SPrTo
281HOPp2nQlH325RwtG360E4+nZLAae+XTxfR327tA8t+nbzE46+3UKEo2/X
nXD07ZYkHH27pYHz+rvfvl2cX/D6u9++XdqHFn27joSjb7cw4ejbLU44+nY9
CUffrvdvbuXbxbpLnvO3b5f2oUXfrhPh6NstQjj6dj0IR9+uF+Ho2y0D+alv
F+dB1LerIq9H364T4ejbdSUcfbsehKNvtxTh6NstC/mpbxfPc1Lfrpq8Hn27
BQhH325RwtG3W5Jw9O2WJjxbWpLr2y0P+Rtbcv727eL6GPIsKS7Xt6slr0ff
bkHCjdLeXN+uO+EmySvXt+tJuFkam+vb9SYcfbsVID/PmZDr28VzqjynlOvb
pX1oDVLTXN+uM+FGKSXXt1uMcJPUPNe360W4WSqS69stSzj6ditCfl6H6JHr
28X5L69D7JTr26V9aA3SwVzfrgvhRulIrm+3BOEmyS/Xt1uKcLPUJ9e3Ww5y
8jy+uV5d9A7zPOdzvbq036xBOpLr1S1EOHp1PQhHr25pws1SoVyvLj5vvM5x
U64/F+fd1J9L+8oapIu5/tzChKM/14Nwk3Q815/rTbhZKpHrz8Xninpy8Vwx
zzM/15NL+8caJO9cT24Rwo2SJteTW5JwkzQx15NbhnCz9D7Xk4vPD6+vjM71
4eJ8n/pwaZ9Y9OG6Eo4+XE/C0YeLeajfFv2//H3tc/22+cjrDVL5XL+tG+FG
qUyu39aLcJNUN9dvC39Hgq92Ta6vFtd1ef1jv1xfbX7yeoM0ItdXW5RwoxSX
66v1ItwkZeb6avHvgr9v/Vz/LPp5+fvmy/XPOpDXo3/WnXCjtDPXP1uKcJNU
INc/i88/9cmiR4nXUXbI9cnSPqvoky1GOPpkSxNukn7m+mTxOefvq871w+L5
Z+qHpX1TDVJ0rh+2OOE5/2/m+mG9CTdJS3P9sPg88zpHm1zfK6638DrH3bm+
V9oH1SDty/W9liDcKHXP9b3i+1JPK3ps+fUr5npaaf9Sg7Q/19PqQbhRapjr
acXfG9yvuiXXr4rrMNyvei7Xr1qAvB79qh6Eo18Vn3/c50UvKtQpW3lRIwhH
L+olwtGLeoVw9KJeIxy9qNcJRy8qrptRL+ouwtGLuptw9KLuJRy9qPsJRy9q
GOHoRT1EOHpRsa8j9aJGE45e1HuEoxf1PuHoRX1AOHpR4whHL+pDwtGLivuD
1Iv6iHD0oj4mHL2oTwlHL+oLwtGLmkw4elFfEo5eVNwHpF7UZMLRi/qKcPSi
viEcvajvCEcv6nvC0Yv6gXD0ouL3CfWiviMcvaiphKMXlV4HvajphKMXNYNw
9KJmEo5eVFzHo17UNMLRi5pBOHpRMwlHL+pXwtGL+o1w9KJ+Jxy9qLivwesu
f3tRswhHL6qBcPSiGglHLyq9PnpRfxKOXlRcZ0COXlSc13tacv72ouL7Ikcv
6g/C0YuaTTh6UfF9kaMXVUk4elFVhKMXFdcVqRcV35d6URXk9ehFVRKOXlQ1
4ehF1RKOXlQbwtGLir+3qRc1D+HoRVUTjl5ULeHoRbUhHL2o9H3Ri2pPOHpR
8Xcg9aKqCUcvqo5w9KLaEY5eVHvC0YvqQDh6UR0JRy8q/h6gXlQbwtGLmpdw
9KLmJxy9qI6EoxfViXD0ohYkHL2ouC5Hvah5CUcvqgPh6EV1Ihy9qAUIRy8q
fV/0ohYiHL2oOO+jXlQHwtGL6kQ4elELEo5eVBfC0YtK3xe9qK6EoxcV5yPU
i+pEOHpRCxKOXlQXwtGLWphw9KK6EY5eVHfC0YuK64TUi1qQcPSiuhCOXtQi
hKMX1Y1w9KIWIxy9qCUIRy8q/n6mXlQXwtGLWoRw9KK6EY5e1GKEoxeVvi96
UUsSjl5UnF9TL2phwtGL6kY4elGLEY5eVA/C0YtaknD0onoRjl5UXC+iXlQ3
wtGLWoxw9KJ6EI5e1JKEoxfVi3D0opYmHL2o3sCpF9WdcCV4UUsQjl7UkoSj
F9WLcPSiliYcvag0D3pRcR5HvajFCUcvaknC0YvqRTh6UUsTjl5Ub8LRi0rz
oBcV1x+oF9WDcPSiehKuYpNyvailCFezXbleVG/C0YtalvCc+WauFxXzUP+p
J+HoPy1FOPpPvQnP+f8x139alnANM+f6T/F9qc/Ui3D0mZYmXMX65vpMyxKu
Zutyfab0+hp2J9dniush1E9ainD0k5YhHP2k5QhXs9u5flK8PvWKehOuZPlz
vaJlCUevKKwXCd7PO7nezzKEK5lrrvcTP28Dy+t/+zfLEY7+TcxJPZh4He6d
vJLrnYTXC76/gxHRutexlCtluEqGq2W4RoZrZbjuT27Zv8gjw5UyXCXD1TJc
I8O1MpzktOxf0PGUyWnhdDxlclo4HU+ZnBZOx5PXu/2d0/Hk9W5/53Q8eb3b
3zkdT17v9md+mZx6mZx6mZx6mZx6mZx6mZx6mZyC7+/vnI4nr7/7O6fjyevv
/s7pePL6uz/zy+TUy+TUy+TUy+TUy+TUy+TUy+QUfH9/53Q8eZ3g3zkdT14n
+HdOx5PXCf6ZXyanXianXianXianXianXianXian4Pv7O6fjyesE/87pePI6
wb9zOp68TvDP/DI59TI59TI59TI59TI59TI59TI5Bd/f3zkdT17P+HdOx5PX
M/6d0/Hk9Yx/5pfJqZfJqZfJqZfJqZfJqZfJqZfJKfj+/s7peCKn44mcjidy
Op7I6Xgip+Mpk1Mvk1Mvk1Mvk1Mvk1Mvk1Mvk1Pw/f2d0/Hkvr+/czqe3Pf3
d07Hk/v+/uTU94fePer7w/6i1PeHdY7U9xcKnPr+cJ+L+v6wDoj6/rDuhvr+
VkTgOGLO374/rCOjvj/cR6O+P+zPSX1/WMdHfX9Yb0h9f7j/SH1/2MeV+v4w
D/X9YV0M9f3hvif1/eE+JvX9Yd0l9f1hH0jq+8M6Qer7g3oiK98f9P+08v2h
T4r6/vB8NfX9wX6ile8PvRXU94f3l/r+oH+ple8P60Cp7w/2Pa18f3h+lfr+
sL8i9f2h94f6/rBOkPr+sM8n9f3h+FDfH/afpL4/PB9IfX94Dor6/uDci5Xv
D/t5IkffH+7zUt8f9hWkvj/cD6W+P+ybR31/cJ7ByveH/kReB/rb9wd1BFa+
P9wvpr4/7O9HfX+Yh/r+sF8f9f1hfzBPS87fvj/s94scfX/YTxU5+v5wf5n6
/uC+WPn+II+V7w/76VHfH+xXWvn+sG8q9f3hPjj1/WF/eOr7wz511PeH/eio
7w/2Ja18f3AOxMr3hz4s6vvD/W7q+8N+5tT3h33kqO8P+8VR3x/U71j5/vD7
BDn6/uAcgpXvD/fxqe8P7peV7w/2qa18f9jnjfr+sM8Y9f3hPjv1/WH/NOr7
wz5p1PeH/dCo7w/2ea18f9j/mfr+sF8r9f3hvj/1/WHfM+r7w75h1PeH/cGo
7w/2Q618f+jBpL4/9DFR3x+eQ6C+Pxg3K98f3Bcr358WclLfH+zPWvn+8Lml
vj/s90V9fzgO1PcH512tfH/YR4X6/tDLSX1/8Dxb+f7gHIKV7w/7d1HfH44D
9f3BPqyV7w/2f618f/B7xsr3h/0/qe8P+xZS3x+cZ7Dy/WEfOer7g31qK98f
nrujvj/sW0V9f/B5rXx/8HmtfH+wX2nl+8P+4dT3B9/PVr4/eH6sfH9ayEl9
f/CcWPn+4PNa+f5gv9LK9we/Z6x8f9j/k/r+4Pmx8v3BfbHy/WHfJOr7w/5I
1PeHfnbq+8N+TdT3h/2OqO8P+xpR3x/sm1v5/rCPOvX9wfezle8P6yao788e
clLfH/YRor4/+LxWvj/Yx7fy/cHvPSvfH3pqqO8P/l+w8v1hHyTq+4NzEVa+
P9jXtvL9wf6sle8Pxt/K9wf7vFa+P9g/tfL9we9qK98f/G6x8v3Bc2jl+4Pn
xMr3B+c9rHx/sM9r5fuD/Uor3x/2e6e+PzhXZuX7g+fZyvcHz4mV7w/G38r3
B/u8Vr4/2Oe18v3B82/l+4Pxt/L9wX6ole8P++cjR98f/B6w8v3huX3k6PuD
58TK9wfPv5XvD8bfyvcH+5hWvj+YB1n5/uB7zMr3h+ftqe8PnhMr3x88/1a+
Pxh/K98f7Oda+f5gnK18f96/uZXvD+YpVr4/+H/TyvcHz7+V7w+eKyvfH4yz
le8P9qmtfH+wP2vl+0N/Jc/52/cH359Wvj/8nuQ5f/v+4HvDyveHzwPP+dv3
B8+Dle8P9p0F39wf62yC3+0Pni7DBZ/aH1zwmv15HZnXC36xP6/fTOb1zWVe
3/zvr0+SeX26zOsFH9af12khc50Wf7+O4Kv6M3/Lv19H8FX9mUfmOkky10mX
uY6VTwq9RdQnBR4iK58U9u2hPinw5lj5pLA+gvqkcF2O+qSwPxv1SeF1lAz/
/e2TwroJ6pPC9TTqk8I+D9Qnheta1CeF/Z2oTwrrBahPCq9PfVJYp0B9Ungd
6pPCflzUJ4X1BdQnhes21CeFdZrUJ4Xrh9QnhXXH1CeFdQrUJwXraVY+KVwP
oT4prPOiPik4/2/lk8L3pT4prBOkPimsL6A+Kbw+9UlhfQH1SeE6EvVJoVeC
+qSwboL6pLAeivqkcJ2B+qRg3mHlk8Jz/tQnhfNc6pPCvhDFLHl++6Tw+sjR
J4XXpz4pXP+hPins50B9UjiPoz4p+L1h5ZPC9QRe1/DbJ4V+B17X8Nsnhe9L
fVK4PkZ9Ujhfoz4p7DdOfVK4juRpyfnbJ4XzdOTok8J1MOTok8Jz+9QnBe9r
5ZPCeQr1ScF6kZVPCuuFqU8K19+oTwrP51OfFK5HUZ8UXp/6pGB+Z+WTgvmU
lU8K152oTwr7olOfFJ7Ppz4pWJew8knB+1r5pHDeTX1S+DsQ10XRJ4Xjjxx9
Urjeghx9UjAOVj4p7OdMfVJY10l9UrAOYOWTwnko9Ulh3QH1SWE/YeqTgutb
+aRwfkp9UjAft/JJwee18knhOFOfFNYdUJ8UfC4rnxTWuVOfFM77qE8Kfg9b
+aQgj5VPCn9XU58U1kFQnxSOA/VJwfzRyieF8zXqk4L5qZVPCtd5qE8Krm/l
k4L5uJVPCuet1CeF83Tqk8Lxpz4pGH8rnxR+XuqTgjxWPinIY+WTwvkg9Unh
/Jr6pCCPlU8K8lj5pLAenPqkII+VTwryWPmkcB5KfVJYV059UrjOQH1SME+0
8knBdax8Ut4wDtQnhc859Unhc0V9Utj3gPqk4HNZ+aQgj5VPCvJY+aRg/mjl
k4J1ACufFM6jqU8K8lj5pCCPlU8K8lj5pCCPlU8KzjMLfqU/5kGC5+jP+VTt
v79e8Bz9eZ06Mtep8/frCH6iP6/P/UR/Xp/7if68PvcT/Xl97hX68/rcK/Tn
9blX6M/rc6/Qn9epL3Od+jLXqf/36wieoD/zI6f5kdP3RU7fFzl5X8EH9Gce
7gP6Mw/3Af2Zh/uA/szDfUB/5uE+oD9fL8m8Xvr76wUf0B9c8AH9wQUf0J/j
gJx8LsEH9Of4ICc5BR/QHzxIJmewTM5wmZyRMjljZHImyeRMl8nZX6a+YLRM
fUGQTB1EsEwdRLhMHUSkTB1EjEwdRJJMznSZnIIP6M/nBDl9TpDT5wQ5fU6Q
0+cEOR1P5CRnugx3lDnP7yFznt9H5jw/kznP31HmPH9/mfP8o2XO8wfJ5AyW
yRkukzNSJmeMTM4kmZzpMjlHy5yfD5I55x8sc84/XOacf6TMOf8YmXP+STLn
/NNlcjrKnJ/3kDk/7yNzfp7JnJ/vKHN+vr/M+fnRMufnHWXOpXvInEv3kTmX
zmTOpXeUOZfeX+Zc+miZc+lBMjmDZXKGy+SMlMkZI5MzSSZnulxOmXPpwTLn
0sNlzqVHypxLj5E5l54kcy49XeZcuuAD+vO+I6f3HTm978jpfUdO7ztyet+R
0/GUyRkskzNcJmekTM4YmZxJMjnTZXIqZPab9DJcIbOvpJfhCpn9JoXMfpNe
5vV6mdcrZPabFDL7TXqZ1+tlXq+Q2YdSyOxD6WVer5d5vaWuwSTD6fu2/Pt1
9DLX0ctcRy9zHUtdAM3T6u/XsXB6HZn5oEJmPqiQmQ8qZOZ9Cpl5n0JmfqeQ
md8pZOZ3Cpn5nUJmfqeQmd8pZOZ3lvpiWt+BnL6vzHxQITMfVMjMBxUy80GF
zHxQITMfVMjMBxUy80GFzHxQITMfVMjMBxUy80GFzHxQITMftNRf0zzIaR7k
NA9ymkdmvqmQmW8qZOZxCpl5nEJmHqeQmccpZOZxCpl5nEJmHqeXyamXyamX
yamXyamXyamXyamXyamQmT8qZOaPCpn5o0Jm/qiQmT8qZOaPCpn5o2VebJZm
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
y0ZFbyf7vzD1kkzryPA9T1h6aWzsvtBYt6MsveTT6cjQ86J8ll4qDFp8dtiP
Fyy9ZKkvsu7z5iRLLy0epbvgP/dHLL10en3o3X6Xill6SedbXW1j2VuWXipr
3VK26eVZll66LPJeHxDxhKWXfIS7qj19yfo8tF7yEcdsDo+qYukl7Wc3EnP8
L7D00rzKXt4bFj5n6aUPxzycF5H96Rh6aX/5Vj/jcbUsvXRs0/vBAQ+/sPRS
5wHtl24WXGbppfLPiy7N3fCSpZeiguNFr+69Y+mlDVPn9I8a+4mll0b3MLZK
CJKy9JKHOp+ZwdJLp9X5zGKWXkpT5zPJ+jy0XrJT5zO/sPSSkTqf+Z2llwTq
fKaSpZdy1Pm96yy99E6d3ytl6SUtdX6vlqWX2qvze19ZeslUnd9rYOmlXXHf
PzxsQX1PzdBL1eo8WBZLL/3Mg5Wz9NLPPBhZxwnmwWQsvTRwle27D8VKll7q
8jz0VdgD6rsehl5K+eDiKOtFvhui9ZJcd8vVmgWPWHopPqrn+dv8IpZeUiVW
TknQqmDppW5RDx9+Sq9k6SVzz8yQtPnkvtN6SRDd4Cp7WcvSS6IPA5MzN31i
6aWU9dOL/vn8haWXhuw5OutSJylLL422Gh2/4RRZL4jWS2ULE7+N8iLrRdB6
acnZMh/NJjlLL1mo8yrfWXrpsTqvQtY3oPXSMueMK5nOKpZeitcuXmt6nXpO
GHrJW50/Ievh0Hpph+XOWTd0yXf6tF6KNCgbb/iVfC9G66VZgt4o9Cn13RZD
Ly334GXcI9/7M/TScaS1sHUO9d0TQy+9suxk7lZHfYfF0EuanczfbDSg6k0M
veQg7r/jwXCqvsPQSw3xkl7xemR9GMKbf5epZhe7rdRzyNBLVue7tWuO0T85
Qy/lOzpoxK2j6jUMvTT7qedXKx5VL2DopdBzCbYdzlDjM/RSlVbna54rqfEZ
esl3XrrDDrJvI0MvPbvXN/upIfXdFkMvHd7+JqUV2XePoZf8b3adYVFM5Z8Z
eml4jtX+uplk3RVaLz3uV5R5cj11XIZe8kuNKZ53gjouQy+FtdZfmVhFHZeh
lwbfCt4UvoysJ0PrJV5k9l4vTaoOyNBLupa2I8usqOMy9FJjXHpTHjkuQy9J
JK2LX+qR79FovRRw0NHm4WPquAy99Grc8oQbW6njMvTSWNW5uktjqHofQy/d
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
kaiGPw==
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1:eJxN3HW8bVXVBuDNWXvtfWk4mw5BwO4AkZBuULq7Q7oRpLsREbFR7EBRMTEw
EFBppBQBQUEQUAmL730Y8/74/hj3jjNmzzVjxDv3y3c9cNMDpgaDwYzRYDDM
//ONB4O98v+eoQsiODt0VmiuyOcOrTE9GKwe2nEyGOwUOiP86aFPh/9M6IvJ
+4XQK5P3VaGLw38gNGv42cbFXxSaMS7ZmdNVh7JXhF4T2b5pe5/Ql5PvM6FP
h/6etH9Mqu7Ph14xrjbwnwstMy7ZUuMqu1UG9c/knzHfYDAOvTfy/UMHhQ5P
+nZJnz3yUagPbR/5DqFh+C60bfjtQue0OTD2eULPps5nQm8J/9ZxzdH5ocm4
5m7R0N6DmsOPR/5Q8j4YOiXze+qo+mQcL299XS703uTdOv35d+QfHNacmavZ
Qx8Kf0lojvBzhv40qTrVdVrow0m7NDR/0hYwtsjWS31rp74Hku/+0B9Ch0R+
aOj34e8L7Rp+t9Aj4R/WbvhLQn9sZeQ9rLWxYepbd6ra/mja+khoobS18Lj4
y0ILjkv2oeR/T/Kvn/x/nlQf1Kkufftr+MdC3w5/9ajy6IO2lf1caNOU3zDl
H438ydDfQoul7sXHNRfmyNyYE3Vskfzvnqq67w3dE9o58l1CV7Q1ZM7NvbXy
2dDS41oz1tXToSXCLzmutXb5sGTS9OEvoc+2vpE/FXrZuMr8o+VT1jd9qvVZ
X+VZN2t7ndBuke0eek/4d4f2Db9f6OOpc+NBzdkz3WDwvqQdE7okaR8KHTtd
Mvyl5iJ5nuhqzszdY+EfDW3U6n0q/JOhS62NUdX5z9DHRtXWYclzaOj8lL1g
Umn/CH10VHn+Hv7p0GXhP2Juk3fz0EHJe3DotPCnhj4V/vJJlVVGXnUcnbSj
QhdbU6Ejwh8eujD8RZNKOzL0gUnlcXaoU13OkFPCnxz6RPhPTmpsfwltOF1j
vDP8HaENwu+fb75//n+vMyR5zwwdGP6A0Fnhzw5tH347bWp7UmVvD60/XXVI
2zZ0xKTy7DBdZeQ9OrRZ+E3Vqe7Q3Dkb5gqdmG97UuiEpB0f+oi9ETpouvqg
7XMmNZaTQh+f1JjwJ4Y+NinZX7v6hr6dtfH+0HGhDyftsknVTYbXhm//eFd7
1hrwrXxz3/qytp/svXcPaq382VoJfSBpF4c+lbX9yWGtUWsV/4lh7bEn2x5x
djrD7J1VQu8K7ZQ+7Bz6Tfhfh16YuCxytqTu34fOSt1nh56IfNOU3zbJayTf
H5N2f+icpJ1rjQ3rDHF2LDKuvbF2aNdJ7ZFNwm/sm4bff1Lz4rvvM6k940xV
xyLtrJVmbew9qTy+63qhPcLvOalvTIbfa1J72xw81fb9Wklb09jC7xJarat7
cM+M4ZpJzZm53GhQc2kMeGeisd0buid0euRnhO4Of1dXZ7Tz0toxJmOxhg5L
5buk7GFTtT58m4dDF43qG+H/FLpwVLJb+siT/+Tk/+Gk6v5dV3eKNu5rfdD2
maEHwz8QOi/8+aGHupLhLxhVWXvI3lGHtuSRpk3fUp3q8k2fC/9s6BPhPzmq
b+mb+9a+6azz1R3rbj0g9IJ7Jf3dNfS+Yd2xs4UObHfvb9Pmb0KvSb7XhnZK
nh1Dfwn/aOinSfuJtRV+llHxPw690JcM/6PQ//qS3Rr+ltCKSVvJHGauLwp9
NbKvTYq/MPSVSckunq480q5sZW8OrTCqOt4VWjVNrZr5uT3ymybVZ319XehO
Z0hoI+vCfE5Khn9P6K5JyfAbhzYJrZH6Vk99d9tz+Xvn/L2TNZZx3zapMej7
yqNqk2zl1pddkmfn0GPuzlGN5YLQlyc1pncnbaPQH3ybUc2Ndfvfvubok87S
0Pcj+8Gk+qCPM/vm7NvGGT2pM1Dej4e+N6kyXfK8I31dIf3/mTPJ2RT6Vvhv
hz4W/qOh74T/7qT6dn7oS5Pq4/rp23qhe1LPvaMqe2nom5OqY92krRO6y96x
ppydoc8l7fOhc6dLhv9C6LzpkuG/OKm61aGsNj41XWM2VvtFWx8KXTWpNvGX
hL4xKZm1+OvQq0e1Jq+d1Bq09qZGlXZj6FWjynNw2jqIPkGXGxV/IP10VDLf
dA/n66i+NX535+uoZPjdQk+MSnbIsOpU1zOjSts19Pio8hwV/sjQv8P/Z1Rp
1oS1IM+hw6pD2WdDx4U/1gGWvTZL6Ijwh4eeT9q/3M/DqlNd/w0dMywZ/n+j
2rNkeHv5hPDHhzq6cWgU2n1Qe/ykyN8/rDa1NTWuvGR4ZeQ5MdS3snuH3yu0
b77BfvSg8PsM6w53l5vrG0KvHNWc/yr8daH5wy8wKv6XoflGJcP/IjQZlcwa
9Q19u67t2ZXT13dN1V6W9+eh6VGVWTC0QtJXSvr1kyJtLtDSfhv6jTraPXhD
xnA9WyJ764C+vo05Nre+0XOjOvtePOPb2jiAPjmqNfJgaIekbR/aJPL9jX1Y
OgPdYb9hzcn+TY+RRnZA0ytuTvmbRnUvr9rmzpzu1/QgZ60z2VnszLU3PxK6
elJ71N46K/TZSe2xK1P2a6HXJ+8bQl8flgz/xtA3hiXDvyn0g/DfD70j/PKh
Hw5Lhn/nuOr6auh146rzR+GvCa0QfsVx8crIS3Zd+F+G1gi/5rjKfiX02nHV
wVa8MDQel834nfBXh55L35+flA52lPmcKt3su8PKI+1foe8NS4ZnX63s2w3K
5vpJ5FcNa4zG9uZx5WGL7Teost8OfWtYNh/b7+omw+vDLGlzm+Q/IPl/G/mN
1oj95I4KfWlYNjFb+NXjspXYbGw1NtO5w7Ix2ZbzjmvN2NPPtrV03rDySJse
l02sTnWxlemic4ZOGJdOyhZVRl42qb5cb79Pqk/GaGxsbGNXdo7Q8eOqw7f4
RWj1cX0T/M9Dq41Lhv+ZtTcumTn8cWilcc0t3jf3rcmuDf9Teyf8KuMqS4Zf
tX1zc+ebXNfm+pv21FTNuT1n7+04XTooG3jP5N1jULbxv9t3XrbZ0mz4Q5K2
7VTZ9u6WtUO/G9Ud81z7jmz3t40rba3QnaPK86+2rt4+rjpXa/tsFzrqdOVd
M3THqMpIsxfpxvI839aFutVhzs39Wtoal829dvq35tRLtjibla3KJn+hrZt1
2I7j0rHJ8OuFNkxbG4Tuo6uF1rfPB7UGrcX/te+sLXWQqUNZeVcf1piMZbfp
upOdRdsN6q6mS2hD3XSKLcNv4cymY7Md087mU3WGbT2sM2zj0APtbNss/Kah
3eng01V289Ce01XHVsOqU137TNfd4I5xt7gj5FWHsspoQ5l9Wts7hN8+9Eja
+vOo+O1CD49Kpi/vCf1xVH2iWyojLx1TGp2JriQPXYcOQ3eh8/D9TNnT4/IB
0UnpajsOSlflK+Ij4hviM9L2tqE/jaoP+G1CD41K9ufcEbOkLB/b66M3/60v
vqNT5Z+t0vaWoUPS9qHWccq8PXRi0k4KLTcqGf7k0DtGJcOf0pXeSG89i07e
ld5Ihj8n9Mbwb3DP8y10lZeue2ZXZd7V9E55z+0qbZ908Iyu8ij7enpDV3W8
aVR1quvYrvRIuu4nw3+qKz2YbvxxNkNoNXskdD4boyt+FedaV7K3hn9L6P3h
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
18nfh6TsKoOKD52X8psm/V2Dkv1+WLH11QcV7xFjv3pcsX0x/i1S/ppx8Zs4
M/L3juOKN60W+iudYkZ9W2vg7r5ixfLCQ4gZbzBu/uzQnc7PpK80KP/2uZPy
s604KNmv3A98bIP6hjP6whZsMCg8B4zBZ8cVyzTGVZP+0XGNXZ639hWLNnYx
ZTHpPcbVV2P8u/bHFd/Sxix9+W2dXe8clB+Pn5h/XZ/4AcWx7NU3Dl6KA+C3
mKpvyE/+pvz95kHFLeBPYF3EHcVbxTmdGc4KcU1xSjK8OKa8sDZilMqIc4r7
immKbS5FN6QT0A26igs7h9hm4qjKKiOvOuRdko7RVRm8M8lZRLZX8q44VWfe
Dvl7jlGdOc6arUJzjkqG3zo016hk+G266ps+aFsfxTDEJXaii4TmpevRgehC
oblHVYey23YVx9AHbe/YVV55pCmjLnmkqVNM15yZK7HfV4RfJnRQ+IO7im+L
64pLi3f/pS8fFt/VG0J/7evOd9e/uau7Xx5pdIAnwj8eekv4t3ZVl1ixuLY6
3cXOeGe7O1ledapLGXn1Ud+UgUvjI+Ab2Cw066hk+M27OuOd9c7cQ/L30qP6
xr7tgV2NjQxvjOJBYrlHhj+qqxiTWNOh4Q/rKgYozne4u62rvGR4ZWYbVR+0
vUVXedWhrDJ8eTAzBze7RYzKN/Utdwm9LPzioX3oKl3Zakum7y8flM0Ga7PU
oHR6ur3Y7CsGpbPT0+l+ywxKRgdk6yw9KBmbBw6MrkLnp/v/yRnvvkj5l81X
tom2tMFGgbVYYlA2J7sOlsLdy8fBDqbr8XW8bFA6nziivfmWwUtxRvxbQycP
K07ztkHpTHCD/xDjcJ6lviXmK7/5awZ15vJji629ylgGL/n58ZtM1Z3AFtS2
PrIJ6Y6vHFQZOqS5XCy0d1dzunDaWCj0rbT77dCi4RcJ/VwsY1yxXzoU3UkM
eOFR6Sx0lT26ivmJ/e0afreueN/QtyNbZFRl5N0zdPuo9D/6JOzLoqPKI22v
rvpGhtdH+i19j375+KTu4nlCF47rThbbE3MU9xBXWCBp84c+k7Qr2phOTPmd
pl4a64Khb45rzMZ4Cv1kqsY+885319MF1DVf6NPjl+p8f/LvOFVtLR5aLHR7
5Hc0Oj3pu0xVGj8lPyeMIFwff6f7wp3Jfwrv5652Z/NnrtziQOJK4jv4FVtc
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
dm748/rC6ZPhz+8rLxlemb+Oq0/6cllfbwzMubm+qS9/1Qn5Phc5+/vqyyP2
cF994t/gy9k7/D59vaHiF98t/O598XzlYlhk8r6fD7ivMuo2Bn3XhjTvzPbs
K483WupU1x59tS1GJzanD/whfCPHKdvX2hQzEyuzRtWlDmXVeW/S7nFehD+l
r3cJxmysN/e19qxJa9Ea9CbF25TPmtu+eO9WruhL9r/U9V93ePhv9JXmHchn
+srjzYW45uX2Zl9pZHh5/pWyz7vjlQ39e1wy/NdCz4wrpimW+cXQKGu/D/3Y
2g+9MK4+aPuqvt6AeMfxfWMLnTRVMvwPQ1MpO0voW/L25XPje7va2PvixTLF
OMk40rWh7m/21dfnQl/uq8/qkkeaOr3p8I7ju/ZuaDijYqZipT/qq+9keGPQ
V2Xk1Wdl9Ulf1KGtZ0Nf6qtNvDkxF2TmXsxVrNU3mJ5RMTmxuNtCkxklw98e
mm9GyfB3hOYKP2fouvC/Ci0efrHQ78P/oa+0OUK/7CvP7DMq5ijW+IvQPOHn
Dl0f/oa+vjXfIx+kby5NG+qWR13qUFad3sRYg9aet2Uvm1F90Pb9fZ11S4Ye
6OvMmzX8jNC14X/WFz8O/bQvGd4asTbIFp5RMSyxq3v6qktMUyxTnQuGXyD0
u/B39cXPH7qzL5m5WDR0X19zgl8kdG9fMrw21E2mrDk2t+qw1+4OndTXnsPf
FTqxLxn+d86YvmRwkrCqcIuwlTCTZHi4SRg4ODZvprydkhfODQ5OGTzsG1wA
GTzlmoOKiV3eYhB8AGx/b42WSV+XDv0pbT/cV91wcd6MaQMPF+dNGdlBrQ5l
vUOTBrfmDZo8MHywfHB2sHdwKXAxcDfeQcOokOHhzOFYyPCw5zB8cAxwCXA1
fBXiWt7g8FnAv6zV4nvwoXCf5sjcwI3CGOqDtmEHzZHYp/iguYOzm4mD8NsB
l7c6tmpzxcaGm4TzY3t7v+OtGRt8nZYG5wgDKM+y4d/eVcxJ7Okd4ZfrKiYl
joSXRxqZeJRYxNvYo13FpMSZ4DZhR9X1tq5iXOqUZ/mu4lLKikvRiehCsJfK
kuFn1rFsi3e8tZXVJ31RB8yQOTfX8P5wirCd4v6wjDCLZHg4SJhGOABv+Lzl
M3ZYT5hIc4BXRl4yuEll5PU2ki8MNhaGlk8MjlIead5S8oHx3cGY8I3BVcoj
zbu3tZsM7x2Vb0CG923UDYv7Io5iVHivdQaFCbi6rT3YLO9qrUE8nAscCRnc
Oiy7N5feXuJn4rjJ4LblkeZdJDyreLMYOXw6DDcstzeS3krCfMM9w3Gs2tbg
6i2ebm3CwcO5w7nCvZ7TZHhYWHWS4bUF865OdcHFKkuGV4e29VHf9MFepiPS
De1puiAdju5GJ7xvXDqAu//Uvs4emBtYG2fQ/eH/EDo9/BmhV8yoM8LZ8Ehf
upVYkZgRHevB5H0gdFb4s/sqC9MDy6OOP46rTnWd2VdeMrwyD42rDmXP6cvX
AAMg9s/n4FvA6cCt7NPewMI6wDeYexhhWGE4WlhePBw/TC0ZDD+cPsw97P1F
rYy86zfZKg2/IC/cOWw6XB2cHR6uHcaOzJ6BPXEGXdnS4MrhAOXBO8OcXWRf
aHWqy9mlb3A9cFn66A0DXA5ckrcE3hl4y+CNhXcVYrhiud44eIeAFxv2DoLM
2LxF8MbAGKWJO8P9yKMubahbnXzaznBnN1+3OLI21D3zXYM+aFudYtLizN49
eBuBV0bemTJzx96V15sv77YmdA06y7h8SnxJa/f1hsVblkfYisOyG9gScCV+
i4ANw47wOwV+ewEvjzQyPlN2MRuDrSGmKLZ48qDsDTaaOpSdqWfTe69vdo48
bBMxWGV3aWXkJaOTK3NDs5PYj6el7lMHZS+xK9mad7Z7m45N1/5Ns5vYlOzC
m5rdh5fnt83uY2fJc3OzE8UwxTK1cWTrK12dnXl9s8PYbnB0fpfC/j1jUDFQ
+j4bkp3mdyv8bs3hTYb3WzbqZIcu1mKp8qpTXcoYE7vv1jZWbbM12BH6wF40
9lMGZd+wwdg9f2t24aVN9mQ7Z9hRZE81O5Td5Zx4uNlN7K2zB4UB+EDb8/b+
CQ0P4AxyFv2+nUMntnPpD+0cObudG95dK8Nm+3A759i+Yvpi++cMyv7VV3bS
E80OxbOdHm92Jpud7X5X09OOad/4d01PM2Zr4sY2F3wEytzd7Chzxa5jc5kz
Nhxb7tFmV+LZmezYR1sf9c0cXNbS2KLsSnnw5sxckZkjdT7W5s63soasHd+M
DcwWhiP11p2NzW72Lt9vDbAz2B6zNb2bXcVuGTQ76PN92XVsLrYXm0SZ2Zve
T48mm6PZCXRauu2izU5gV7A1Fmp6sDS2xSJNb6ZDK7NY0+vZX+en+fMGZd+x
Y9h2/2l25Jea7L/NrmPzkOFfaHYiGd4Y1GFMs7S62SMXJenCQdkH7Ex2yD+b
3aRv+rxw0+M/0/I80+wsd6S70m8y+G0Gc8POZfeZIzy7ll1GhlfHs80udLYd
lfX38LDOODaFOTB2to379JL07YODsm/YDWyTJZqdw0ZiK/ndA78bwOZiJ3kT
6G2gvvnGvq0+8lPwDU2a3SEv2+qj7R2hNHb8dLP72DsXD+o3PNhb/Iz86PxI
fF3a1uaLbU2XTadP+uK3DNTFNzBvsyvd32cO6kyiT7C5rJk5m93nG7DL5m7f
hg3Fblqq2R3sPLKlm55hTsiWaXMlL7vq5U2vuba1MVezO+/tX7Lr5DEmtuQC
bazmgq0Kt2pO+DnM2XzNzpOXbP5mB/pGvo058u2csXwrdCZnL94ZcE/To9hw
zqj7m14DEw8H73cs/JaPdxbehcC4w7p7E+IdCNw8LL28cFNwVco83vQreGjv
YbzB8BYDbt5bGRj4FZsfnC9d3epUlzbk1aa2lPGGx7sc71q8ddE2XBbclj54
Z+JdiXcr3rJ4czLzXYt3InDtcE1wUXBAMO5keNggOHgyvN8C0Ge4/oMbnkjb
cPne0eiDNDh/v2skD9y/OTNXfufIuxh90LZ3KN7IkOGvaXNgbuDDX9XqUoey
6vTeCT4VptX7I28EvRX0DsJbqRuaDO8tm5gYbBCbQazMuw/vMLyL8E4DD1cO
h03m3cDMdyfelcAeecfhN81gkNgc8uzTbBHvULwj8e7D20xvLGbiuP3WkHcg
ZHi/zSVWp4y8Ynbfb33SF3V4c2DOzbU4CEwTDBTsE6yTdx4z34l65+lNpbeV
3ox5B4L3lhNOnszcyCPNHMFMmSNzA0vlN4PET+FvvV/zng0PY+U9KfIO0DsX
ad6Y6IO2vWPzJo0M7x2MvGR4ZfQVTh9uXZ/563afqjuCf85aN2Zjtea9wfAW
w5sQb0O884JThCP01sn7JG8LNhvUeyNvwOSR5m2Ud0jeKnkz5R2TPGTfbGX/
2uIL6vC+yRsq76a2aO+iF2iyLRsu3LsrMjysuLq9lfJOSxtztz5omwxmDE7M
u3jv6GGSYJM8YvA23hnKNmMTOVv5jJwxf2x2lrvdne+ud8fThdhSfoOGTqSv
cJSbN9ynNLaX36yRh03GNvOuxG9veEc18x2Ut0/a1uYDzS6jk8FqOuPPaXWp
Q1l1esPnXZ03Xt56mTNvw/ymnrmU5p2dN2LyeMfmXRic6HfbnraXxXOWbHm9
zfPmTBlnkzLyOqO8UfNWzTs+v4PnXZG3Rt7heJeD93bJmxwya8VbHu92rBlp
3pbBbV7X1pC3LuzZZVtedarrhnbGeosjj7PXG0p90Lbf4vPm0NtDuFnvDr0R
hAuFY/U7W482/78zadjG5t2id4rG6IzyVtI7vCvaHFq74gXm1jtLZ7iz2zs9
DzO0oW6/5aUufdC2Os2Nd4x+J84c4ZWRl0xb6lSXNvmY+ZqHza9OB6SbwcjS
Dfmk+aZHzc8q5i8ODjMBOwFHQYaHBYGpIMPDisCAwEmIe4qFwm3AZfgNQb8l
KA2WQkxUHjgL2A+4E1gUPFwIDAoZTAucynTDksKIwooeNyg8irphP7wr0Ia+
irvCjOgzXtwVToTM2ofBgb3Zs52pzla/oyHG7Hdr/JbYf+3ZYZ399oy94g7Q
NzgLOBd9FKMVq4UxgTXBwwrATZBpW+wXRkUfpMGOwBnIgzdn5urSNofGduyg
5ha+55jwRw8Kn6JtWA8YG32AUTGH5g62B+YC9gLOAXYCD4sC80CGh0OBoZiJ
g5j5LkRcD24ClsLv/vltQTY3W/ukQdnicBSwGmLWYtcwGrAa3mn4nUBlyfDq
kFef9OVFbFRfa7Bvfnu/EWTOzfULw8KEwG0s2LDFMCNkeHhjawFOad75XloT
3haZI2vFHJkTc2Hu5IVjmqe9O4LHMhYYZngQOCc4Jb8L6bcjfUNz782Sbwvj
BCc0X8NB42GHYHDI8Na4tU2mLtgn74bU6TfnjNHYPPw6ZFxvVrxVmeprrflt
2P8Ma835zRQYAdiAW4f1uyl+e+W28LcP6zdUyPB3DCtNGXnl2Tz8ZqE/hL/f
fI7rzY63Or8LvTv8RqG7wt8d2tiaCN0T/t7QJuOS4e8bVl3eGHlbpE5l1aku
dSirTnWpY8vwW9CNwz/gnhyXDP/gsN4s8efxp/4pf289rjzSHhqWLSWPNDaV
3znhQ+I7+ktot/C7hp4M/9Sw/QbKuNIeHVbaLqG/DSvPTuN64+Rt0+Ohnccl
wz8xrLxkeGX8fo861fXYsNYcrPsJg1qLxmaOza0x7jmuN0neIv0jtF/4fUPP
hX8+dOi4vrlv3YUOG5cMP+wr7z6hZ4dV5vBx5ZHW95W2d+iZYeXZa1xtauuf
w/oNVe+8/uXuGNbvUfHJ8cXN31eaeMgag8qjLnUoq87dxzWn5vLp0BHj6oO2
R339Zqp3d3PbQ6Gjx/Wmy1uuWZ3rzqfQbOFn74uXRxrZkeOqU13jvuriT117
UHUeO646lJ3DueH8C80Zfi71TVUftD1vX78TRYaf7sv3SIbng1RWnepSBx8k
XyTcGSza5u0Mc3Y5C+DsYO/4oWHf4AGdtX7Ta/42Zv2EsYO1m7fJ8LCMc7V2
/A6W3/+as41jzvY7rcP23Y9p4zS+I1P3EYOaD+vCWXBUm7euyY5u8zpHm9c5
2u9szd7m1RyQzda+g9+5JRu1dXNsm0d71t71btDeuqudA5u1dXx328ebt337
ZNsHe/+/dWmdzGi/6wZ3aM7MFRyhMfvtM2Oaq7U9bOtCH8ZtHR3Xxq6v1o53
nfr8dNvH9sF+7RzSpy3aufFMW+fj9juffs/Tb2cfNqj9JQYuFu5Njbc14vaw
AX5n0W8vvhij7+t3H/12pDRl5JWHzSGPNLaIeDNf0gWDwg/AEdCJxi0OPVOG
l5cuBTfQtTi/tvRB29rku+Zz4Wvhw+Z7gTuEo+GDcd4eNKjf0LqjnRnOgdna
WCdtncPInt7OFd9k1va7pva8fX1wO2ecC84i70D91rI754W2r+3F/7V75rC2
z1/cn4P6TXJ5/9POkUPaOSXvf9o5pswLTS86vO3re//fub9VO0esoX3aOfhQ
O/f79lvn020f2zuntXPKGI0N9tbc0EnoIubI+XTooH5T7bF2J7gbdmzn+H3t
3tK2u+SRlmendq4/2O6hYfud9Qfaud2139GCqYVjFbMQu3DPPNLuCXeDmJTY
FEwqbCrcLFwszCmc6fJNR5i/6abqOH5Qb5pWaWcLrK8YlzMGbtYesnfgbp0x
5uCMdvboizzS9AkuV5vagm11lpHhZ55p7iZtrt36ps/6qo/uxT+3e87deFWz
S9mwC7a9/kS7V+z5O5qesXFbm/e3e9/ZMdW+od+2O3hQ35bOcWvTK+gCT7R7
ds92z0i7pekN8tzeysirDWmwkHQKeXwbbU6138GXBldJh5Hn0aYHGMtu7cxw
FlgjT7ezja5DZ9msrQl9tcfua32jC7iz9fGxpjfs1tba/wGzk3K3
            "]], 
           Polygon3DBox[CompressedData["
1:eJwlkr0vQ1EYh98U565ySWq4cVnqTxAm0UiqIqKDGCTEV0Qvqm5JQ1NiMkgQ
ZUF08DEaxM6kujDUarP4WFyTSjzyDk/y3uf9nXPec9rW8YXEfEhEHKiDwxqR
A4jaIrM0nhtEeiyRFept6sdakScoEj6FfXIb9NxGkTvW3UIM5+FeyKeofeoh
GGP/OdZ6ZJLQRW8GXyb3wfc7DOD+B3rFRcl2wwQujfvEecySpd6h/qFXhYLR
NUncF3sEUCGXx53h1pgzB4Gls17hLvi+hD6Iwzpn5OiFucc3ewbg23qWhWsh
40IWt4qrxxWpN6mnYI+7lek3sS4Mw/RS+DfOcjg3Q90J7eTO6f+Snea7I6Tv
HmPmXUv3LrAmgmyDtNG3nMTdkynBMj4DW7be0WGWiNG3HCGXJrMED5xTgkVb
f78qvYrRt8xT99KLw7Wldz/CDbJvAm6Mzu/jmsm40G/0PzGKO2b/E/gDGBFL
kw==
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.368417, 0.506779, 0.709798], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
Lwn9OYvr0AOfSeN3ewX//wFgztS4
            "]], 
           Polygon3DBox[CompressedData["
1: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
+dz42tQ5YVR16C7Z1Vwgw5sTJ4/Kh8d39/LQKaOS4V/Rla1keDbr62+ZDxv0
1Sf+Cxmvz/Yle2PK3xA6M7pndcX7zjyjK9kPwm8emh3d+fhhwq/sO8+z0tW1
k+GNwQ/HVYfu/H3NLXPKXDLHtPX90LivNn3XrhQ6zVpsfRyXTWw5uytbPx/6
TF82s00dumzU1rm5plFfbXq2lg1dPaxnDM8PedWwZL7TPYOevetCq6fs3aEP
p62PhN4zLRl+va58rh/0fdeVL3aNaekoW7+runumvbMH1caNaf8Ge5Tw64Te
O606dD8aumlUOsrW7Ur3eu/4ruq4lvWj3/d1TQ+k7P7QJin7hmfUsxr6Rsq+
2Rd/UWiTvmR/86yHvhr+a6FLPSuhTcNvFjrb2Ia+wBfYV10+Gr4Zbaw5LZvZ
+rHQRuE3DH03Zd8Lfdm3e+jb4b/Tl29Hn/ri4/nitL6978t4fKsvXTK8OtrS
hrraPGdcNrHlS6HTZ5UN+v546PZc+22hT4f/TOjq8FeF1gq/dugu76rQ58J/
PnT3qGT4L3Sle2Voza7qXBv+mtD7wr+/q7IrQu/tSucf4W8NfTL8p7pq+87Q
Bl31cXn4y0LvMRdC94yqT319MfSB2P7+0FfDf62ruUOGN4fuHVUdul/q6t5f
F/pAV3PglvA3hz4R/n9Dd4xqDFz7Z7saCzayzZiwVR26bNaWa3Rt2lzL933G
9Nzcjw27su19oa90ZSN+7dBGXcnw6tAlu29UNrP1y575cd0z9+rLoXPHJcNv
GDpvXDL8RqH9RuXD57t/QWj/Ucnww67e5WR473T+Eb6ZucPP05U/hR/mX3lW
HwrtFX7P0HPh/x3aIfz2oUfCPxracVQy/GOhPcLvHnom/LPDavvkjMdcXfUh
ZiB2IMbwn2GVvS6yWV3pvHZaOsoGXe1tfu4eDWuPww9kTbGWXD+svY49kL2P
PQ/dn4VuGlYdtoqBiH2wWZkYi9gKHXsLexx7G3uMlaZlg75nurKNDM9GY8NX
9eCwxohPik1suSG006jGxFj837DGzpgYC2O486h0lD1ujI116Ftp+9td8Q+G
vtmV7HG6oc2svaGHR1WH7ne68o1f5x3el4/8kVHpKPtuV3UfC23aVRvnj2vO
mCtf6asva561Tp90Hw19r6s6T4zKBn1v3tVe4hd8j33tKS4Pf5l3TPjNQ1eM
S4b/QWjXUcWIxIaeCu02Khn+6WHNFTK8OfPHUY2RsXkidOW42tTWD/taq9cL
dX2t2a79WnuWvsbgqnHVofuj0NXjkuF/HLpmXDL8FqHVprWntJdcLbT1uPZM
9kqL9rXX+ajv8L72PNuMS0fZYn29S18bOrWrd+qxfKihD9kbho4Kf2To/eE/
EHpN+BVDJ0f3lK5iiGKJx6jbFf8/oaO7kp2V52Pr0KVibPm/7Ljq0D2uK92l
Q0d1VUdfR4Te11efbDk69MG+bDpuXDaybd3Q8eOS4T/c17Xo67JBXdMr7L3C
XyJm1dVeRNnlg9qTXDEp3h7YXnj5lC8XOqErP/oPcy9/ELo89/KKYe0NxCrF
OO0RTqQb+kj6Xs89G1UdulcOq4yNbKPDl8lHyTfJp7n6uPbeV7K5q7FdIfTn
rsb41eOyiS18+/uH3y+0Stp6e2jf8PuE3hr+baHPxL5Ph9YMv1bosJT9KbR6
+PeEDh+XDL9G6FPT8j3zQb83/w9N2SGh1eyd++pLH9rWp7boKNPmJ/mCfYOG
f0PoE+G3F8tMe6/L/92ju5s5Zq71xe8aek1fss9Oy2a2rt3XXHilOdfVnHAv
zCFzxz1xbWxmq2s0VsbI2BizPcPvEXpTylbuiz8/9d/Yl4ytbGQbm5W5BrbT
MZZ7h97S15juNa42tfXm0FfH5U+/PvSM9+G47t1VoWvtOfL/Gnzoga6+xcQf
bhrUN5lvG/73Wwf1jbPTuPh/hJbva22ie/Og1qjrJsXz13uOPQvu1T8H9UzY
m90d/p5B7dFuj/5dLV6wQfRPGpcu2fopv3FSfblHxuGW/L+jxR+M60HRv31Q
snf1NRbuJZkx8W3LF3LaoL5xxd7EWvYaVAyOr52vW4yez12sdLfwuw8qZnrS
tGJCYkGLjSt2yHe0y6BiiGKPdPcYVAzy0lH5fs4MrZ7+zoy9pw/KJ8SPw1fE
FjI+I7FVbfFB8kX+a1zx+0dC+6Xs8XHxYuKH5v9d+f+vQfmsduxrr6evswa1
57OXOyf8Xwa1p7toUrw9kn3PeZPStae3t7f3tnc6b1B7cHsze31t2KPNb/88
KB8mX+bHxhW/MWf+aX85qbkknrNu2ls85RcPag07yB4o/y8YVBt/yP+Dx3XP
3KtVQzP214PS+UVX70K2nD+od6J3zf3m5qDeObeOCx9iDLZz/en/hhYv857y
bWBu3Tuob4SnR9XWX0M/Snt3TarMHt6+/f5JtQ1v8hXfUZN6FsSfPmxfP65n
Rx+z+lpb+WT5Yq2x3sX3DcpG72SxVXOLD1GM9YBxrYHWvnf0tVYZA9duzVrX
u8EzZOy7GkNjaYxvyf8PeZeEbgh/Y1e6ZHh1lH2AjV3prBn+vZ7x8FfZY4T/
RmhgrEOfD/+50EP2NqENwn/WmNoLddXW+60ZXbUpTntO7Lk1/D+6KrOGWDvo
rDWuPvV1tT16+P91D8LfG/pE+I+H7gp/d1cxYHHf28Lfbn0M/yljGP7+rmzd
JPSfrmxWpk1t0WGrNctaxea1x2WDvq/pylZjaOzYrC/XwHZ9so1NbGEj28xp
c5mN3x7XPXev5wp9Z1wy/Nx9xW3Fdh+3V+sqriuO+2T4p7qK8ZLhn+7qXqzh
ndnVPcG/J3R5VzK8d6p3KZk109ppzbUH+lXKfhl6SfjF++LtieyFyPTNJraw
4evhvxZ6Nvxzrn9a8/gxe9PQF8Y1B9z7R+xRw28aekHaGvb1DHmWvAPs+b6X
su+G5gk/b1+6ZHh13KuNQ//u6p7RNWbGSh1lbGILnS+OywZ9P9qVbZ417yg2
st07y7vKNZir5qi5ac6K65tD5s4dXcX4yfB3hnYe1zvKu+nVfb1TvFu8cz6V
/0/ZG9sj2SuFnhnVGmFt+LH+plWH7qf78s2Q4floTk/bp5nj9hJ9tWXPbq+u
zVNSdrI5lbKP96V7qjnXV50XGDv3NLq/Cs0a1xpo7dsyNLe5Ftoq/NahecYl
w28Tenn4l40LF3d4V3sPe0Z7RXsQe5VdQiv2tWf5T2z7t2+wlP3MnmNc71jv
1o/2VfZc6Cdd6QzGVYfuz7uylQ36ZjPb2MxWNj47qjE0dlt01RYZXpvGQp/6
MibGwhgZG2PSh+9C20d3h9B84WeHdg7/x9BoXDrKdgyNxyXD7xRaMPwCoV3D
79ZVXTrKtDENv1Boj/B7hibjqkN3d32Ma86YKyv0NXZkeGOobe9A7z59aEsb
6mrzwHGt8db2d4YWHlef+tqrq2vzDvTuc41wJS8K7Rt+v672FWT4/bvaY5Dh
D+gK70KGP7ArDAosyt7h9+mqLTK8Ns2NpcaFmTRHlhjXO9m7+ODQS8MvGTok
/KFd6ZLh1VGmDl06sDDHT6sfdt7n/TkpP9dGrQxG5oXtunZp7y97AngIMW2x
bTgGuAR4iava9wN8AAwD3IIYNtyGGLZYNlwGLCIeVgJGg2yL9h0CxwH7oQ8y
vL7hT+1NvD/F78XYxdphEmAT9AmbsFKzRVzdvg+GApZCjJ0MD2uxTdrcclbt
f+DrYNpg22DU4NLg9mD5YNhg2WD4yPCwea5tDu7TNcIViMPDwMLCisu7ZtcK
KwvjwYYV23cXHAcZ3rcY28nwrkFb2lB3lfadZkyNJZyLsSLDGzN+d756PnS+
9Fua30YMSixKzOu+5sfhZxITu7/5ofhZ+Avsz+3pH2o+mQebH4YfQV2xMj4g
bdzc/D5iXvoQYxZrhqM9bFIxaTL84ZOKn93R9u+3NR8SX9IuzY9hrOEq4SCN
+Rwbdm62ibmJvcE5wSeJq4m1HZm2jwrdlzl6r2fcsx56IPz91g/7/r50xerg
ftXhj7urfb/wj4jRaVNbR0/KB8YXJq44J+4nrghjxQbXQEeZa6NrzI21Ooe1
71nXzHb7SmNiLPjxXSvcKMyna4ZZ9N3huwE2Ey4Q1hDmD/YP5gGu4Hf2EdPi
YQ1+Oy0ZXbhFGEJ18LCMMIhkcJawlzCQcFDwkZe0/Tw8Iswm7CaMIqziGu2Z
8CyQwSiyiS1wh3AUbGLLH6aFqSDDbz8tDBAZfodp4RphIWEkYCXgFuEYYTJg
M+Aa6SiD9YAn4g/hI4FvhDP13ea7DA4U5pJNbIGFpKPNJVpda4K1iE/DWgGH
BPfkuxDuhk18Lfr4arPNd6N9PhvhNI2ZsYIdM3ZwrnCoxnDtZhNbyOBc4Xa3
TLtbTWtNgXvdelprDZ6OMjJjbOx9Uxl7a5k11VpqTYPbhcOFsYW1xcPm+o4l
g9n1XQnb8vNp4YbJ8L+Yli1keDZZ27SpLWucuWfOmWvmoLUcNgsuyZoOJwtn
+yvr/rRwt76D4Rp/Oa05Y4z6Npc2bmNsbLVh7sE9+i43B2EwYDF8A+/e1z1z
b/nI3EuYPNi839g3TqtvfeqLDdtNy39nzq7fdNnINnXWb21s23QPaf4fPgb+
LxgauBPfefxieFgU33xkMF1wWTCn8Ikw8nCDcGJwZDBgcFcw5HBv8DK+H+1v
d2+6sIYwZerAi13bvqflS9xpL2u/kGvfvi/+9tDv+5J5p3mHeHd418G56VNf
cGkwb2R4uBo4OTI8rA2cHBkejmfPtv9mg2uDcYN1kydwwKT8g8bm1kHhjdgo
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
eUHyfuR1yfWSkyQPSc4AHLicKDI8bLg8A7khckzkmtCVByTnQB083ImcBDKY
EzgSc9bcVQabIsfknNbmYjP1zOpL3oI+tC0PRl9wl3By+pRv85KZqgOfLo9G
HgwMN9z2Zk2Gh+Xm4+Xr5YPnV+ZzJsPzNfPBk+H54q1N1iBrjzWKrbA1cKBs
5ifmF+bH5svnMybDi33cHFoyti0xU/hxfmc6ysQdtm0yvFgEPzPfNZ803/SG
bQxcu1wgOHwyvNwi10x2cRsL+Xrzp6/5Ziq/C84JjunSjPVl08I8kV3WniuY
eDgpuFl5i+Y8HWWeBTlOdJRt0eaguamPRdpckdclB9Cc0ac59LNmi77NMXOL
DXS1qS11rJVwunC41kzz0FoExwW7L+9J3tI9DbchL0mekpyBK9o9Nbaesc1a
mVwmuEY65oI8Jhh/c0JbcqHunlSbyrSpLTpytuRpeYY9r3ThMOEu727Pt2fZ
nKMrJ4uNbIMtgQmCDfrnpHL5rEWwcTCH1iRrmjVprbbWwU++YKbWPPg/MVRx
U2cMOWvI+Ttih2KC27UysVXnFNF5XAxhUvtse2/8Y5PaZ5PdxuZJYb5hv2+d
FAYZ9hi2WxkZns4dk8I0w5DBjYmrirU6N8k5S/oWZ3VGEhvELMUunSnkbCFx
SjK8c4SenNSZWN9t3ynPhH96Ut8ZvkuenZQMv3nrS6zXGU36vDllN00KR/7J
1jeb2MIG51GIfYtxi3WLkbJB384d2rbJ8M4igiGAJXBmh3M6jCkdZcbaumwt
h2OUy3HnpMbEWMDS3dDWeWVyW/Up9u9MDLbgYQOci0GGhx1wRgYZvw0/DQw9
LD2fBt8GnwrfCp8OHWVyE+jy7chJUMce2z4apgq2Sn4IXxUf1RlNl18Kjl8d
Mm2u2HSN/VOT+sZzD+5tz4GcP5ioe9o8lxdIhjf3YY3JzGtjYizkfro3MO6w
7e7RQ+H/NakYmljag+EfmFQMTSztkUmdWeAb2Xfxo5OS4X0X0oVpFsNTR1va
UPfrbSzdQ/fOmJrr2lDXnPfMwBrAPHmWXKs5aO655n9P6kw3+257fc8c7O06
7VnEwwLDKJPh4V7hlMngeOFu4TrhUOXAyoWVty2XWxlsLswnHZhfdejCjcL8
wv7CaV89qT2Qs5f6mdobwRCrQxfWVFtwvXDD2rR3gn11DpM9lL7lAcsDZ4Mc
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
gM3/D+WNxgU=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwlkb0vQ3EUhg8iwb2LHxEVw20s3awGItGKgYVYbCJRkZQahH+AyVAm0i5a
sXSgJSK+oumHSIsmiKWLkDCIa3KtnuQMT3Lu85775uRe/0x0YrFeRLqhES6b
RC4gbUROCfbaRf5aRLLMa5BgZ4i8aouUeZ4nXyFfhYzFu7g+XGeziA+W8FH4
Mrr/ShZj74y5l/mbLhc26LvBTeEc9v3gsHeMc3ARdhZgGB+CN/puyWpkYfws
pIzux3CPzNfMSfC4eY5bDmx9Z5p8lI4xCOOKuEncLzseJPBx8Oi4I3sn6+LZ
BzWjdz7jiuwW4AmXx+VwhudWODf6LQ5xW9y2Cfu4E1wc59ravcycpDcFDW0i
D7gMBOpESriIpf8hwF6ejgL80O/Ci9HbK2RV9q6Yg8xBshAM2nrXOK7McwUG
oB9KRvePyD7p/ICs0f+Sxo1YemsP8zbZDnTQl8Otwz3fdJeefzunWdo=
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.560181, 0.691569, 0.194885], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJwt1XmQj3UcB/DfOhJ5fj/s7yd0LSZXI7kKK8mGrMJaYosOXcpVSHfpmO5J
qdaRdeSoiWpialJm0rWVCd1pIg1KqMnqsB1Lr+98949nvq95/z6/7/N9vs/n
eZ7WE6aNnFonlUptcNR19M6lUkcF32dSqb+TVOqCPEeTVKpEXl9BMR+QF8uL
eA8P4b48TE09Nb15KNflDrxVzSA1p/E7fB635je5iFvx7dyHdztvv1xcTBWv
lPeXH6tmDZ/LGW7o9wn8qbV+LR/M3eRF/pvnt3r8hPxs+V/mmcf9uIbv5ULe
z4PV11HfXH0j49Xyz8P1G+9y/Ou4Rv1Z4Vzqv0ynUkv5C/WHeSVX8T5ezj/x
Q+qn8D71K/hGrivfpeY53slz5FP5oJq1PIPT8nbW85/zL5OfLu8iX8hF3I1f
4QI+nZ/i9tyZH+Ma42zH+44p8l7Gb+Ql3IM3cHfzHzH/Jh4r7yl/j/tyV36B
O6upUfM6p6z5QnmptU3my3gaX82X86zQA9k4Z71815yN+9+Q92bjfWzAP2Zj
X9XnB8x/vHxEfrzWM8yz1VghbykfI5/NzUO/8e/Z2Ff5/Es23q/G/Fs29liG
a7gxn8zdm5kvrNkae/CnPJYXmLOFmtJwXvXH8UmcJ09zGz4qT7ggP+5Bd//9
zHg4G/v/eHmhOf+Sn2rs46jmjsYJuTjnS/ZkYi6u5x3+yrmnqfmWt/MN/ANP
rz3vXv4wHXtmM8/gK/hOnpKL6/mS+znHofC8GMvlbeUXW09FEuf8z/3a77/T
+YD6jTyZK3lcLvb3Ai6XXyNfwhV8La/iqnTsw0Ohh/kqnsujc/F5u59Xy6+T
r+O1fD2/yffwlfwod7O+TdxHNiSJ87xsbT2SeF0LeCPfxC3Vl6kbxw39bxRf
wvX5KzW3cCc1R9OxPiffL7+dC+XD5RdznnxW7f1tykeT+PwOVfMw9+Vj7NVM
7p0X+/AQD+UsNzDPMB7EO+TncxMulpeFvW2aSn0kH8iJfDGfE95LvI4HcCO+
jM/Mi89CcRL7J/RR6Pc9XGAcaM6xfNicXXgU7+IBSdzD5+1PeRJ75k/eabw7
rCH0Te0zHp715n67zdjO9WYyca8K+AS+M7xvuUUm7lUHXp3E3mgQ7lcSe2OX
38cksR/e4v7WMyb0gPUU8kX8K/fk0fwzd+RS3s71/WcWn2D+8fLxYX+axef4
D25jnJzEntmqNt9xK7dV86D6Z/gR63mVn+W1vIjn82KezU/zfXwrP8V38CSe
yzfxMzyP5/PjXM5P8ou8kNeE5y6J5+3Ku5O4b704Scf9LOM3eBGv52PScc9H
8m3qJ/EOa780ic/Lu1yYxG/QUt7CN3N79Uf8dxVXh/ekfCJ/rGZGEp+Xr3l5
eB/xSjXr5TNDb4f3QBL3s4DfVlPBG7k6ifd0CKflw/kj+19a+56s5BPlJaHn
9d6cdPyWhWc+xyPC/qs5yCvCt888bXlkWI+8khfzB/LveBlv4xFJnOe18C1L
x2sJ78xGmXi9o7hdEr8Fc2Wb1SzhT8L7RH4HD+BL1P1T25PnOKrCc2fcko7f
wVP8vj4d9zm8w6vTcU9KeHc6fkNb81hHZegrWatMnL+TeXo6tnEzWZmabzjN
/wNwiB39
            "]], 
           Polygon3DBox[CompressedData["
1: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
M/wZod3Cv3tU/Omhd41Kdlr4U0NvD/+OUek6K/SeUem8IXN7QeZ7tcz3O0dV
Ridd6mjrX6G3jKrNE8L/LbRL+F1DJ45Lhn996Pjwx4V2Cr/zqOqS4f3mvPDn
ht4ffvdR9c2YjEUf/z4unXS9YVS25euhZUZlYz6Ts/jpSe05e2/R7O1/ZwyP
puyxUfn+ZHhvgK2HsvFs+yKhbYaS4RcNbTuUDP+kvnS5k93FdLqr7Tl7zZ19
ePjDQoek7qGh7w31RvM2O4hPzpfIfL4z8/md/H3wUDL8d0OHDCXDf4+OoWT4
g/vSTYbXxhFDtamtw9QZlw1lO18xqrU5KfTmUa2Rubkx7W/b1RxdkbLLQx9O
2b6hK8clw38kdGn4S0IfCr936OLwF4X2Cv/B0AXZu+eHloqupfvSdVlon1Hp
vDD8BaEPhN9zVGV00qXOX8MfG9oh/I7mL/xhodXCrz6qvU6Gt+cPDX9I6JXh
Vx1VXTK839DlTnGX0OnusCfsBXeIufhn6E2jmhNj0Ud9M6YF45oDY/+o882X
Dj2W3z7el+1mU9gSNvz8ce1Ze3UP+jIXF4aWSdmyoX+Ma8/aq28MXRX+icz/
fuE/Pqq5ocNvzdFDdIceyW8f7Yt/IPTfvmR+e2P238dGpUPZ/aGH+6qDvy/0
n75k+mKNrI0++e1F0bFmVzqMTZvaMkZv7BdkP97c1dv7hKH54Hzxvu6Gp4R+
Oao7gl/GdxvNxGWaKR+NDD+eKT+aDM+P5ieT4TdLW9eN6l22ZfitJuWz892f
mvqLz9S7zVtuOvzMTPmV6ihbYqb8Sr7nxvntJqFnZC6fHloud+fy09XPX4zq
TTA0v9pZnWl+6e/aucXzVTeNjiszPx/qyl+lmx+70aTagIO8NWVPSf+3n9Sb
zNtsSF/mha4f1ZiMZetJ+aj8Sm9Qb1F+Or98xean8tnJXtz8UP75R6J/367e
D94N5sxcbT4pn53vvlrqrT7U3OiDts2RNq9J/z/aVV9uDt00qjeZt5n7ZT9r
H7ot8hvZ+FG9Kb3ryG4d1R2kLv6WUb25yG5pOukiu6np8FttnN36rK9bTGqu
3cXT7Z1gTq2ZtTLX/GR+7vHt3uAHkv2t3RvOMdkJze4702QntnO1YzvneGfN
fbZbxvaurs6be8Vd889mB3dpspPaveVe2qXZSXeZvvC9j2v3kntGnZPbPeQc
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
ftTVnpFfACdiyzfuKk7hXeJt+cqUrdrXXvROWa2vPXmfPddXDEksyV63x+1t
e94c3xtdy7S591s66aLDWlgDc29NNs9vN5upuKM43Nbht5qpvAm5K/LvYNNi
LuIB4gL2tL0st26LmdLht2J5W86UDC/vgi4y/Ofb2Lz1t+9qjMs3m81WszHW
557Q+n35Miuo01cOqFxQOZPyJDdu51xeMBne2bd27mh3szW0j+3tf+e3/5lX
Oul+MPxD8ypnWV7xds7UpHTLu9yozSteLuaGzY7AsGBZMAZYw4qtjwtaHpM4
tNi0nGW5y2LSZHi50vKT5NbJ6xK/k0Msl1hOsjxjeZtkeLnH8iwX5iHLE5Zz
SYaXOyynV16pPGS50GwG23FgV/nQ8oDFxLZvtkTb8qxubHm7cpblLu+csl0m
pUuuqpxmOsXd5VbJU5W7qkzeq7zu2VzvvnT4rbblyemjvsl1ln/9na5smvy5
2Xh7VzL52GR+s7CuPGu52XKg5Tnrm7zxnSbVR7y85h0nJYMxwhphjLBGmDsc
+dSGU5rzT6Xsk12thXwB/Ce6yi9G8gzkECiTkymPcpvo3nZSOWZyzeTkys1V
V26CHAS/wcszkKNAhpd7ICeNDA4LRz2/xXlhprDTcxvu4A3gLSCnTW7bau3c
39ry5B9p7wRldN4V2Z3zyifnp8qz5HPxteR6ykshw8sNlaNChpd7OrQ5Oq3h
vOIaZKc3HFmMg+yMhiPD4cnObDiyPU+GdxbsdXvE3rDnjQ22fE7DFddodkve
/x0NpzYH57W8BHN8Xfbrx7uae3mtcl3nN7/TWrhT3CXWxN0i75XP6Y55oP1m
0vxQe9WaWSt7dr92Bux9e8belactT94eltNvz9lrcut3cRbYmNjGp05XDrdc
bjn28upfH37X0OIpW2K6vqHwLYWcb7nf8u0PyFi+3dX3CZuHNgs9lrE+Htqi
yfBPzKu3kdyHS1relnvVXfuwvTGv7lgy/COhqbR5Byw9tGXTvWno0XnVBpsi
N0AOJFvjuw591De56rs1GV4uu+8uyPDy1PcKv2df31js3chY9u+q7AOhPfr6
JsR3G7uHf39f35X4jgT/vr6+MSG7e17tWXvV2+rNoTfZgxnHMF1jZaPZZmNW
9kZnePp/de7h33f1W3Pq24+PtbnGG4O+k1kba2jtrNGerc/6akz6rs/6agza
ekNoNF1tmlNr9ESb663Db9UXbj2nrfnd6ct5Xe0FMTGxv4O7ipX5jsOespd8
u+H7AmXf6yr/R56Rb0HelL345kl9A+K7D9+IyEPytvRtgxx9b0w2Uh1ls7az
r1wk30D47kFekTwj3wX4duFrrQ/appOtl1t7Q8sjlqdEh9/6TkKeEhnedwV0
keHp1GdtHNPGsmO7R/iivjN4S/i75pRNlz/lmxTfprw+8jc0P5TfuWjm7UnT
5XeS4RebLtvA5rF1bMQ2fc25uZ47XX6l36j75OnKw3PnumvlDmvLtzJytLRp
rL4Tub7lMbsT3YXOpLvyoLYG5l7frYXvat44qTX5dhuDvpM5c7fnt2d1dRbZ
DjaBLWBDtu2rz/q6yHT5FvY57ICPsVOzO+bKdxN8DL6GGKf4xJmRHQkL6ApP
F2MQaxBbFjsWE4Dzz2LYQ+Hg4gizmPxQvDqzMYihcG91lJ0+FAZOhj9jqDbI
8No+oy9c/9zw54WuCX+1+Qt/gzp91VF2fuisvmT4Cxod1dUYlO3pbTmnZBfm
73NCZ/f1hvaWhrOLG23e/MTLwl8aujJ6FgyV5yC3Rrx0Ic6Oh1nCca9K3QWh
a1P3uqH6SobX58v70knXVe7jdvfzAa7pKo4hDnB2ys4Z6s0p9rv83HqLinfK
v3Efib9e0ZdOuq4eyoc/OmU/6Mq315crQ9cM1adHmm+hzau7utv8fVVoubmV
9+QtqQ3xVHMhlrZZ86P1TazirKH6KG9BLoecDnFpduoN4d8Yektf945YifjH
B5uebbrKIeTT84PE1rfu/ncv49XRrrf2h5p/781tnXZveATMQz9g/2TW0Tsc
HiGG6x0CC9qz4RMwIfMALya73loMhW+QmSd5CvBTeJ5YFr96y65yALzJxWDs
kS3au4HftUVXdfjh8pTlRm7X1buAX+/tv3NX96A3+eld5ch5q/OVdugqBshn
coad5efPrbfsZLreN+ZYnoh7lC4xSnYfdmHu5dzAMLxxz83fz5tbb19+wuu7
WhP3CL9ls66+AYHJ8Ot8C2IM/Ej3otisNeM3eNcYixiob9x8q+VtpM9rNbvp
7a6NndtZuSR0xVBn5jz9Cb0/fdl9UmUX27ND1bm6nQNvUPv1xnaub9ZW29cL
2rlXx/5WR9mt7Rxd2c6ZOtbYWtsDcJlrG44lDiRuBIewR2bfqH1hHLCO2Tdz
X7nzi9n305VDD/9QZ/bN3JcPL1dBXiTfHg5AJ11y4vlIfKUV2j1wXTt3Nxhb
swv2oL1HdkOzCzf1NWa/tYfsHToeb5gsLPbIFmcQ9zi0xVbEHMjwh7c4jLjG
IS3u8kSLU/jtbB7EpOZoFrPqK14jLiOv4ZgWpxGHkdMgt+H6Zsf0XR+vazi4
uRSLg5nCTm/sCq8UR4PZw+rF4ujSB23TqS1t0K3Nfm71aRYjMgdDyWYxlr7W
hmwWU+nrzDv7zuxFfWGeZBe1fSUH3h3s7vWd2EX57YVD7Tt78+KhZJc2O+zN
8fFm77xFLmj3yAV93Q9iJWI6YjliJtq4qNkNexgWwId0p7pbz+9rz9vre0xK
Dxn+A5PSSYZ3F9n/bPX3u7LlsGnfMPl2CUYNR2HL2EA5uZcaS7tHrmj33Ozd
1/Se0+zyOe3c4Wdtdbvr9Fnfr2x3wxVtHAvaPXVlO5d4Z+rMdi+7U92f2jaH
l7V7x1mRwyZ37Tntm5P72c+uvkXRt3ObHdDHc9u9dm6bp9Obn+COd4/DncVW
xGXFba9pcRa8M3xG8xvU1aed2zub7+LbT36IeIw7wT3lXeTuEYOHM4gHijHC
Td2n4uNyLR7sKj+EzF0rZqguDBgWLI9kelxn9vp2r4g1wOh8J24fwIbE2fkE
fAHxxlubHYOrwk9hdbA0ORMwO3mzcic27f733RqejfbOlLfC5+BriOMv2/Is
8foOs2b35WDKc9EX303f3XCqPrJLulqTpVqOoTvbXS2X7KZml5y5vSblm7Lz
17U8hJvbud9rIS7c7BTemO5vdhTW90CzE+bI3NApr07ene+cfUvtG1/3xp3t
3fWM9OXp02V3n9Lsrj7qm1y457Z9hZdrZy2M2VitibG7+/hk5mCpZrfVNXZz
oc272jmV46dP+uJbcPkifFs5kO9rfZUX6JtsfZafwh+CsW/dMBfvfN+B+Bac
TK72mq0uXi66HBcy82Tubm73jPxYuc2+8fStJz/eu8A3G77TUCZX2zei6izE
NGGZsM5dGw7mm09Y/C4Nd7L3yXzP4S3nzeP9wIeXa7TU3PLt9fkTze8zFn3Y
t/kP+vZAu8espW8H3tTeGb4Z8e2IOeL7n9TmTo6mOTWXvs1/c3unqOu7kre0
d+ThrW/qyB2Vk/quNtdyMX1zb87lkMolnc1RGqotuayzOTND9cWcmSt92rPZ
VXbp0kZsKR9/z+Zz8D0ubHYfpnpbVzHoDZpdVueiZte0pQ+zOT1D6Vbn4mZ3
5QmLrfMR5bX6jmP227ChvoPgk8uNlJO4QsMH4ARvS5239/Um9za/q6v3ojc9
n5mv/Na+ZN6Su7a6i7V3KcyAzHcYfNAtGw7umw3faYg5bdfiUnxlPuMTfcWh
yPBT44pJkeG7cfkyMEDYH58G7i72MSdlc8eFwZPhFxkXxgHrgDEs0TAoPibf
ElaxeJPhYSXLtD7rK+xebrKc4Xe3dYWjyteQv+KdLM9YPNAcy8t2L5zW7jV3
BxxaPNRv4LBwBvFVOfJwCXPFJ+WLmjM4hTL59P5PAT4kP5HfxY8ctzUw9wvX
6IKuMJ2h4SnGZCzGzsfh65zSVayWTRcb8+Zi658zU22JZ/q/JXzz47sYcQ3x
jiXdDdN1Z7o7n2i4mze6t7qYy+y3nUPFYvhXfBq+jFg1W0mH37KZdHkjLNru
YRibN4K3AZzCdzm++xHTEld5vOFwyrZpbc1+izRUm8+Mrvv0v6v1tk/snUnr
d9dkT2v9mNP20ZLNjtsnZHi2fZG2j/B0P9b6pC/mBJ4FK4RhwDJgy+Iu3hkw
Znub37NNi6s+2PIexPzE+fByIcQEyR5quIYy7ye4nTeYtxcs8r8Nx4NxwtFg
aNbA3G/Xly65JGKOdD7c4jJ+u3mrc05XGKffasNbjU3R9tyGw4lximMu0nAi
vDikMliduKc6jzQcVV/Mxf8DbUNJfA==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl0TFI1GEYx/HH68JET+/u9TSFSMPAaCqLyMLGoKHBCwobDAOdqi1oCAyi
oaYEg4aGoFq0sabaoqDFG8QiGioEGyyQdDGxPvIOX97n/3t/z+957r3+iRuj
1wsR0YfdGG6POInVSsTPpoij1Yjnvp9hX4po3RUxUeMpRxTVfzojVkq8OMQ7
iN6OiK96h9W3ePv5ThjygrYt567eFlqDdpV2h3aY97b6B23Q3WWzxvCLVnQ3
K+cRKuq97h+rm8wpoJOWUFQv8p9RvyznXbfsNyd/Hk/db8lfwBG+03Z+73d2
8U3Lq/IkNLCAPvNL7q65++t7E/WU59+kfZS3LWvZjElZU1gs555/tCX+T+i1
Tw9a+JfMHVF38RX4Vvne6HuL7/iGlPLbnjfjAvar3+mbRkleG1pxLuXd6zyv
9b1CW8q5Z2l1ntH2/H477zjkrNqhggPqDdpx5yWei9ij/k075nwg6z6a5YW8
EXkH6QPo1v+F79TO/63vg3oZ3Xz3+K7oG0cx5fcZquW5n3nW0cP3hLbWkbNX
vMFD/hn8BxzGTTI=
            "]], 
           
           Polygon3DBox[{{3854, 3853, 4951, 793, 802, 4953}, {3618, 3617, 
            4944, 791, 800, 4952}}]}], Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        GrayLevel[1], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJwtk0lPU1EYhk9vlWGht6f0GsDSRGWWAiqWkjAsFDfiBtxQZChGhpBQN4JK
MFEQURQwJC50oRhJGBQRUBwQlcSf4D9wZdyxQhLhOfnu4rvfc977nu/MR9oT
9b2WUqqR8BLJfB54lPqDOOAolUb7rFaq1K9UPtoMfNFW6j6eijSl2uExOIbe
ZEvfBvgCPArXwQeoo6kTxj/vcg56EM9tPHlwDTwCn8JTCA/BxXA3/BCugW/B
E3ACfwnzKWI+z+AUavqomY8nim6jt/iorWVul+FpPEl4muEhLTWvwOX49+PP
pK/D/2/oO7SvMtYjOI63Hx6Hu7T4jL+IfsfQ75h5ot+kvp/+p+E4+jp6gPYa
7SX4ELkO/ZNH9rMc/uAR/wlqhfDuo8YG7XfoWeRXxBs4lfyTWIaztdQ19f8x
jxu073lkXUepuQLnokXhu3AV7KWuTZ9s5r5E+62ZG/kxMQtv0zeBfwNuQ3tO
vIaTyE+JBdgiPyHm4f/4z9kybq3RiEX4oFkL+jAcgceJSbgX/5iWs+uBR7W7
n/AUPGf23HjouwlfQ+uCv8KNcIT98bLWDjwpXjmXv7QH8XyHO/EU4ylDm4Rj
6F/Q6+EcR861lrVXo6+hV6I3wJ/h83C6e8+jeAa13O04Y21R7xd83PTH/xE+
w/8wY0X4NwFXwiXwLv6QI2dTTZ0q9EL4JdqMu//J+Iep88PsCex378xJ/AXo
q+hh9AEtb6eVmpmW3LHD5J2ArD+Iv0/LPsfwVDBWLvoL6m0H5A1n4Em35B1l
kIOWvLUsciljvYfLqHFdy7u75JP3oc1bIPdruT9N6LPu+3LQfvM/ROTR3gPb
B3LW
            "]], 
           Polygon3DBox[CompressedData["
1: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
/wXABdIt
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtkb8vA2EYx796/UUid9fXJW01aOISErQkqIStnZjsSAxsuhKxtBaJAbGp
RCsVMTAxWvhTxCD+AQx8Lq/hk3ue7/P9Pve+d8XN+upOTFIOEnDuS2WExYz0
6yHQh+A7Un8gjbhSEXJGSqF94D3qkQ7wBOChpfE9Uj9BA5J45tmXJzMIV8zf
0ZrksjwXmJ3hm6Feou4wv4Y13p9kXx48Znt4CuTT9J/0x+SbaIcQp58ju0Vm
G2r4Anw/6M/46q7NR3sq+NbxbMAXzKJNoZ0wP4UUuGQdztCm7sAuZPD5MXum
NrMqmqHOUi+zfwVC3hvimWZfHD0R2DtHd59AK+D/HpBeyb7ApLHf9g5fH/04
2TK+LvUNOJEHrYR2Qd2KPGSG0YbgDXrJPqDfw5ix/+AW7fLfP2rsfbpoNc5Y
hYqxZ99H+wMBGTFf
            "]]}], Lighting -> {{"Ambient", 
            GrayLevel[0.8]}}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0vsvlmEAx+HbISqR6ICkUA6Vc5I1a2bWWmstZipSRM6HHCoqlGOo5NTP
/Wkq/Buud/PDtc/z3b09z957b3bHcMNQVAjhD9FEnitiQrhFJbep4g7VVDj/
FRvCBptssc0Ov+ly/oZuemj20l7to5+n9oAOMsQze1hHeMtze1THGKfFntB3
vKfV/qCTTPHC/qif+EybPa0zzPLS/qJfmeOVPa8LLNJuL+ky3+iwV3SVNV7b
3/UHP+m01yN3wAZd9qZusc0OB8dC2GeP//zjL7t0Rr7jnpZZYpEF5pmj3HkZ
pZTQ5P3FWsRNGu0bep1CntgFmk8ej+1repVcHtk5ms0VHtqXNYtLPLAz9SIZ
3LfTNY0L1Nvn9RxnqbNTNYUz1NrJepok7tmJeooEauyTeoLj3LXjNQ7XEapt
PzvEHP3/DgFUPDov
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0v0yVGEAx/GHkl1UKCmpkJToRe6kS3ABuoKEjGkkZEy0lTa7i/X+VohK
keoaknQbvX92xh+f+c13nplzzpxzKptu3WzOCiG8YIhBrkRCuMo1rtPADRr5
4vx+NIRuHtBDL3085Jfz3/zhLyPZIfyzwU2ySOhse4CDJHWOPUQuKR2xUfIY
1fm2gMOM6SP2KIWM6yJbzDHS+rgt4QQTutSe5BSTusyeppwpfcae5RzTusJW
UsWMPm+rucCsrrEXucScrrWXqaOeH3kh7PGdXb6xw1d+ehV3vad22mjlDi3c
5rPzT2zzkbjrb9lNPjCs39sN3vFUv7VvWCem1+xrVjPfVK/YZV7xSL+0Sywy
oBfsPHP061k7wzR9espOMkGPTttxxujWozZFki6dyHz3/X/qno7b55lnp1M/
yzw3T+jQMft4///7D87DUmQ=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0llXjlEYBuCdjnPADyCxlJQhY6hkzCxzyBKHVPwTVOYx+h+Wucg8Zigz
KWRIYi3Xsxxc6973u/f3Dnt/2TV1lbUZKaXzFBoUMDYrpVzyGEc+4ylgm/ld
Q1PaTS111LOHvewzv58DNNAzJKVG2cRBevVD8jBH+Kwflcc4zhf9hDzJKb7q
p+UZmunTz8pztDBdz860zrh0WEr3Yg0lxg/kNx6yaXhKo6z7bvyIqeZ/yMf8
ZJb+RPaTZ12H/EWx60/lAM/4zWb3yrXmufEgL/hDJ3+5yAjzXfICL7nEKy6z
0e9Hmn9tfIU3XOUt13jHGPOtcrLnv5dtfOA6Hxlt/obspp1P3KTI+h5Z5Rk5
1twynuJar7wd+82d2GfustOZ7aCG7VS7tpUt8Z1xf/tbFfsX7x3voG+Q61kX
76qvlWuojG/RV8tVrIxv1lfI5SyjS18ql1ARe6cvlotYGHusL5DzmUeHXi7n
UhbnpZfG+TInzlafHecXZ8V9faacEf+N+EZ9Wpx37EPsgV4U+8qk2DN9opyQ
8f///w+PBnA+
         "]], 
        Line3DBox[CompressedData["
1:eJwl0VdSVFEUBdDbgCSJTZKcFWhAcqiCSTAEBgBj4IMcylmISM4g0Tk4EpJK
FbBu8bFqn/3ueberuxsnpyemEiGEGe7SQviurPODe31D/mSTB31LbrPDo74r
99jnST+QhxzxVz+WJ5zyTz+T5/ziv34hL7niWb+WN9zym+XCEJZYZIF55pjl
m/O14hBWWeFFf41fxj0J0khnKBlChqxJD6HT/ME8LDNlFtnkkEu1nY8yj3wK
KGTEfpGscl4sk5RQShnlVPDZ+ajdT+bKuB/vjJ9NLV+c18l6GmikiWZaqHPe
6/3WeFfcp40ez9plR7zHTkp28tXzLtkdZ8b0Htkbd+2N633mfgbinj4YfxO6
zCMyZe9P4v3/fwM0MzQq
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{51, 52, 53, 54, 570, 55, 56, 57, 572, 58, 59, 60, 574, 61, 
         62, 63, 576, 64, 65, 66, 578, 67, 68, 69, 580, 70, 71, 72, 582, 73, 
         74, 75, 584, 76, 77, 78, 586, 79, 80, 81, 588, 82, 83, 84, 590, 85, 
         86, 87, 592, 88, 89, 90, 594, 91, 92, 93, 596, 94, 95, 96, 598, 97, 
         98, 99, 100}], 
        Line3DBox[CompressedData["
1:eJwVzz0oRXEcx+Ef10sxYZBFDDIogzIoSUlKUlcpg1JuGZSXG0pRilLK3W4Z
lEFJFllkM2EQpbBICinJSwYyEI/h9HzO+fbv36keHOsZzYmItKcpEfGaH9HA
D7bymx08KItIFER06yL2soT9PLaV65Su5DBrmOaZrU5P6wbOsYmLvLS16Ixu
Z5ZdXOWVLanXdR+3OMAd3thSek8Pc59pHvLONqVP9CzPucArPtgW9a3O8JFZ
vvHRtqI/9Rp/uMG8vIgn26Yu1tss5S4r+Gzb01V6n7U8ZD1fbEe6UZ+ymRds
46vtUnfqayZ5zz5O5PrX/3u9D/GdIxwvjVh2blJ/+TbDX86zoDBiiX+YPEIQ

         "]], 
        Line3DBox[CompressedData["
1:eJwVzD0ohAEcx/E/DgMTiyyyGZThyqDkJYkouqSu3KXrROi8FEWUUmw2ZVAG
iyyy3eQ2JiZZZJGBDGQgA/kYnufze/7feppzC6lCWUQsebYTXtURG/yuiljh
BwvcqY+YrYuYtl/dJvnENLe0vJayH9yGeMc+rmtZrdO+cWvnFdu4oqW1Frvk
1swiG7mojWn19plbLU9YyXltVPutiDhy++IB3zmjDWsv9p7bI3d5zyltULu1
N92uucpL5rR+rWTPuRWZ5zkntT7t1E67HTPFQ2a1Xm3f7nfbYxd3mdF6tC07
6bbGVi5zQuvW5uwmtzwbmOF0ecQ4a3yPMMEB/lRGXPz/0/60O/jGVj4zyT9p
CzrO
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D0ohHEAx/H/CUfykjskbyEDE4ssssigDGRQslwWKc502w1XBmVQlKLU
qSuDMiiDMqhLSlLSleHKcDIweRl0i4/h6fN9/r/h+ff0Jtbn1iIhhA3PfmUI
9dEQdhjnETuY408shD59qgd5zmFesmwb1dd6nLec5AMj8RCmdUHPssgFllht
W9LvepmfXOUv62xJHapCSDHKNBvYaMvoFr3FTu6wnzHbnh7ShxzhMcfYasvp
CX3KKZ5zhu22Cz2vr7jIPBPssN3oFX3PJJ+YYpetoNO6yE2WuM1u26ve1R88
4Bez7LF96xNd5hkratyBmQp3YK33PJt4x2yzc//6Ubc5e/7/Bl84wDf+AepX
PI0=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzz8oxHEcx+Hv+dNdBkJkIImJzSKLbAZluLLJQBYDHeFSksRwdXRxoiMx
KElRyqAMSlKSMlwZrgxMZJBFBs8N1/P+fV5dd7+Wkcn4RCSEkPB5LQ+hORbC
Cxv4zGo+8LI2hFxNCLd2hds1S3nJcy2rndl/0RCO+cNDnmjrWs7+dNvkO9M8
0lLaql1wW2SeSR5oK1rCfnQb5x1HuactaUP2tdtg8f9xgDvagtZnn7r1Fn+H
3dzS5rVOe9etg1m2cUOb05rslFs9l1nFjDajxeykW4QJ/pZ5N21a+7bH3D44
zDeuaVNawY675dnPJ6a1hHZv97jdsItXnC0J4YLtnk/ZyiM28sv39u06e5uV
TDHKDP8B5K5BDA==
         "]], 
        Line3DBox[{201, 202, 203, 204, 645, 205, 206, 207, 647, 208, 209, 210,
          649, 211, 212, 213, 651, 214, 215, 216, 653, 217, 218, 219, 655, 
         220, 221, 222, 657, 223, 224, 225, 659, 226, 227, 228, 661, 229, 230,
          231, 663, 232, 233, 234, 665, 235, 236, 237, 667, 238, 239, 240, 
         669, 241, 242, 243, 671, 244, 245, 246, 673, 247, 248, 249, 250}], 
        Line3DBox[CompressedData["
1:eJwVzz0oRXEcx+EfUd4WL4MsMiiDMihJSUpSd6A7KIOSlEERRSlKGZiUoigR
Ski4pju5JiaUZJFFBjKQgQzkMZyezznf/vU/Vf0jyeGsiBj11OdFPBdE1PKN
TfxkK+fLIn50h84pjOhkIbu5YCvWvbqcA6zkEJds1XpM13KS9Zzhqq1Rz+kW
LrCdy1y3JfSaTnKbPdznlq1Xp/QA0xxihju2EX2uJ3jJad5yzzaj7/UcH//v
zhce2Bb1u17hFzf4y0Pbps7Nj9hlEY9YymNbSlfoNKuYYQ1TtjNdpy/YwCs2
88R2rdv0HRN8YJKn2f6VT977+MpB3pREdDk3rD98G+c3pxhFEbP8A6nAQSA=

         "]], 
        Line3DBox[CompressedData["
1:eJwVzT8ohHEcx/EfRf5kuW6RxUlXV64MV7rUJTGQQW5QhivqyiB/UpQynOk2
ZVAGy7lEynCDkuUsGCSLLDKQgQxkIANehqfX577vnudiU3NjszUhhAXPamMI
380hLPGDc3zlNIejIVxGQpi0n9wmeM8sB7QzbcS+dRvkNTPMaFWtx75w6+Yp
E0xrJ1qHfezWxgqjTGlHWou971bPEn8bfEOraF/2lts7N/jCLu1Qe7SLbncs
8IYJ7UC7spfdzjnPKuPannZs590qzPGAndquVrazbtsc4SY7tLK2bve5FZlm
gTFtR1uxk26L///DGbZrJS1vt7rlGOE4K7UhjLLO7yH+NIXQz0+uea/XfrNT
fGacD0zyDxdmP4E=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj0ohHEAx/H/MeDykrxkIImJRRZZZFAGZbiSRQayGOg2g5KU4YpSlKKU
4cpwdYOSFFKXyMvVDVdXTkdMWGSRwcfw9Pk+z6+n/79jeiE2HwkhxD2bVSFU
VIeQYC132MR9njSG0KqTupMpdvOI57Zefar7eclBXjNjG9ZZPco8Yyzyxjah
X/UU3znLLz7Y5vSPjjMSDWGRlczZlnSdXmUzE2xj3rahu/Q2e7jHPhZs+3pA
JznEFEf4aEvrMX3McZ5xkk+2Cz2jrzjHe8ZZsmX14v/ZXGaRa3y2Pel1/cYt
fnCXL7ZPfaC/echfpnlX5g4sr3EHRpn5f28IYcV/t7retxxbWGA7S/wDu6RF
kw==
         "]], 
        Line3DBox[CompressedData["
1:eJwNzj8ohHEcx/HfXQbnT3SJDJRis8gim0EZlJA/KYlYKJcrg6QMVwZFKUoZ
rgzKoCRlUJKSlOFycqJOKbeQlBikvIan1+f5vnvqaZhI9M1GQghznseSEGrL
Q8gyzhuW8pKLVSH8xUM4s4vcTvhXFsIh57Ufbd/+dtvlB3eY0D61TbvgtsZn
rnBae9OW7ZzbAjNMckoraDP2ldskzznKce1FG7RP3Hp4yC6Oanmtw95za2ea
rRzRnrRme8utieus55D2oNXYKbdKLjHGAe1ei9pJt9+Y/+IX+7U77d0ec3vl
MPPs07Jazu52y7CT1+zVbrULu83tlC085nk0hAM2et9jHdOs5pHvtu0Ke4PF
TDHCVf4Dt9VEwA==
         "]], 
        Line3DBox[{351, 352, 353, 354, 720, 355, 356, 357, 722, 358, 359, 360,
          724, 361, 362, 363, 726, 364, 365, 366, 728, 367, 368, 369, 730, 
         370, 371, 372, 732, 373, 374, 375, 734, 376, 377, 378, 736, 379, 380,
          381, 738, 382, 383, 384, 452}], 
        Line3DBox[CompressedData["
1:eJwVziFIg2EUhtErgqZNRRfEogYF0aAYhGFZEOYYjKGoxSCsiQabzWYTFgTD
wCAYBIOwMCxiGZYtzbQVTS5pEAyCnj98nAfecL+Zg+Py0UBEbHtLqYjqSMQc
r7jKa2a5mIm41Tl9zzzrLHHF9qh39DP3+cIK12xtfahfecIeT7lue9Nn+oPn
/OQFc7Zvfal/WePgaMQNN2zD+k6n+cAMG9y0TeonPc0m59li0bagO3qZ3eR/
fGfJltX95Da/mOcPy7aC/kuaQ+mIPaa4ZWuORUzoFqfY4Sx3xyP+AbqmL54=

         "]], 
        Line3DBox[CompressedData["
1:eJwV0D0oxAEcx+EfOW913i0ykCIpSpkYlBhQ8jIwSAw2pGwsLFKUGJRBGZRB
GWyyyHLbmc7C4i2RkkSK8hiu53u/T93/+tdOzQ3NZkXEvM9kUUSyLGKcBRxj
giPcqozIsgfsn9KIXn6xmxvau91pv7KdT2zjqnZrt9jXbGSGdVzW+sojqu20
WyVTLOKS1qPl2cMl/hz7+Z2M+KiIqNDe7S63F3bwnm9aiXZjt7pl2MQ0X7Wk
lrJr3c5ZxVM+a4XaiV3sdsR8HvBJy9f27N/iiB1+cpOPWq629v8bbiu84yIf
tIS2YF+5zfCS07zXcrQJ+8JtlGcc/H9GtvfLY9+7eMgO7rPee2mzd+1mbrOG
62zgH2H2P60=
         "]], 
        Line3DBox[{3698, 4213, 3691, 4220, 3705, 4227, 3712, 5467, 4234, 3719,
          4241, 3726, 4248, 3733, 5473, 4254, 3740, 4261, 3747, 4268, 3754, 
         5479, 4274, 3761, 4281, 3768, 4288, 3775, 5484, 4293, 3782, 4300, 
         3789, 4307, 3796, 5489, 4312, 3803, 4319, 3810, 4326, 3817, 5493, 
         4330, 3824, 4337, 3831, 4344, 3838, 5497, 4628, 4671}], 
        Line3DBox[CompressedData["
1:eJwVzT8oxHEcx+EPxeT8O0oW3UBE8q+uflluUEfqHCWLlGyKstlMLFIGZVAG
ZVAGZZBFlstypjOd5SyYGJRByWP49rz6vIdvZnVzfqMuIla8sfaIpDlivzPi
tS1iQtc4zCr7uWubS0dkdMWtm2WmWeKCvUkvtUY0sMjfVMQMi7ZvndefzPGd
CQu2F53VVY6wwgHO2sq6T5fYwzt2cdp2ozv0FVO8YCOnbGe6Xp/wpyXiiF/M
2Q70h97jG3dY46RtWz/rLT5xnY/M2tb0g17mPRd5y1FbQV/rPC///+E5B22J
PtXjPGYvDznEP6zsNJ4=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzT0ohAEcx/G/MHl3SRZRRCRydXUZGNR5qSOSxcTEQDYbC4sUpQzKoAzK
oAyyyCLLmZjOchYMIikDKR/D0+f7PL+e/s2zSxOLRREx70nWRkxWCmb5UxMx
zJ26iC89qD/Yz1emuWl70kldYBfzbOO6bSwR0aTvfGtgjrVcs43YyvR0dUQJ
x/lbEVFa7B4z3t85wBemmfXfo07pPLt5x3aO2nK6VV+zkZes55DtXCf0Kct5
/H+Lg7ZDXaT3+V0VsctPDti29Jve4DNXWWCfbUU/6GXec4G3TNnm9I2e4RWn
eMEeW1af6QxP/u/wiB22tD7QvdxjC7fZyT95yjnH
         "]], 
        Line3DBox[{4660, 3672, 5526, 4954}], 
        Line3DBox[{4661, 3858, 5533, 4951, 3853, 4638, 3848, 4632, 3842, 4625,
          5494, 3835, 4341, 3828, 4334, 3821, 4327, 5490, 3814, 4323, 3807, 
         4316, 3800, 4309, 5486, 3793, 4304, 3786, 4297, 3779, 4290, 5481, 
         3772, 4285, 3765, 4278, 3758, 4271, 5476, 3751, 4265, 3744, 4258, 
         3737, 4251, 5470, 3730, 4245, 3723, 4238, 3716, 4231, 5464, 3709, 
         4224, 3702, 4217, 3688, 4210, 3695}], 
        Line3DBox[{4666, 4649, 3865, 5535, 4647, 3863, 4644, 3860, 4641, 3856,
          5531, 4949, 3851, 4636, 3846, 4630, 3840, 5528, 4946, 3833, 4339, 
         3826, 4332, 3819, 5377, 4898, 3812, 4321, 3805, 4314, 3798, 5375, 
         4896, 3791, 4302, 3784, 4295, 3777, 780, 3770, 4283, 3763, 4276, 
         3756, 4269, 5474, 3749, 4263, 3742, 4256, 3735, 4249, 5468, 3728, 
         4243, 3721, 4236, 3714, 4229, 5462, 3707, 4222, 3700, 4215, 3686, 
         4208, 3693}], 
        Line3DBox[{4667, 4645, 3861, 4642, 3857, 5532, 4950, 3852, 4637, 3847,
          4631, 3841, 5529, 4947, 3834, 4340, 3827, 4333, 3820, 782, 3813, 
         4322, 3806, 4315, 3799, 4308, 5485, 3792, 4303, 3785, 4296, 3778, 
         4289, 5480, 3771, 4284, 3764, 4277, 3757, 4270, 5475, 3750, 4264, 
         3743, 4257, 3736, 4250, 5469, 3729, 4244, 3722, 4237, 3715, 4230, 
         5463, 3708, 4223, 3701, 4216, 3687, 4209, 3694}], 
        Line3DBox[{4670, 4634, 3844, 4627, 5496, 3837, 4343, 3830, 4336, 3823,
          4329, 5492, 3816, 4325, 3809, 4318, 3802, 4311, 5488, 3795, 4306, 
         3788, 4299, 3781, 4292, 5483, 3774, 4287, 3767, 4280, 3760, 4273, 
         5478, 3753, 4267, 3746, 4260, 3739, 4253, 5472, 3732, 4247, 3725, 
         4240, 3718, 4233, 5466, 3711, 4226, 3704, 4219, 3690, 4212, 3697}], 
        Line3DBox[{4953, 3854, 4639, 3849, 4633, 3843, 4626, 5495, 3836, 4342,
          3829, 4335, 3822, 4328, 5491, 3815, 4324, 3808, 4317, 3801, 4310, 
         5487, 3794, 4305, 3787, 4298, 3780, 4291, 5482, 3773, 4286, 3766, 
         4279, 3759, 4272, 5477, 3752, 4266, 3745, 4259, 3738, 4252, 5471, 
         3731, 4246, 3724, 4239, 3717, 4232, 5465, 3710, 4225, 3703, 4218, 
         3689, 4211, 3696}], 
        Line3DBox[{4955, 4651, 3867, 4650, 3866, 4648, 3864, 5534, 4646, 3862,
          4643, 3859, 4640, 3855, 5530, 4948, 3850, 4635, 3845, 4629, 3839, 
         5527, 4945, 3832, 4338, 3825, 4331, 3818, 5376, 4897, 3811, 4320, 
         3804, 4313, 3797, 5374, 4895, 3790, 4301, 3783, 4294, 3776, 5373, 
         4894, 3769, 4282, 3762, 4275, 3755, 5372, 4893, 3748, 4262, 3741, 
         4255, 3734, 778, 3727, 4242, 3720, 4235, 3713, 4228, 5461, 3706, 
         4221, 3699, 4214, 3685, 4207, 3692}], 
        Line3DBox[CompressedData["
1:eJwVyz0ohXEYxuHH98JyWGTBoAzKcMqgJJKI8pHUGQgdka+kKKJOKWc7mzIo
g0UW2UwsohSTLLLIQAYykAGX4e263+fXv2Z8YWA+LyIWfcmCiOeiiAa+sZmf
bONpecSP3WUXFUf0sZTDPNcS9ohdyTSrOcsrrc5eshu4yiQznM6PyLLVf46d
3GZ7ImLUu1170G2fKR6yQxvTju202wlnefb/XpvQLuwVt2tu8Jbd2qR2b2fd
HpnjC3u1ae3d3nH74h5/2a/NacWFEQduZTxiBYe0Ra3KPnGr5RnrmdKWtUb7
0q2JN2zhqLamddh3bj184CDTWkZL2U9uY3zlFGe0LW3B/nBb5jfXmVcSsck/
T3I7sg==
         "]], 
        Line3DBox[CompressedData["
1:eJwVyz0oxHEcx/Gvx5sYyCLLZVAGZbiSlKQkOuWS1A0knTw/pCiilGK7TRmU
wSKLbCYWUQqLLLLIQAYykIGX4d/r8/+++yWHZzLTBREx50sVRbyURDTwnS38
YjtPKyN+7S67tDSil2Uc4LlWaQ/a1cwxySleaXX2gt3AZaa4zlut2d6y25hn
J7d5p6XtXbuP+8zykBOFEcfM+T/hFM/+31ZEjHh3YS+5XXONd+zWRrUHe8vt
iXm+skcb1z7sHbdv7jGKIzLatJawD9zKecQq9mvzWo194lbLM9Yzqy1qjfal
WxNv2MohbUXrsO/d0nxkH3Paupa1n92G+cYxTmqb2qz96bbIH66yMBGxwT/9
4Tvv
         "]], 
        Line3DBox[CompressedData["
1:eJwNyz0ohAEcx/E/522ikEUGMijDlUFJSlKSok6SusHLcEVOR4oiSik2mzIo
g0UW2W5iEaWwXFJYZCADGcjgMzx9vs//9zyNk3OpbFFE5DztiYi30ogkP9nF
H/byrMYHZREDupwpVnKMF7ZaPa7rmWETs7y2tehFneQK27nBO1un3tY93GE/
d1mwDep9PcJDpnnMB9u4PtUZ5pnlOZ9s8/pSL/OG6yxwtjjikdveX7jDdw5V
R8z470vvuf3ygEUlEcO2OVuFPnKr4gnrOGpbsDXovFszz9nKtG3J1qav3Dp4
y25O2FZtffrebZDPHGHGtmFL61e3KX5wmrO2LVtOf7st8Y9rTJRHbPIf10A8
dA==
         "]], 
        Line3DBox[CompressedData["
1:eJwNzD0ohAEcx/G/dyYiWaQkgzIog5KUpCR1RUnqBjJcKZeXFEXUlXLblUEZ
lMEii2wmt4hSWCSF1GUgAxlI+QxPn+/z//U8zVPpkdmiiJjzdJVEvJVFdPCT
vfzhAM/qIorKI4Z1JUdZzQme2+r1pG5kii1M88rWppd0B1fZxQxvbT06q/uZ
4xB3eGdL6D09xgMmecQH26Q+0SmeMs08n2wL+kKv8JobvOOLLaMfdZYF5vjO
gm1bf+ld/nKfxaX+XRxRxUPvNTxmA8drIxZ916RP3VqZZzuTtmVbp7506+YN
+zhlW7MN6nu3BJ85xpQtY0vqV7dpfnCGs7Yt27z+dlvmH9dZWhGxyX9FNj4w

         "]], 
        Line3DBox[CompressedData["
1:eJwVzT0oRQEYx+HXd0w+ShZJyaAMynBLUpKS1E3KoAxXhlvCjVIUUbcU2y2D
MijJIotsJhZRCoukkJJEBjKQPIbT8zvvv9OpT030j+dFRMaTKIh4LYpo4Qc7
+M1uHlVF5BdH9OlSDrCcQzyxVeuUrmWaDZzkua1Jz+gWzjPBLK9s7XpVdzHH
Xq7z2pbUm3qQOxzmHm9tKX2g0zzkJI95b5vWp3qOF1ziNR9tWX2nV/nEHN/4
ZFvTn3qDP9xiQWHEs21bl+ldVnCfNXyxHeg6fchGHrOZmfyIVp55b+MlOzlS
GbHgux5945bkAweZtmVtw///dRvlO8c4YVuxTekvt1n+cpFFJRHL/AOTyUAU

         "]], 
        Line3DBox[CompressedData["
1:eJwVzj8oxHEcx+EvnZwMdIoMRDGxyCKLDMqgFGWTkiyKXNJdSpIYrqTLn+hI
DFfSFaVuUAYlKUkZlOHKwEQGWVAew/W8f59XV9/G0amByaIQwrRfOhJCtDSE
FCu4zWru86MqhDo7azcxxxae8Utrs8/tDl6yizf80Xrse7uPjxxkgYniEF44
4vuN4/zkTCyENf/7tuNuxSUhJFnGWS2tVdpLbjVMsZ4JbV1rtjfdWrnLds5p
W1qnnXXrZo69nNd2tH477zbECw5zUdvTxuxrtwneMc5l7UBL2o9uCyxw5f9N
WlZbtV/dNvjODNe0Y+3Q/nI74i9P/t+tnWp5OxL1Dpbzihktr93aMbcH1vKJ
DXzmH8P5Qc4=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzjsoxXEYx+HXLZcMbkUGMjCxyCKLDMqgJCWLpGQRyURKkhiUJJfokBhO
SYpSZ1AGJSlJGZRBGZjIIAvynOH0fP/vZzi/msGx7tGMiBj3W82OyM+NWGIR
t1jOPX6WRlTZSbuWx6znGb+1RvvcbuYlW3nDX63dvrc7+cgePjOzLKLPfrUH
+M5hfjFXG7F/7Alm5URMsSBtZkQx531XcInVnCyJWPN/dfaGWwN32MRpbVNr
sZNubTxmB2e0ba3LTrn18oL9nNN2tSH72m2Ed5zggravTdmPbrN85mL6TVpS
W7bf3Nb5wQRXtCPtwP52O+QfT9Lv1k61lJ2T5x0s5BUTWkq7tUvdHljJJ9bw
hf99kkDq
         "]], 
        Line3DBox[CompressedData["
1:eJwVzjsohnEYxuHHWQ7lNJDBYWBikUUWGZRBUUoWMciClI0iSQwKKYqQGL6S
FKW+QRmUpCRlUAZlYCKDLA6X4e36vc+9/KsGRrtGUiJizLeaHpGTFbHIQm6w
lLv8KI6o0AldwyPW8ZRftgZ9ppt4wRZe88fWpu90Bx/YzSemlUT06hfdzzcO
8ZPZtmH9rceZnhExwVzm2aZ0kZ5jGRdZyQLbsq7V66znNhs5mRrRzIT/Vh6x
ndNFEZve2amTbj08Zx9nbTu2QX3lNsxbjnPetmeb0A9uM3ziwv97bAnbkn51
W+M7t7hiO7Tt6y+3A/7y+P/NthNbUmdmewfzecktW9J2o0vc7lnOR1bzmX/Y
G0BO
         "]], 
        Line3DBox[CompressedData["
1:eJwVzz0ohAEcx/E/nZCX8pbIQAYmFllkkUEZ1A1KFt0iy8lgu6QMYlBIUYq6
GK6kK0rdoG5QkpKUQRmUgYkMsuBzw9Pne//f8DzXlZpPpssiYsGzk4ioqYzY
YCP32cYsv5oiOnVO9zDPPl7wxzagL/UQrzjCW/7ZxvSDnuATJ/nCRHPEtH7T
KX5wjt+stqX1r15kRUVEhrWssy3rJr3Kdm6wiw22Ld2r99jPQw6y2ZbVwzrH
UeY5zlbbmU7qAqdY5AyXyiNmeeN3mvdc5FpjxJH/l9FPbit84Xrpe2w526Z+
d9vlJw+4bTu1HesftxNGlfeXvtl2bivoSrci63nNA1vBdqdb3B7ZwWd285X/
UBo+6w==
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/Ev+XPJn3JH8mcgAxOLLLLIoAxiULJgkcFlsSnKoAxXSFHq
lDIo6YpSN6hLSlKSMiiDMjCRQRZehqfX+/l9hufX0zqdHp0viogFz3ZJRGV5
RIZJ7rGRB/xKRrTqI93BHLt4zh9bj77QfbziAG8ZqYgh/aBH+MRxvrDUNqnf
9Aw/OMdvVtjS+lcvsqw0YolVrLat6JReYxMzbGOtbVN36l12c5+9rLMd6H59
xEHmOMwG26ke03lOsMApNtou9ay+YZr3XGSz7UEv6Seu8oXrXC6O2OC79x1+
Msut2ogT/+xQ/zg7ZlHC9//vbDuz5XXCWYE1vGbWlrfd6Xpnj2zhM9v5yj/k
4z2w
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj0oRQEYx+GXwXcGH4sMJN1SlEFJShID3YEMynDrDrcMvkpRysBkogzK
YJFEynCVulmuBYNkkUUGMpCBDGTgMZye/3l/nTqN6emRqYKImPW0lUQ8lkUk
+MIOvrObKzURX3af/ctBFpVHDHNVq7DH7GqmWMcM17QGe9JOcI5tXORxYcQy
u7yvspfr3K2KaPLdpp102+Yod7mnNWuHdsotywxz3NcSWt6edbvgAq95qLVo
t/ay2/3/f/OJR1qr9mpvuH1wi9/Mau1alEbsuBXzgJU80Tq0WjvrVs8cm3iq
dWkt9plbOy/ZybzWo/XYN24DvGOS51q/Nmo/uI3zmWleaUPahP3mNsNPzvOH
S/wDI1k+oA==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzjEohHEcx+H/WRySkiwyXBmurlxJSlKX5Aa64eoGZbgYrgwnSlHKcKab
KEoMFhnoynBJXZazYJAssshABjKQgQwew9vzvd+nt/di03PZYiSEMO9JRkN4
ag4hzlcO8IPDXOsI4dsetUNLCONsZJZlrdWetDuYZxcLXNdidtGOc5FJrnBL
67dL9hDLHOEGd7S0vW1nuMccD3jSEEKFeb+rLLDGw3bf8F7dXnC75DJvWNES
2p1dcnv4/9985rHWq73Zm26f3OUPq1qfFmkKYd8tyiO28VQb0Drtqls3a+zh
mTakJexztz5ecZB1LaWl7Fu3NO+Z4YU2puXsR7cpvnCG19qENmu/u83zi0v8
5Sr/AOOkPhc=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzjEohAEYx+H3TI6SRBYpyqAUJSlJSWIgRd1wZSDDFRFKUcrAZKIoUZRk
kTJcUZeFBYNkkUUGMpCBDKQ8hq/n973/vvqqhif6xxMRMelpyI94Koio5Sub
+cE2LpVGfOtOnSiM6GE+B7hsK9JpXcYhVjDDFVu1ntC1nGED57lua9KLupXL
7OAqN23dekP3cYcp7nPbltaHeohZZpjjrm1Mn+lpXnKONzzOi7jjoveH///m
M49KIup996bX3D65xR9mbY22vGTEnluSByzmia3ZVq6zbpXMsYantlZbnT53
a+QVW3hma7e161u3bt6zjxe2LltKP7oN8oUjvLb12kb1u9sUvzjLXy7wD4PR
PtU=
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/Gfs7gziCSLJGW4MlxJSpe6JDeQpAzKcGW48jdKUVeGM10p
ihJFCSnZDEqWs2CQLLLIQAYykIHkZXh6ve/76amna8hM9I+XhBCmPImyEJ5i
IcT5yjZ+sIOL1SF86y4dKQ+hh1EOsGCr0EO6hhnWMctlW6Oe1HHOMsEc12yt
Oq+TLLCTK9ywpfW67uM2B7nPLduQPtIZHjPLU+7YxnRRz/CS87zhni2n73Se
D//fzmce2Jb0m17lJzf5w5NICKXREHb9jvGQlTyp8h95r1Yfu9XzlE08syVt
zfrcrYVXbGfRlrKl9K1bmvfs44Wt2zaoH92G+cIRXtt6baP63W2aX5zjLxf4
Bz1uP8s=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj0oRQEYx+HXx+BjkZQsopThlkFJSlKS3IEoZVCKMtxCilKUMjApRVEi
lJB8bHeR7VowSBZZZCADGchAPIbT8zvvv1OncmC0eyQrIsY8tXkRTwURCb6y
gR9s5nxJxLdu0zmFER0sYA8XbEW6T5dykOVMcclWpcd0gpOs5QxXbfV6Tjdx
ga1c5rotqdd0F7fZy31u2fr0iR5kmimeccc2ojN6gpec5g33bDP6Ts/x4f/f
+cwD26J+0yv85AZ/eGjb1Ln5Ebss5BGLeWw70WU6zQqesZqn2RE1PPdexys2
MlMc0eK7Fn3rluQ9u3hha7f16ke3fr5wiNe2Ttuwfncb5xen+MtZ/gEHA0Dp

         "]], 
        Line3DBox[CompressedData["
1:eJwV0D0oxHEcx/EfMpxOeSoykIFFFllkUAZlUJI8pKQrFpeHrgySMlwZFKUo
ZbgyKIOSFKWEkpThihB1SrGQlBgkrxv+vT7/7/t/y9XEJrrHc0IIU57FSAi5
0RCSjHCFRVznXlkI5XbKruIWa7nDQ63e3rcbecRmnvFYa7Uv7Xam2ck7nuaG
kOGA9xcO8503JSH0+N2XHXf7ZYJ5BSHcar1agT3nVswkK3iv9WvV9rJbHdfY
wEdtUGuyU24t3GIbM9qQ1mHvunXxgH181mLakH3iNsILxvmqjWoJO+02wzvO
800b0xbsJ7el7Pdc5ac2qW3YH26b/OY2f7Rpbdf+cztgfqH/MfuuzWrndtTt
iqW8ZiUf+A9UJES8
         "]], 
        Line3DBox[CompressedData["
1:eJwV0D8oxHEcx+GvPyl/bnDdQAYsLLLIIoMyKIPCgpRQZ3F0dWWQlOHKoChF
KYMyKIOSFKUkEspwZThRpxQLSYlBPDdcz/v3ed3vhqsfm+6bKgghJH2WSkMo
qgghzTKuspIbPIiFUGVv2bXcYQP3eKw12Yd2C0/YxnOeah32jd3FDHuY5YXW
b+fsIb5wlO+81uL2l53gL1MsLvO7hSGUc95zlGlW8z4awqD36uwVt0aus5mP
2rDWam+5tXOHncxpI1q3ve/WyyMO8Fkb10bsM7c4r5jgqzahpeyM2yyzXOCb
Nqkt2k9uy/nvc42fWlLbtD/ctvnNXf5oM9q+/ed2xJKI/zH/rM1pl3bE7ZYx
3rGGD/wHjFhFEA==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj8oxAEYx+GXSDgGfwYyMLHIIosMyqAMShZZrkudxYlSlKQMilKUopRB
GZRBSYpSl0ioG5RBGSjFQlJikOeG6/n83u/9umtKjQ9kCiJiwmelNKIoEbHI
cq6zils8qomo0zu6kXts5gFPba36WLfzjJ28YNbWrW91L+/Yzwde2gb1kx7m
K1P84I0trb91hn+cYnFZRM42oxN6ntVcZD3vbMu6Sa+xhZts42VhRAd3PHdx
jz18qopIeq9PH7oN8IRDfLGN2JL63C3Na2b4Zhu1TeV/122WD1zgu23MtqSf
3Vbz3+cGv2yTtm396bbLH+7z1zZtO9RR4X+whNn8c3XEnO1KV7rlWMt7NvCR
/82OQ64=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj8ohHEcx/EvReikkIEMZ2KRRRYZlEEZRBZZsLC4pBQlKYOiFKUoZVAG
ZVCSotQlf0LdcKVcGZhYSEoMvG54er2f3+d5ep7kSKpvoiAiJl2rpRFFiYgl
JrjBKm7zuDqiVu/qJPfZyEOe2Zr1iW7lOdt5ybStU9/rbmbZyxyvbAP6WQ/x
laP84J1tTH/rFP84zeKyiIxtVpfrBVZziXXM2lZ0g15nE7fYwgfbtm7Tu+zg
Prv4aDvQPfqI/TzlIK8LI4Z54X6Mt0zxrTJi3HvT+e86m2OOi3y3TdiW9Yuz
tfzz3OSXbcq2oz+d7fGHB/y1zdiOdEG5f2AJ0/n7qoh5242ucJZhDR9Yzyf+
A4ddRII=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj8oRWEcx+EfA10h+ZOBFCYWWWSRQRmUgWSRRZa7cJVSlKQMtyhFKUoZ
lEEZlKSQkkjcMqhbru7AxCQpMXgMp+fzvt9O5zSOTQ5OFETElGc1EVFUGpFm
GTdYzW0eV0fU6V3dxH228JBntjZ9ojt4wS5e89LWozO6j48cYI43tmH9okf5
xnF+8N6W1N86xSiJmGExH2xzulwvsoZp1vPRtqKb9TpbucV2Zm3bulPvspv7
7OWT7UD36yMO8ZQjfLad6zF9xSTvmGLeltEz/9/mPHNc4m1hxDJfndf4zk1+
VUZMe29Hf7rb4w8P+GubtR3pwjL/wAQv/89VEQu2W13h7oG1zLKBef4BGcRE
fw==
         "]], 
        Line3DBox[CompressedData["
1:eJwVzz0oRQEYx+GXwWeub4sMV4pElDIxKDGgdGNgkCw2MthYWKQoMSiDMiiD
MsgiiyxMTCwsSLcrJYmUj8dwen7n/S/nJCemU1NZETHjaSiKWCmOSHKDLdxi
O+srI3Z0p95jNw/Yx2bbkU7pE47wjONss13oSX3FKd5wlr/ZEXN88L7IDJeZ
Wx7xVBGxpj/cNvnDbebb0rbd/y6J2GcJD1loy9iOdbXbKWt5zoTtxXapm9yu
/7+Ndyy1vdoedafbM7v5xkrbu+1LD7hlJSKGmMde27z/K9bnpRFVvGQN+20L
tjp97dbIW7bynku2dp3WHXxhF9+4auvRn7qP3xxkdlnEum1Y5+hRFnCMCU7w
DzsxQCM=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzj0oRgEYhuEXg/x+/i1SSJGIUjIwKDGgEAODsJjIYmNhkaLEoAzKoAzK
IIsssjAxsbBgEIkkUrgMp+vufTqdUzY21TeZFBHTnuqsiOVERDnXWc9NNrGq
MGJbt+pdtnOfXayzHep+fcwhnnKUjbZzPaEvOcVrzrDZdqNn9T0X+MQlttpe
9ar+5AZ/ucWklIgdpudE7DGXB8zM935BxJEucTthBc+YsL3YLnSt29X/v/GW
ebY328P/d92e2c53Ftk+bN+6xy05O2KAaey0zfnPHH2WG1HMC5ay2zZvq9RX
bjW8YQPvuGhr0o+6hS9s4ztXbB36S3fxh71MyYtYsw3qVD3MDI4wwXH+Adfj
P/I=
         "]], 
        Line3DBox[CompressedData["
1:eJwVzjsohmEcxuG/PoOczyySSJGIUl8GBuUwoCQGBslicZhsLCxSlBiUQRmU
QRlkkUUWJiYWFgwikUSKy/B2/d7nHp6nYmyqfzIlImZ8tVkRKzkRldxgI7eY
ZE1RxI5u03vs4AF72GA70gP6hMM84xibbRd6Ql9xmjecZYvtVs/pBy7ymcts
s73pNf3FTUZuxDbbbal6V2dwn/k8ZKetWB/rMp6yiudMJCIuWe//+v9tvGNB
QcR7YcTj/73OXtjBD5bYPm0/us9ZIjtikOnsts27L0+f50WU8pLl7LUt2Kr1
tbM63rKJ91yyJfWTbuUr2/nBVVuX/tY9/GU/U/Mj1m1DOk2PMJOjzOU4/wDU
aD4L
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{569, 614, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 570, 
         629, 5103, 5104, 5105, 5106, 5107, 5108, 5109, 599}], 
        Line3DBox[{571, 615, 5061, 5062, 5063, 5064, 5065, 5066, 572, 630, 
         5110, 5111, 5112, 5113, 5114, 5115, 600}], 
        Line3DBox[{573, 4956, 616, 5067, 5068, 5069, 5070, 5071, 5072, 574, 
         5005, 631, 5116, 5117, 5118, 5119, 5120, 5121, 601}], 
        Line3DBox[{575, 4957, 617, 5073, 5074, 5075, 5076, 5077, 576, 5006, 
         632, 5122, 5123, 5124, 5125, 5126, 602}], 
        Line3DBox[{577, 4958, 4959, 618, 5078, 5079, 5080, 5081, 5082, 578, 
         5007, 5008, 633, 5127, 5128, 5129, 5130, 5131, 603}], 
        Line3DBox[{579, 4960, 4961, 619, 5083, 5084, 5085, 5086, 580, 5009, 
         5010, 634, 5132, 5133, 5134, 5135, 604}], 
        Line3DBox[{581, 4962, 4963, 4964, 620, 5087, 5088, 5089, 5090, 582, 
         5011, 5012, 5013, 635, 5136, 5137, 5138, 5139, 605}], 
        Line3DBox[{583, 4965, 4966, 4967, 621, 5091, 5092, 5093, 584, 5014, 
         5015, 5016, 636, 5140, 5141, 5142, 606}], 
        Line3DBox[{585, 4968, 4969, 4970, 4971, 622, 5094, 5095, 5096, 586, 
         5017, 5018, 5019, 5020, 637, 5143, 5144, 5145, 607}], 
        Line3DBox[{587, 4972, 4973, 4974, 4975, 623, 5097, 5098, 588, 5021, 
         5022, 5023, 5024, 638, 5146, 5147, 608}], 
        Line3DBox[{589, 4976, 4977, 4978, 4979, 4980, 624, 5099, 5100, 590, 
         5025, 5026, 5027, 5028, 5029, 639, 5148, 5149, 609}], 
        Line3DBox[{591, 4981, 4982, 4983, 4984, 4985, 625, 5101, 592, 5030, 
         5031, 5032, 5033, 5034, 640, 5150, 610}], 
        Line3DBox[{593, 4986, 4987, 4988, 4989, 4990, 4991, 626, 5102, 594, 
         5035, 5036, 5037, 5038, 5039, 5040, 641, 5151, 611}], 
        Line3DBox[{595, 4992, 4993, 4994, 4995, 4996, 4997, 627, 596, 5041, 
         5042, 5043, 5044, 5045, 5046, 642, 612}], 
        Line3DBox[{597, 4998, 4999, 5000, 5001, 5002, 5003, 5004, 628, 598, 
         5047, 5048, 5049, 5050, 5051, 5052, 5053, 643, 613}], 
        Line3DBox[{644, 689, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 645, 
         704, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 674}], 
        Line3DBox[{646, 690, 5257, 5258, 5259, 5260, 5261, 5262, 647, 705, 
         5306, 5307, 5308, 5309, 5310, 5311, 675}], 
        Line3DBox[{648, 5152, 691, 5263, 5264, 5265, 5266, 5267, 5268, 649, 
         5201, 706, 5312, 5313, 5314, 5315, 5316, 5317, 676}], 
        Line3DBox[{650, 5153, 692, 5269, 5270, 5271, 5272, 5273, 651, 5202, 
         707, 5318, 5319, 5320, 5321, 5322, 677}], 
        Line3DBox[{652, 5154, 5155, 693, 5274, 5275, 5276, 5277, 5278, 653, 
         5203, 5204, 708, 5323, 5324, 5325, 5326, 5327, 678}], 
        Line3DBox[{654, 5156, 5157, 694, 5279, 5280, 5281, 5282, 655, 5205, 
         5206, 709, 5328, 5329, 5330, 5331, 679}], 
        Line3DBox[{656, 5158, 5159, 5160, 695, 5283, 5284, 5285, 5286, 657, 
         5207, 5208, 5209, 710, 5332, 5333, 5334, 5335, 680}], 
        Line3DBox[{658, 5161, 5162, 5163, 696, 5287, 5288, 5289, 659, 5210, 
         5211, 5212, 711, 5336, 5337, 5338, 681}], 
        Line3DBox[{660, 5164, 5165, 5166, 5167, 697, 5290, 5291, 5292, 661, 
         5213, 5214, 5215, 5216, 712, 5339, 5340, 5341, 682}], 
        Line3DBox[{662, 5168, 5169, 5170, 5171, 698, 5293, 5294, 663, 5217, 
         5218, 5219, 5220, 713, 5342, 5343, 683}], 
        Line3DBox[{664, 5172, 5173, 5174, 5175, 5176, 699, 5295, 5296, 665, 
         5221, 5222, 5223, 5224, 5225, 714, 5344, 5345, 684}], 
        Line3DBox[{666, 5177, 5178, 5179, 5180, 5181, 700, 5297, 667, 5226, 
         5227, 5228, 5229, 5230, 715, 5346, 685}], 
        Line3DBox[{668, 5182, 5183, 5184, 5185, 5186, 5187, 701, 5298, 669, 
         5231, 5232, 5233, 5234, 5235, 5236, 716, 5347, 686}], 
        Line3DBox[{670, 5188, 5189, 5190, 5191, 5192, 5193, 702, 671, 5237, 
         5238, 5239, 5240, 5241, 5242, 717, 687}], 
        Line3DBox[{672, 5194, 5195, 5196, 5197, 5198, 5199, 5200, 703, 673, 
         5243, 5244, 5245, 5246, 5247, 5248, 5249, 718, 688}], 
        Line3DBox[{719, 764, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 720, 
         777, 5461, 5462, 5463, 5464, 5465, 5466, 5467, 749}], 
        Line3DBox[{721, 765, 5421, 5422, 5423, 5424, 5425, 5426, 722, 778, 
         5468, 5469, 5470, 5471, 5472, 5473, 750}], 
        Line3DBox[{723, 5348, 766, 5427, 5428, 5429, 5430, 5431, 5432, 724, 
         5372, 779, 5474, 5475, 5476, 5477, 5478, 5479, 751}], 
        Line3DBox[{725, 5349, 767, 5433, 5434, 5435, 5436, 5437, 726, 5373, 
         780, 5480, 5481, 5482, 5483, 5484, 752}], 
        Line3DBox[{727, 5350, 5351, 768, 5438, 5439, 5440, 5441, 5442, 728, 
         5374, 5375, 781, 5485, 5486, 5487, 5488, 5489, 753}], 
        Line3DBox[{729, 5352, 5353, 769, 5443, 5444, 5445, 5446, 730, 5376, 
         5377, 782, 5490, 5491, 5492, 5493, 754}], 
        Line3DBox[{731, 5354, 5355, 5356, 770, 5447, 5448, 5449, 5450, 732, 
         5527, 5528, 5529, 792, 5494, 5495, 5496, 5497, 801}], 
        Line3DBox[{733, 5357, 5358, 5359, 771, 5451, 5452, 5453, 734, 5530, 
         5531, 5532, 5533, 793, 802}], 
        Line3DBox[{735, 5360, 5361, 5362, 5363, 772, 5454, 5455, 5456, 736, 
         5534, 5535, 809}], 
        Line3DBox[{737, 5364, 5365, 5366, 5367, 773, 5457, 5458, 738, 808}], 
        Line3DBox[{739, 5500, 5501, 5502, 5503, 5504, 790, 5459, 5460, 799}], 
        Line3DBox[{741, 5505, 5506, 5507, 5508, 5509, 5510, 791, 800}], 
        Line3DBox[{743, 5511, 5512, 5513, 5514, 5515, 5516, 805}], 
        Line3DBox[{745, 5517, 5518, 5519, 5520, 5521, 804}], 
        Line3DBox[{747, 5522, 5523, 5524, 5525, 5526, 
         803}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1: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
Iod7PGumqXlySpLlTtctLiw7x7XCWB4iQ5sqqB7M9/S5fwkXZp8emQkuvIHt
dhZeVDdj1pyfOs4NjbmEjpWdt6BSx6tNdUO+Qs5FP268Mgoo2vj6Nq7dyBSk
+rqvW69WMuxDT2pHr02PAlbk1pGp+UPzzZvf/Mk+6Ep0mQveuovBf1WRVI8f
lw0Q+LkPERzXSwor76FHpkmV6jqfNIeGBXjQ8Ye1YqPMfTBoDjJTvdFzwKrO
jgeODxefl9crwf1KZSY1l7LLNkvOdfHA8JPtsxJ1ZQzvuqJM9XOi6vKGp3kh
tUt73485FfxlPbRAzSXx6aazNx15sePKvqprFapw/yLqSnXSdp/RuDZeTAdP
SdL7PMRHnktcVHeV7crwEtgP6SPPtpEM1LCkxxlOzSWZc49UDpruh4TIId9/
V9Shet/xANUhvbxJt3A/4g9nrF3h1cDNNRoB1Lz6Z16uabiRD+uM1nBN02ni
bJrxNqrLM5vbyMnzgZe/2LiwRxPcc+6vqXk1WqyzhvUTHw68FxGTL9VCjI1b
KzWX7ghqLtQ28sH0dIWsfYw2dK5fPEF1i9dRDF9Y+TEjoyGs+PkRbpna2FDz
ymG743WDW/zo6Dg5E22hg3Zl/ipqXn30WGPxzIUfK4xHlJ4+fQyF92s2rfZd
x4mOwHJ+vBZSCfuooos/YdMS1LyaVRs7y0p/AN76rxJm5Z+g27dZn5pX2Xci
VprOHMBOfG33uqiHO89s3ah5lfN06El78X6kd6t18W3Xp8xfEQ3UvNq0/ljW
RIkevq8t+ML3yBItPjnPfKj1TDMT+s6ii47LJ16JXnCDwLXQ36HLZOx4Ma3H
7GmA+/JcMmIe/jhve+Wv/wIZNjtqx/KsjXFUdf3REo5IhP+9dkFsitK3+DLk
BV83heRMmu7en4nYx/l8S+ogGf6nfj16MWmGi1k0vDbvMnCoaHPexiYy9o3y
mcyceofmjRLmNPZ50Hv98eHW72Q07NV9PNRhASMDRfqPmUW4Pahd4+hOmXe2
Zb/d+tQKjGcufbh4sQzPjXZN3lam9L0zMreCu60R2K8T8GHvT1ym1//2ioOM
A6e/Psg7ZQuVUekgXa8a+CdtDVMvJGGP4JKzj+57zF09+trlXD3sWbmiZxRJ
OB7gaVT62g79ufXc/KONEGrMaE3tGIXxXJPcLa0PsE389X7K/ze8mH35KuVH
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
2sQHDYxVGiG7aLbLnDcGPTuq5w95k2B+K1/ih1oj+qcsIz7TxqPymPfpdC8S
5jw/39x/phECcj7xAlOJ+BtZs+mvBwlJ6kNno841wr/Em4XH7B6qWQsDlpNJ
KF1zI10Jb4CW0Y4MafZAXJ/RqylLIgGdGdcKYhvwwKWJhr8/FKSvsmKXE0kY
fvnkwlByA3aElNvwl0fA4/OGaNYEElgWo9JYsxqwNT2kgiM2Gr5tVcJZcSQY
ctw8uPdJA3wQ1EHjGofA9w7VkrEkPHbxFDv9ogGKb+hvD5xKxPwK/cP4aBJG
fVsNDYsaEKe0fsm75y7i7gkyriskYdPUzLnfq/Wg5jbeke/2ECUr3262vyRh
JSP75I/1Ddi+SfLniF8ofH8NP8ksIOGfTc351xsbkPupRWzhTARWCiRSTV+Q
EBvZdTWSuQHuHDtm/3FFQ+/jWf1Nz0l49MEh1Z6zAU+3h8ks9sZCi0q9KSef
hNBv9E3yfA1YeOr3fiQvAac2reeSf0rC6S7DzYvCDagbVuijs70LpqcKispf
SIjvDMkKca1HUZqT7tlfAUiaj3q3s5o8z+TMlMi712N10bziy7ZQvGpQyWGs
Io/freYPGz3qEfTR4qhNXzg23+n40/mJPF7cKzjsfevh+djjw3JSFF4xcGan
VpLA8J1Wd/5BPcKmbp18oB+LyGMl5ec+knDn945jt4Lr0bV/1xgDG/k525Cm
vFRB/t0PK/UuRNRjO9PZ9IApPxTu0Wnr6iChufuXEftEHbpdNftIagHgpU8K
6W4n4f6bywtXZ+rQtcX7uEZKCKhMeI7+bCPPPxJKw7ULdTjw251d61Y4cmbO
L5S0kmD7/J6U4Eodls62/JmViMKP2OlHYS3k8aKdWGpHXY+Sl4OXQhtiELs7
0diomYSmay2Rj+nrwa16sEjYMx7sr3iZtzaR4LSWUNjPWI/UWFkF8O96d13t
WOTcEAnq548dUIqpg1hwON0bIUvsTlOx3U/26+pZ5XH/o+isg6rqoiiOAiYI
SBmEKKGiKGGBsAQDEyxQQQUUsAhBEEFKuru7uxuUDpHu7nzAC5QwUPje99eb
+c2d8/Y9Z++z17pz5t6wNvzjMTMJOGiEaHFR6zczZLws/zBPjm7D0+vyI615
lphJNxz1nqauI7iKzie2Qf63vvKnWDuMbzexT5kig3X36iHbtDY4HT5F9CU6
w8C10jB/koypm++PVmW34UPyduGwU574VD6bmDNB3Q8HOOp/F7RhtNXnULSD
I8q2JgxLMbjhy9w3yv/nGf6pdtP6MzujW7avfnKfKz4/T5BOpfKI8LRWxxAX
ePCdkXA54oKbypnzsVSelU3/ypTfDTz+ImInzjpDvXJqNYTKT/Y1Z7/KcEfe
t6PdHVec4Dp15ZkXlbd//OH68KwnvgoGnTBWcsQW9Byz+5+HZREPanhB+9rk
PQ5NB6R5+iq/p3KDO43njp90gtevXoqhuAXi47bpnd2g4NzlHVs7851Rsumn
WUn6R1x00x84SuUit+x6TKRcUUJUDqY5bIapOMGu/Rv/f7eizn1/pRvG6t5o
XY75AHUbEdWdVM5+5fHusiseiOhK/u3EZYL5eUf93/+f6xjsvKbW5AkrV/u3
jQHGoOkVZ5mh8k7ikNtGkhck3N5NMbAYwcJA/EI7lROeFecnrXvi3uTbjEaF
UHhx/z7A8ZeCQ3O1amf4vKEadnDX86QQnN03nc1K5ccjE0f2XPSBxqDK65+b
QnDA4skAI5VrDAkn/9L0hfPXrGEn1WB0VaqH0FH5CaZ/Xj0Ofqhz/WLDmR+E
UjPy959rFKjy173ISfJH8VVOo9hdQThyZ+v4LJWnR4ptuDYE4NMW1aZjLwNx
iz79RReVf2PgrBDa4wdqbOba2gmYPszU4LtKQfT27Zxb/PwxFG5Qzf0vHn9i
V/5GUPn46x1nxpkCoWY6Pd3mG48OyUb9OCrnHPMrLnINwpfT2TTWR+PxyNTx
4P983PLQWbetIdjWcf6kcGUcftELsP8/jhiv+E1V21A0f/rh1fEgDlHR0fI+
VO5UKOcpsBEG03AZvCfHollovdh69f/zAFpd5gxBuIvdwhf9s2Cyg1TjSKTm
4SisVEeDwS3GtY9eOQs02oyLGVQea9+sJ5ETiu3vfptWcWThFKe+fTOVO//M
nNliH44x21v1qxmZoBdbtZuk8i5+t6MdDyKR//DalNrJTGgWupMXqXy6h778
un8UrHvIZhXZGbDxF6paofIni3q7kyyjYfzpVvke8QxMJH7Z+E7lwkne53YM
hKJPxuHzbVIBEst587cPURBy1K28mSYCPQOsJ//GFqA+68q7p1Rurf2LqYY1
CkuJ/j8jVAowUkT7OJHKF59MsXIJRePonl7JcywF0HJl1p+icv+o3Xf1JGPw
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
F2ED9xokLWZwXTCvPyOaer1lEz9/fx7UGqY7KAYzGFZ+rZuVNIPo8FGx74qp
1Pr/6PzPfhYrK118XtT7Fjwm5M0Wlw5ty7fyfOazKHc/eexU0jSk3wTTs/3K
BKl+swmf4SyiTualFmdO4w2vlMCKQDYEdV8cX38xi9cNuz24qfMtbyLN+O3/
c9jLRtaFT2YhTu9TqV42jUcrdntsTXNxtSrG4da9WYx07zhlWzuNmctH4g/E
5uHK220PKq7OQmjzfK9d0zTqSu63zy6lwKTGoePoFQJoFJ336NdPoWZKjvao
bDo+6T4Z2yZNwMyFV76/W6fAmyQxdM0jE6f9D6lVixPAsZ+vTKt3Cr4t+kLR
pCx8/dCqoXKUAOFAGcfckSn8rT0ttJUtB00tS2vNBwgwJnUOT0xPwTLj9ov7
krm4iHJZHk4Cvih/yF4iTlHjWtdwUM/DSNea/A1GAu45Xf0xvTQF4cFE782u
KVC5fe8l5woBL8SeJwevTMKcr7+Epy0Nn0QDdiYRCdiUEV/99+8knheclNnH
nollS3ct9ikC3vN5Vl+km0Kp0XnBX2lZiLrL5Kg2SMBacmqQ3s4pPLj1bqdC
azY0Ix0/OXQQkP/zn5jF7imYBoS/cPueg7QvP7VdvhGo/mLDRn/vFC5JLnVm
seahdWHl2psKAh7IxphePjCFnX7RTFv2pOC7xaGZXt85pK6nqPEdmcRMjvbw
z3tpOGOtE8/iNoe/1Utrd09Ogl2jrbHBMwPZOUuhh+3msJOwKe71mUmw6rgJ
lmplYaAuoI/LfA79ZsZXX8pM4ncYac7alqrTrCpfk9/NQX76wcCNy5Pwlgl+
JRKdg023dJ+Fv5nDwXtcN9hvTmLkqI5adVkuNs8eaDvyfA7EPVFuNXcn4VWb
wq8ZngzfSpJC0KF5VO+2aGl5PoFKd09ejdZUiGwZiXrLNY8m14prX19PIEsu
ZZvspgw8fcUxIMg+D5pPJqOJBhO4v+zRYLU3C2oFSVs/M87Dt1rt09sPEzhu
KyZ9k6rf4uWPnTm+ZR7PRf34+KwmkNN8upD2Rg4Kc0vfW6zP4TSre06x/QSa
nQdY457nYslovSt1dQ56JgeEJN0m8PPPiSIp7mT41QsoucfP4zDdX4+jCeO4
5q8hl3YpFcZJP479jphHV9Xc+6m0cfhl59lv0knH653HKi8GzePVz+dvnHLH
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
Uo24tm9a//87TGmpOSnbxDaErLm/U91Wi6gDnQxCRH3YfrqK7Chvw8vDqkGV
0nVoZOYt6Uoiw3DhrltfdxsCy2WGe84V44E0T+IrPgpkaoxiaY2b8fdHnECi
Rymoen6bSXJQILQl1k/bvhkTBw19twyVQ8do1eMK4ZPkLYdfHPjYDIlrJZyz
/pVoDc8Rz99BwVj+L0/15Ga0OOhzviquwuX3FXFWv8nIuLgm8L2sGU7vTw5n
T1Sjx870tA+ZWL/2vP+OrmbUvctcdaWuBblx4dyWKTKCL/KcdJpuhq9Q+ge/
tkLMLFH5byoQuSPmlgPHWgOM+x4pRv8phjXZ5ds4KJiK2lvWu7MR/YpPW5WE
yiC7JzlfSJLIs39dfTg5GpHEqCL36lYFvFNu0Y8co4D689HHZOFGTN2l0fOp
qsTmCrvAT6IOUwq/ilRkGqH1cO5y0EAVZOU5z79hp2DV9+3fU2qNeFnn/kCF
VI25h/vjDAlf+DNsJjPpbiPuxJcJxtoWgFsnaX5WjwLZPD8u/d46+LZ8ka3x
LsLU32+txf9RYMkirD0/U4fk7j5+9/ASxLMI1++8RcHTnQei6dfq8OHu6tPl
tDJwMzeutapSYG9CsenaXo/2P1LZn0srsJYp6ER3ichH46Nvz7DWg+PGnoaY
2Uqo/+cZW3mWAp6CFRk5vno4Wn7r8l+pwpkCdg+KOAWf35CuL4jX421//dFU
lXzcb6F1prOm4LXzefarf2pw4/VSq9H5QtSfGLZMtaDgj5982xJtLSp6bK+N
nSoG7ZOL3L0mFFTtlFeX2l+LT/IpV/4IlWKkL/SDvQEFYYfolKUP1yJIReJ2
Pnc5bh5o38i9R8F09uQ9kkQt5AWSdzrQVEJN//pbk9sU2An7y14/X4uD+uru
K1urYN0ifildjQLfq88DDNVq0XemqM7nZB5ihK2G67wpcNi9ZZXpbjUs3SoM
ZFgK8FtQs4XNjYI13bhvNE+I+7DBmJq0XIj1oEPqPx0o0LTk215jVY31pw3t
LfXFOHuuysGI0Ptepnvs3LtqNKXsZgqJKsXH/PjXpoTeb+0x5yx9qtF9py6Z
zrocWy+03qYm9OpZCQ2ZhFbjrKLLd1rhShQsZciIPaLgnEuQ5eHEahzgHmlz
lsjFtffbFfaGU6CSU7Br/2olrnGdmjmxngdqB/nV30EUHD2zrJu8WYlkm/eO
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
wM8zH1hp9uZhjwKDSl0Tgcqz6bJqTflI1rK26VXIBv1TxSSNLgL2HhsY35Xk
4dLmtyK8H/LI882i258cz+juDELKJA/amVc9LhVlQ/sifeDzHnK+6WlNM09z
UTXjxhfQmoMCefb3PaTHPKjbO6j6P+/9S2yKrobcrT4IXFdkLk+eR+96yjj5
HiWiaZep+cu7Xuh8+WW3LhkHthd/diiQJeNYcl/usRhPCLFsiQ0lvTndSzJ2
LgYtrNA2KyrEzGHNT9X55LlZdrTqxVTR//bxv1u/96HcfB703zSFh5D3haln
ZdcLnTxMTNJHCl4j73N+erwmud/Wmg2fzU0r+P/c/1m2/Ir8KyUoPpG1khVO
xrEety0PH5VDwO0MW1pGKYZTlz8MviLzgcOxaf0fKuHvv1/mzdKStFpTLr8h
ryi+0xQS//4RYFvxei8m9Fm6Vkjz0O17JyDmavme6s/3/tyYuu6rdCVl7xyL
/BnoF2qmUb1S5mLfm9e/pEWU1jYevHcGaiolKVS32lUpfSP9u3S189WpuXh5
HN3+25jq3AvNDprjq9LV1S3xj/vk8cjRy5DqYe475/5u/iVdK8leLlR9Ef46
lbRUP6dGE0J/nwYlLqav0r9dxJrrl2ioztVhUvlymBb9RcNZ2zarQvPv+z9/
ST88yMSfrvhHmntnVt+bOnXs5lv3iOp/lLWttvSuQVPg5+zYj+o4o2B6n+pr
Vneq97+gx5eKA17pf9Whyl5tSfV5ioy/oMpf6f3mXu0O37Wwfqt+9SrpDm5c
f9S30ELw+OuxsM3a6DUwLKW6xuhakS3rGMHt/HK5SFwbDrpX86muljh1bfDH
ehRIPVrbe1kbm/6ey6T6v0JX7ctsNOAXy7IwsNbDvrsufX9IJy58fGImRYed
T4WNDfz0YNPN0E71R6ePRL64vQ54FHDNIE8P4TQ2jVT/cNi2JixgI95uWtYy
6NXDm+/dlVS3kxK7GTRDgy4+7z12QdchF+OX85v0fZ3/aPoU6JHhPPK1P+k6
ztreSqa6xN/qSM40JiiwCdWJl1xHw9kdUVQPGrKRVmdmxt4c/devW66jeX1b
INUFZbwo8sfZ0Kbtc50Yvg7V5lteVJ9ckBXbmboGTyw9zldzGKAx6NPFX6Q3
2/GnvZNmAEPsq4iZXQZIa104S/Wb7MtCj7rWY+Gx29dNxw1AI9V1guocx/NC
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
/5/m/wXCEihp
      "]], Axes -> True, AxesLabel -> {
      FormBox["\"time\"", TraditionalForm], 
      FormBox["\"density\"", TraditionalForm], 
      FormBox["\"distance\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {363.23211712409363`, 222.05376815846813`}, ImageSizeRaw -> 
    Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
    PlotRange -> {{1., 50.}, {1., 3.}, {-14.411895984405271`, 
     2.7609653453754004`}}, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {1.9876374474940082`, 2.490470964522012, 
     1.1387939902336603`}, ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{"0.1`", "1", "2"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.12202865833333335`, 0.14283175833333334`, 
                    0.064190125], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1830429875, 0.21424763749999998, \
0.0962851875]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.699853404940195*^9, 3.6998534252442384`*^9}, 
   3.6998534654762683`*^9, 3.699853520540136*^9, 3.6998535703060555`*^9, 
   3.699853659525604*^9, {3.699853703509034*^9, 3.6998537401967545`*^9}, 
   3.699853779561277*^9, 3.6998551605056396`*^9}]
}, Open  ]]
},
WindowSize->{3840, 2036},
WindowMargins->{{-11, Automatic}, {Automatic, -11}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2170, 50, 682, "Input",
 InitializationCell->True],
Cell[2731, 72, 897, 19, 45, "Input"],
Cell[CellGroupData[{
Cell[3653, 95, 154, 3, 45, "Input"],
Cell[3810, 100, 2444, 53, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6291, 158, 1358, 32, 104, "Input"],
Cell[7652, 192, 458565, 9146, 671, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466254, 9343, 992, 26, 45, "Input"],
Cell[467249, 9371, 358260, 6112, 395, "Output"]
}, Open  ]]
}
]
*)

